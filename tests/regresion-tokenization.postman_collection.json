{
	"info": {
		"name": "Regresión - tokenization",
		"_postman_id": "3b1cc5c5-7a31-0f5e-421f-95bb4468f926",
		"description": "",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Reestablecimiento de la configuracion",
			"description": "",
			"item": [
				{
					"name": "00a - QAPI unset CS",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"site\": \"{{site}}\"\n}"
						},
						"url": {
							"raw": "{{qapi_url}}/sites/cs",
							"host": [
								"{{qapi_url}}"
							],
							"path": [
								"sites",
								"cs"
							]
						},
						"description": "POST call to set CS in a certain site"
					},
					"response": []
				},
				{
					"name": "00b - QAPI delete subsites",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"site\": \"{{site}}\"\n}"
						},
						"url": {
							"raw": "{{qapi_url}}/sites/subsites",
							"host": [
								"{{qapi_url}}"
							],
							"path": [
								"sites",
								"subsites"
							]
						},
						"description": "POST call to create subsites in a certain site"
					},
					"response": []
				},
				{
					"name": "00c - QAPI unset Porcentaje",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"site\": \"{{site}}\"\n}"
						},
						"url": {
							"raw": "{{qapi_url}}/sites/porcentaje",
							"host": [
								"{{qapi_url}}"
							],
							"path": [
								"sites",
								"porcentaje"
							]
						},
						"description": "POST call to set Porcentaje in a certain site and subsites"
					},
					"response": []
				},
				{
					"name": "00d - QAPI unset Dos Pasos",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"site\": \"{{site}}\",\n   \"medio_de_pago\" : \"1\"\n}"
						},
						"url": {
							"raw": "{{qapi_url}}/sites/dospasos",
							"host": [
								"{{qapi_url}}"
							],
							"path": [
								"sites",
								"dospasos"
							]
						},
						"description": "POST call to set CS in a certain site"
					},
					"response": []
				},
				{
					"name": "00e - QAPI unset Agregador",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"site\": \"{{site}}\"\n}"
						},
						"url": {
							"raw": "{{qapi_url}}/sites/agregador",
							"host": [
								"{{qapi_url}}"
							],
							"path": [
								"sites",
								"agregador"
							]
						},
						"description": "POST call to set CS in a certain site"
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"id": "be80160e-356c-475a-8304-3ef00a5f5c78",
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"id": "b67ca674-2b59-4cf0-a25c-bf2758dc6f80",
						"type": "text/javascript"
					}
				}
			]
		},
		{
			"name": "Pagos y devoluciones",
			"description": "",
			"item": [
				{
					"name": "1a - QAPI set Tokenization",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"site\": \"{{site}}\"\n}"
						},
						"url": {
							"raw": "{{qapi_url}}/sites/tokenization",
							"host": [
								"{{qapi_url}}"
							],
							"path": [
								"sites",
								"tokenization"
							]
						},
						"description": "POST call to set CS in a certain site"
					},
					"response": []
				},
				{
					"name": "1b - Replicate site",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"if (!tests[\"Status code is 200\"]) {",
									"console.log(jsonData);    ",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"disabled": true
							},
							{
								"key": "apikey",
								"value": "{{keypublic}}",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"card_number\" : \"4507990000004905\",\n    \"card_expiration_month\" : \"07\",\n    \"card_expiration_year\" : \"17\", \n    \"security_code\" : \"234\",\n    \"card_holder_name\" : \"Valentin Santiago Gomez\",\n    \"card_holder_identification\" : {\n       \"type\" : \"dni\",\n       \"number\" : \"23968498\"\n    },\n    \"fraud_detection\" : {\n        \"device_unique_identifier\": \"12345\"\n    }\n}"
						},
						"url": {
							"raw": "{{coretx_url}}/replication/site/{{site}}",
							"host": [
								"{{coretx_url}}"
							],
							"path": [
								"replication",
								"site",
								"{{site}}"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "1c - Creación de token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (responseBody) {",
									"    var jsonData = JSON.parse(responseBody);",
									"} else {",
									"    console.log('No se recibió respuesta con el formato esperado'); ",
									"}",
									"",
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"if (!tests[\"Status code is 201\"]) {",
									"    console.log('Alguna de las comprobaciones no dio resultados satisfactorios.');",
									"    if (jsonData) {",
									"        console.log('Se adjunta la respuesta recibida:');",
									"        console.log(jsonData);    ",
									"    } else {",
									"       console.log('Error al intentar parsear la respuesta obtenida. Se adjunta el cuerpo de la respuesta como fue recibido:');",
									"       console.log(responseBody);   ",
									"    }",
									"",
									"} else {",
									"",
									"    if (jsonData.id) {",
									"        console.log('Se creó el token con id ' + jsonData.id);",
									"        postman.setEnvironmentVariable(\"token\", jsonData.id);",
									"    } else {",
									"        console.log('No se encontró un id de token en la respuesta');",
									"    }",
									"    ",
									"    if (jsonData.bin) {",
									"        postman.setEnvironmentVariable(\"bin\", jsonData.bin);",
									"    }",
									"    ",
									"    if (pm.environment.get(\"token\")) {",
									"        console.log('Se configuró la variable de entorno token con el valor ' + pm.environment.get(\"token\")); ",
									"    } else {",
									"        console.log('No se pudo configurar correctamente la variable de entorno token');    ",
									"    }",
									"    ",
									"    if (pm.environment.get(\"bin\")) {",
									"        console.log('Se configuró la variable de entorno bin con el valor ' + pm.environment.get(\"bin\")); ",
									"    } else {",
									"        console.log('No se pudo configurar correctamente la variable de entorno bin');    ",
									"    }",
									"",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "apikey",
								"value": "{{keypublic}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"card_number\" : \"4509790112684851\",\n    \"card_expiration_month\" : \"07\",\n    \"card_expiration_year\" : \"19\", \n    \"security_code\" : \"234\",\n    \"card_holder_name\" : \"Valentin Santiago Gomez\",\n    \"card_holder_birthday\" : \"01012017\",\n    \"card_holder_door_number\": 348,\n    \"card_holder_identification\" : {\n       \"type\" : \"dni\",\n       \"number\" : \"23968498\"\n    },\n    \"fraud_detection\" : {\n        \"device_unique_identifier\": \"12345\"\n    }\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v2/tokens",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v2",
								"tokens"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "1d - Pago simple c/ customer id OK",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "08a727e8-741a-40d5-bf99-4bacea891574",
								"type": "text/javascript",
								"exec": [
									"if (responseBody) {",
									"    var jsonData = JSON.parse(responseBody);",
									"} else {",
									"    console.log('No se recibió respuesta con el formato esperado'); ",
									"}",
									"",
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"if (!tests[\"Status code is 201\"]) {",
									"    console.log('Alguna de las comprobaciones no dio resultados satisfactorios.');",
									"    ",
									"    if (jsonData) {",
									"        console.log('Se adjunta la respuesta recibida:');",
									"        console.log(jsonData);",
									"        ",
									"    } else {",
									"       console.log('Error al intentar parsear la respuesta obtenida. Se adjunta el cuerpo de la respuesta como fue recibido:');",
									"       console.log(responseBody);   ",
									"    }",
									"",
									"} else {",
									"",
									"    if (jsonData.id) {",
									"        console.log('Se creó el pago con customerid ' + jsonData.customer.id);",
									"        postman.setEnvironmentVariable(\"customerId\", jsonData.customer.id);",
									"    } else {",
									"        console.log('No se encontró un id de customer en la respuesta');",
									"    }",
									"    ",
									"    if (pm.environment.get(\"customerId\")) {",
									"        console.log('Se configuró la variable de entorno customerId con el valor ' + pm.environment.get(\"customerId\")); ",
									"    } else {",
									"        console.log('No se pudo configurar correctamente la variable de entorno customerId');    ",
									"    }",
									"    ",
									"        if (jsonData.id) {",
									"        console.log('Se creó el pago con id ' + jsonData.id);",
									"        postman.setEnvironmentVariable(\"chargeId\", jsonData.id);",
									"    } else {",
									"        console.log('No se encontró un id de transacción en la respuesta');",
									"    }",
									"    ",
									"    if (pm.environment.get(\"chargeId\")) {",
									"        console.log('Se configuró la variable de entorno chargeId con el valor ' + pm.environment.get(\"chargeId\")); ",
									"    } else {",
									"        console.log('No se pudo configurar correctamente la variable de entorno chargeId');    ",
									"    }",
									"    ",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "apikey",
								"value": "{{keyprivate}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"customer\": {\n      \"id\": \"morton{{$timestamp}}\"\n  },\n   \"site_transaction_id\": \"regrdev {{$timestamp}}\",\n   \"token\": \"{{token}}\",\n   \"payment_method_id\": 1,\n   \"bin\": \"{{bin}}\",\n   \"amount\": 20000,\n   \"currency\": \"ARS\",\n   \"installments\": 1,\n   \"description\": \"Prueba QA\",\n   \"payment_type\": \"single\",\n   \"establishment_name\" : \"prueba desa soft\",\n   \"sub_payments\": [\n     ]\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v2/payments",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v2",
								"payments"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "1e - QAPI check DB",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d6ebd195-c0c9-4b78-838b-7ec68bde576b",
								"type": "text/javascript",
								"exec": [
									"if (responseBody) {",
									"        ",
									"    tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"     if (!tests[\"Status code is 200\"]) {",
									"           ",
									"        console.log('No se recibio el status esperado. Se adjunta el cuerpo de la respuesta:');",
									"",
									"        console.log(responseBody);  ",
									"           ",
									"    }",
									"            ",
									"} else {",
									"           ",
									"    console.log('Error al no recibir respuesta.');",
									"           ",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"site\": \"{{site}}\",\n   \"charge_id\": \"{{chargeId}}\"\n}"
						},
						"url": {
							"raw": "{{qapi_url}}/tests/db",
							"host": [
								"{{qapi_url}}"
							],
							"path": [
								"tests",
								"db"
							]
						},
						"description": "POST check if an operation with these values exists in DB"
					},
					"response": []
				},
				{
					"name": "1f - Obtener token de tokenization",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "246e4d9e-f6ab-43e1-840e-ab581eadf888",
								"type": "text/javascript",
								"exec": [
									"if (responseBody) {",
									"    var jsonData = JSON.parse(responseBody);",
									"} else {",
									"    console.log('No se recibió respuesta con el formato esperado'); ",
									"}",
									"",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"if (!tests[\"Status code is 200\"]) {",
									"    console.log('Alguna de las comprobaciones no dio resultados satisfactorios.');",
									"    ",
									"    if (jsonData) {",
									"        console.log('Se adjunta la respuesta recibida:');",
									"        console.log(jsonData);",
									"        ",
									"    } else {",
									"       console.log('Error al intentar parsear la respuesta obtenida. Se adjunta el cuerpo de la respuesta como fue recibido:');",
									"       console.log(responseBody);   ",
									"    }",
									"",
									"} else {",
									"",
									"    if (jsonData.tokens[0].token) {",
									"        console.log('Se obtuvo el token (tokenizado) ' + jsonData.tokens[0].token);",
									"        postman.setEnvironmentVariable(\"tokenizated\", jsonData.tokens[0].token);",
									"    } else {",
									"        console.log('No se encontró un token en la respuesta');",
									"    }",
									"    ",
									"    if (pm.environment.get(\"tokenizated\")) {",
									"        console.log('Se configuró la variable de entorno tokenizated con el valor ' + pm.environment.get(\"tokenizated\")); ",
									"    } else {",
									"        console.log('No se pudo configurar correctamente la variable de entorno tokenizated');    ",
									"    }",
									"    ",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "apikey",
								"value": "{{keyprivate}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v2/usersite/{{customerId}}/cardtokens",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v2",
								"usersite",
								"{{customerId}}",
								"cardtokens"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "1g - Creación de token c/tokenization",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"token\", jsonData.id);",
									"postman.setEnvironmentVariable(\"bin\", jsonData.bin);",
									"",
									"tests[\"Status code is 200\"] = responseCode.code === 201;"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "apikey",
								"value": "{{keypublic}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"token\" : \"{{tokenizated}}\",\n\t\"security_code\" : \"123\",\n\t\"fraud_detection\" : {\n\t\t\"device_unique_identifier\": \"12345\"\n\t}\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v2/tokens",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v2",
								"tokens"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "1h - Pago simple  c/tokenization OK",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseBody) {",
									"    var jsonData = JSON.parse(responseBody);",
									"} else {",
									"    console.log('No se recibió respuesta con el formato esperado'); ",
									"}",
									"",
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"if (!tests[\"Status code is 201\"]) {",
									"    console.log('Alguna de las comprobaciones no dio resultados satisfactorios.');",
									"    ",
									"    if (jsonData) {",
									"        console.log('Se adjunta la respuesta recibida:');",
									"        console.log(jsonData);",
									"        ",
									"    } else {",
									"       console.log('Error al intentar parsear la respuesta obtenida. Se adjunta el cuerpo de la respuesta como fue recibido:');",
									"       console.log(responseBody);   ",
									"    }",
									"",
									"} else {",
									"",
									"    if (jsonData.id) {",
									"        console.log('Se creó el pago con id ' + jsonData.id);",
									"        postman.setEnvironmentVariable(\"chargeId\", jsonData.id);",
									"    } else {",
									"        console.log('No se encontró un id de transacción en la respuesta');",
									"    }",
									"    ",
									"    if (pm.environment.get(\"chargeId\")) {",
									"        console.log('Se configuró la variable de entorno chargeId con el valor ' + pm.environment.get(\"chargeId\")); ",
									"    } else {",
									"        console.log('No se pudo configurar correctamente la variable de entorno chargeId');    ",
									"    }",
									"    ",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "apikey",
								"value": "{{keyprivate}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"customer\": {\n      \"id\": \"{{customerId}}\"\n  },\n   \"site_transaction_id\": \"regrdev {{$timestamp}}\",\n   \"token\": \"{{token}}\",\n   \"payment_method_id\": 1,\n   \"bin\": \"{{bin}}\",\n   \"amount\": 20000,\n   \"currency\": \"ARS\",\n   \"installments\": 1,\n   \"description\": \"Prueba QA\",\n   \"payment_type\": \"single\",\n   \"establishment_name\" : \"prueba desa soft\",\n   \"sub_payments\": [\n     ]\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v2/payments",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v2",
								"payments"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "1i - Borrar token tokenizado",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bfbef6a2-1ac3-47f7-9033-40ae6f6c7f73",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 204\"] = responseCode.code === 204;",
									"",
									"if (!tests[\"Status code is 204\"]) {",
									"   ",
									"console.log('No se recibio el status esperado.');",
									"    ",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "apikey",
								"value": "{{keyprivate}}"
							}
						],
						"body": {},
						"url": {
							"raw": "{{base_url}}/api/v2/cardtokens/{{tokenizated}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v2",
								"cardtokens",
								"{{tokenizated}}"
							]
						},
						"description": null
					},
					"response": []
				}
			]
		},
		{
			"name": "Reestablecimiento de la configuración",
			"description": "",
			"item": [
				{
					"name": "final - QAPI unset Tokenization",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"site\": \"{{site}}\"\n}"
						},
						"url": {
							"raw": "{{qapi_url}}/sites/tokenization",
							"host": [
								"{{qapi_url}}"
							],
							"path": [
								"sites",
								"tokenization"
							]
						},
						"description": "POST call to set CS in a certain site"
					},
					"response": []
				},
				{
					"name": "final - Replicate site",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"disabled": true
							},
							{
								"key": "apikey",
								"value": "{{keypublic}}",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"card_number\" : \"4507990000004905\",\n    \"card_expiration_month\" : \"07\",\n    \"card_expiration_year\" : \"17\", \n    \"security_code\" : \"234\",\n    \"card_holder_name\" : \"Valentin Santiago Gomez\",\n    \"card_holder_identification\" : {\n       \"type\" : \"dni\",\n       \"number\" : \"23968498\"\n    },\n    \"fraud_detection\" : {\n        \"device_unique_identifier\": \"12345\"\n    }\n}"
						},
						"url": {
							"raw": "{{coretx_url}}/replication/site/{{site}}",
							"host": [
								"{{coretx_url}}"
							],
							"path": [
								"replication",
								"site",
								"{{site}}"
							]
						},
						"description": null
					},
					"response": []
				}
			]
		}
	]
}