{
	"info": {
		"_postman_id": "4d5e2cc9-e428-4fd5-b965-6559520042a1",
		"name": "Regresión - pago offline",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Reestablecimiento de la configuracion",
			"item": [
				{
					"name": "00a - QAPI unset CS",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"site\": \"{{site}}\"\n}"
						},
						"url": {
							"raw": "{{qapi_url}}/sites/cs",
							"host": [
								"{{qapi_url}}"
							],
							"path": [
								"sites",
								"cs"
							]
						},
						"description": "POST call to set CS in a certain site"
					},
					"response": []
				},
				{
					"name": "00b - QAPI delete subsites",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"site\": \"{{site}}\"\n}"
						},
						"url": {
							"raw": "{{qapi_url}}/sites/subsites",
							"host": [
								"{{qapi_url}}"
							],
							"path": [
								"sites",
								"subsites"
							]
						},
						"description": "POST call to create subsites in a certain site"
					},
					"response": []
				},
				{
					"name": "00c - QAPI unset Porcentaje",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"site\": \"{{site}}\"\n}"
						},
						"url": {
							"raw": "{{qapi_url}}/sites/porcentaje",
							"host": [
								"{{qapi_url}}"
							],
							"path": [
								"sites",
								"porcentaje"
							]
						},
						"description": "POST call to set Porcentaje in a certain site and subsites"
					},
					"response": []
				},
				{
					"name": "00d - QAPI unset Dos Pasos",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"site\": \"{{site}}\",\n   \"medio_de_pago\" : \"1\"\n}"
						},
						"url": {
							"raw": "{{qapi_url}}/sites/dospasos",
							"host": [
								"{{qapi_url}}"
							],
							"path": [
								"sites",
								"dospasos"
							]
						},
						"description": "POST call to set CS in a certain site"
					},
					"response": []
				},
				{
					"name": "00e - QAPI unset Agregador",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"site\": \"{{site}}\"\n}"
						},
						"url": {
							"raw": "{{qapi_url}}/sites/agregador",
							"host": [
								"{{qapi_url}}"
							],
							"path": [
								"sites",
								"agregador"
							]
						},
						"description": "POST call to set CS in a certain site"
					},
					"response": []
				},
				{
					"name": "00f - Replicate site",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"disabled": true
							},
							{
								"key": "apikey",
								"value": "{{keypublic}}",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"card_number\" : \"4507990000004905\",\n    \"card_expiration_month\" : \"07\",\n    \"card_expiration_year\" : \"17\", \n    \"security_code\" : \"234\",\n    \"card_holder_name\" : \"Valentin Santiago Gomez\",\n    \"card_holder_identification\" : {\n       \"type\" : \"dni\",\n       \"number\" : \"23968498\"\n    },\n    \"fraud_detection\" : {\n        \"device_unique_identifier\": \"12345\"\n    }\n}"
						},
						"url": {
							"raw": "{{replicator_url}}/replication/site/{{site}}",
							"host": [
								"{{replicator_url}}"
							],
							"path": [
								"replication",
								"site",
								"{{site}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Pago offline",
			"item": [
				{
					"name": "PMC",
					"item": [
						{
							"name": "16a - PMC - Creación de token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c5d16c86-360f-4af5-834e-6eed4101d1d2",
										"type": "text/javascript",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"token\", jsonData.id)",
											"",
											"tests[\"Status code is 201\"] = responseCode.code === 201;"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "apikey",
										"value": "{{keypublic}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"customer\" : {\n   \"name\" : \"Santiago Figueroa\",\n   \"identification\" : {\n       \"type\" : \"dni\",\n       \"number\" : \"23968498\"\n   }\n}\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/v2/tokens",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v2",
										"tokens"
									]
								}
							},
							"response": []
						},
						{
							"name": "16b- PMC - Pago offline",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e5fd7f36-0dc9-4203-9ada-95968354b511",
										"type": "text/javascript",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"chargeId\", jsonData.id)",
											"postman.setEnvironmentVariable(\"cod_trx\", jsonData.site_transaction_id)",
											"tests[\"Status code is 201\"] = responseCode.code === 201;",
											"",
											"if (responseCode.code != 201) {",
											"console.log(jsonData);    ",
											"}",
											"",
											"// Define the JSON Schema",
											"var pmcResponseSchema = {",
											"    \"required\": [",
											"          \"id\", ",
											"          \"site_transaction_id\",",
											"          \"payment_method_id\",",
											"          \"card_brand\",",
											"          \"amount\",",
											"          \"status\",",
											"          \"status_details\",",
											"          \"customer\",",
											"          \"bank_id\",",
											"          \"invoice_expiration\",",
											"          \"payment_mode\"",
											"    ],",
											"    \"properties\": {",
											"        \"id\": {\"type\": 'integer'},",
											"        \"site_transaction_id\" : {\"type\": 'string'},",
											"        \"payment_method_id\": {\"type\": 'integer'},",
											"        \"card_brand\": {\"type\": 'string'},",
											"        \"amount\": {\"type\":'integer'},",
											"        \"status\": {\"type\": 'string'},",
											"        \"status_details\":{",
											"            \"type\": 'object',",
											"            \"required\": [\"ticket\", \"card_authorization_code\", \"address_validation_code\", \"error\"],",
											"            \"properties\": {",
											"                \"ticket\": {\"type\": 'string'}",
											"            }",
											"        },",
											"        \"customer\":{",
											"            \"type\": 'object',",
											"            \"required\": [\"email\"],",
											"            \"properties\": {",
											"                \"email\": {\"type\": 'string'}",
											"            }",
											"        },",
											"        \"bank_id\": {\"type\": 'integer'},",
											"        \"invoice_expiration\": {\"type\": 'string'},",
											"        \"payment_mode\": {\"type\": 'string'}",
											"    }",
											"};",
											"",
											"tests[\"JSON Schema\"] = tv4.validate(jsonData,pmcResponseSchema);",
											"if (!tests[\"JSON Schema\"]){",
											"    console.log(\"Se detallan los errores encontrados en el formato del JSON: \\n\")        ",
											"    console.log(tv4.validateMultiple(jsonData, pmcResponseSchema))",
											"    console.log (\"Se detalla el JSON recibido:\")",
											"    console.log (jsonData)",
											"}"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "apikey",
										"value": "{{keyprivate}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"site_transaction_id\" : \"PMC {{$timestamp}}\",\n    \"token\" : \"{{token}}\",\n    \"payment_method_id\" : 41,\n    \"amount\" : 1000,\n    \"currency\" : \"ARS\",\n    \"email\" : \"asd@asd.com\",\n    \"bank_id\" : 1,\n    \"invoice_expiration\" : \"311222 2359\",\n    \"payment_mode\" : \"offline\",\n       \"fraud_detection\": {\n\t\t\"send_to_cs\": false\n   }\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/v2/payments",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v2",
										"payments"
									]
								}
							},
							"response": []
						},
						{
							"name": "1 - QAPI check DB",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n   \"site\": \"{{site}}\",\n   \"charge_id\": \"{{chargeId}}\"\n}"
								},
								"url": {
									"raw": "{{qapi_url}}/tests/db",
									"host": [
										"{{qapi_url}}"
									],
									"path": [
										"tests",
										"db"
									]
								},
								"description": "POST check if an operation with these values exists in DB"
							},
							"response": []
						},
						{
							"name": "16c- PMC - Aviso de pago",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8730f94a-d3e0-40f7-8303-a63962006135",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"if (responseCode.code != 200){",
											"    console.log (\"Response code differs from the expected. Received status code is \" + responseCode.code);",
											"}"
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\n}"
								},
								"url": {
									"raw": "{{pmc_url}}/notify/{{cod_trx}}/commerce/{{pmc_nrodecomercio}}",
									"host": [
										"{{pmc_url}}"
									],
									"path": [
										"notify",
										"{{cod_trx}}",
										"commerce",
										"{{pmc_nrodecomercio}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "16d- PMC - Consultar estado de tx - acreditada",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fe7f699d-5fcb-4a2e-9cda-6f30f9e266ea",
										"type": "text/javascript",
										"exec": [
											"var response = JSON.parse(responseBody);",
											"",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"if (responseCode.code != 200){",
											"    console.log (\"Response code differs from the expected. Received status code is \" + responseCode.code);",
											"    console.log (response);",
											"}",
											"",
											"pm.test(\"Assert expected tx status: 'accredited'\", function () {",
											"    pm.expect(response.status).to.eql(\"accredited\");",
											"    if (response.status != \"accredited\") {",
											"        console.log (\"Tx status differs from the expected\");",
											"        console.log (response);",
											"    }",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "apikey",
										"value": "{{keyprivate}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{base_url}}/api/v2/payments/{{chargeId}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v2",
										"payments",
										"{{chargeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "16e- PMC - Aviso de reversa",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2e7d37f4-8e3d-42de-87af-5d767012d08a",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"if (responseCode.code != 200){",
											"    console.log (\"Response code differs from the expected. Received status code is \" + responseCode.code);",
											"}"
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n}"
								},
								"url": {
									"raw": "{{pmc_url}}/reverse/{{cod_trx}}/commerce/{{pmc_nrodecomercio}}",
									"host": [
										"{{pmc_url}}"
									],
									"path": [
										"reverse",
										"{{cod_trx}}",
										"commerce",
										"{{pmc_nrodecomercio}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "16f- PMC - Consultar estado de tx - reversada",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b8140bf4-dba9-42c9-8e1c-9329e29bbc50",
										"type": "text/javascript",
										"exec": [
											"var response = JSON.parse(responseBody);",
											"",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"if (responseCode.code != 200){",
											"    console.log (\"Response code differs from the expected. Received status code is \" + responseCode.code);",
											"    console.log (response);",
											"}",
											"",
											"pm.test(\"Assert expected tx status: 'reversed'\", function () {",
											"    pm.expect(response.status).to.eql(\"reversed\");",
											"    if (response.status != \"reversed\") {",
											"        console.log (\"Tx status differs from the expected\");",
											"        console.log (response);",
											"    }",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "apikey",
										"value": "{{keyprivate}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{base_url}}/api/v2/payments/{{chargeId}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v2",
										"payments",
										"{{chargeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "16g- PMC - Pago offline PCI",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"chargeId\", jsonData.id);",
											"postman.setEnvironmentVariable(\"cod_trx\", jsonData.site_transaction_id)",
											"",
											"tests[\"Status code is 201\"] = responseCode.code === 201;",
											"",
											"if (responseCode.code != 201) {",
											"console.log(jsonData);    ",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "apikey",
										"value": "{{keyPCI}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"customer\" : {\n      \"name\" : \"Nombre Apellido\",\n      \"identification\" : {\n          \"type\" : \"dni\",\n          \"number\" : \"23968498\"\n      }\n  }, \n    \"site_transaction_id\" : \"{{$timestamp}}\",\n    \"token\" : \"{{token}}\",\n    \"payment_method_id\" : 41,\n    \"amount\" : 1000,\n    \"currency\" : \"ARS\",\n    \"email\" : \"asd@asd.com\",\n    \"bank_id\" : 1,\n    \"invoice_expiration\" : \"311219 2359\",\n    \"payment_mode\" : \"offline\",\n       \"fraud_detection\": {\n\t\t\"send_to_cs\": false\n   }\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/v2/payments",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v2",
										"payments"
									]
								}
							},
							"response": []
						},
						{
							"name": "1 - QAPI check DB",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n   \"site\": \"{{site}}\",\n   \"charge_id\": \"{{chargeId}}\"\n}"
								},
								"url": {
									"raw": "{{qapi_url}}/tests/db",
									"host": [
										"{{qapi_url}}"
									],
									"path": [
										"tests",
										"db"
									]
								},
								"description": "POST check if an operation with these values exists in DB"
							},
							"response": []
						},
						{
							"name": "16h- PMC - Aviso de reversa",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fe68d5ee-1d0e-4702-b18a-f48e04e79f5b",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"if (responseCode.code != 200){",
											"    console.log (\"Response code differs from the expected. Received status code is \" + responseCode.code);",
											"}"
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n}"
								},
								"url": {
									"raw": "{{pmc_url}}/reverse/{{cod_trx}}/commerce/{{pmc_nrodecomercio}}",
									"host": [
										"{{pmc_url}}"
									],
									"path": [
										"reverse",
										"{{cod_trx}}",
										"commerce",
										"{{pmc_nrodecomercio}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "16j- PMC - Consultar estado de tx - reversada",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b8140bf4-dba9-42c9-8e1c-9329e29bbc50",
										"type": "text/javascript",
										"exec": [
											"var response = JSON.parse(responseBody);",
											"",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"if (responseCode.code != 200){",
											"    console.log (\"Response code differs from the expected. Received status code is \" + responseCode.code);",
											"    console.log (response);",
											"}",
											"",
											"pm.test(\"Assert expected tx status: 'reversed'\", function () {",
											"    pm.expect(response.status).to.eql(\"reversed\");",
											"    if (response.status != \"reversed\") {",
											"        console.log (\"Tx status differs from the expected\");",
											"        console.log (response);",
											"    }",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "apikey",
										"value": "{{keyprivate}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{base_url}}/api/v2/payments/{{chargeId}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v2",
										"payments",
										"{{chargeId}}"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "34c176d3-3b09-4f6c-b945-cbaaebf9ab4e",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "826dce51-896d-450c-9998-46e1405dc74a",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "PMC - Reenvío de aviso de pago sobre tx acreditada",
					"item": [
						{
							"name": "17a - PMC - Creación de token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c5d16c86-360f-4af5-834e-6eed4101d1d2",
										"type": "text/javascript",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"token\", jsonData.id)",
											"",
											"tests[\"Status code is 201\"] = responseCode.code === 201;"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "apikey",
										"value": "{{keypublic}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"customer\" : {\n   \"name\" : \"Santiago Figueroa\",\n   \"identification\" : {\n       \"type\" : \"dni\",\n       \"number\" : \"23968498\"\n   }\n}\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/v2/tokens",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v2",
										"tokens"
									]
								}
							},
							"response": []
						},
						{
							"name": "17b- PMC - Pago offline",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e5fd7f36-0dc9-4203-9ada-95968354b511",
										"type": "text/javascript",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"chargeId\", jsonData.id)",
											"postman.setEnvironmentVariable(\"cod_trx\", jsonData.site_transaction_id)",
											"tests[\"Status code is 201\"] = responseCode.code === 201;",
											"",
											"if (responseCode.code != 201) {",
											"console.log(jsonData);    ",
											"}",
											"",
											"// Define the JSON Schema",
											"var pmcResponseSchema = {",
											"    \"required\": [",
											"          \"id\", ",
											"          \"site_transaction_id\",",
											"          \"payment_method_id\",",
											"          \"card_brand\",",
											"          \"amount\",",
											"          \"status\",",
											"          \"status_details\",",
											"          \"customer\",",
											"          \"bank_id\",",
											"          \"invoice_expiration\",",
											"          \"payment_mode\"",
											"    ],",
											"    \"properties\": {",
											"        \"id\": {\"type\": 'integer'},",
											"        \"site_transaction_id\" : {\"type\": 'string'},",
											"        \"payment_method_id\": {\"type\": 'integer'},",
											"        \"card_brand\": {\"type\": 'string'},",
											"        \"amount\": {\"type\":'integer'},",
											"        \"status\": {\"type\": 'string'},",
											"        \"status_details\":{",
											"            \"type\": 'object',",
											"            \"required\": [\"ticket\", \"card_authorization_code\", \"address_validation_code\", \"error\"],",
											"            \"properties\": {",
											"                \"ticket\": {\"type\": 'string'}",
											"            }",
											"        },",
											"        \"customer\":{",
											"            \"type\": 'object',",
											"            \"required\": [\"email\"],",
											"            \"properties\": {",
											"                \"email\": {\"type\": 'string'}",
											"            }",
											"        },",
											"        \"bank_id\": {\"type\": 'integer'},",
											"        \"invoice_expiration\": {\"type\": 'string'},",
											"        \"payment_mode\": {\"type\": 'string'}",
											"    }",
											"};",
											"",
											"tests[\"JSON Schema\"] = tv4.validate(jsonData,pmcResponseSchema);",
											"if (!tests[\"JSON Schema\"]){",
											"    console.log(\"Se detallan los errores encontrados en el formato del JSON: \\n\")        ",
											"    console.log(tv4.validateMultiple(jsonData, pmcResponseSchema))",
											"    console.log (\"Se detalla el JSON recibido:\")",
											"    console.log (jsonData)",
											"}"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "apikey",
										"value": "{{keyprivate}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"site_transaction_id\" : \"PMC {{$timestamp}}\",\n    \"token\" : \"{{token}}\",\n    \"payment_method_id\" : 41,\n    \"amount\" : 1000,\n    \"currency\" : \"ARS\",\n    \"email\" : \"asd@asd.com\",\n    \"bank_id\" : 1,\n    \"invoice_expiration\" : \"311222 2359\",\n    \"payment_mode\" : \"offline\",\n       \"fraud_detection\": {\n\t\t\"send_to_cs\": false\n   }\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/v2/payments",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v2",
										"payments"
									]
								}
							},
							"response": []
						},
						{
							"name": "17c- PMC - Aviso de pago",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8730f94a-d3e0-40f7-8303-a63962006135",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"if (responseCode.code != 200){",
											"    console.log (\"Response code differs from the expected. Received status code is \" + responseCode.code);",
											"}"
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\n}"
								},
								"url": {
									"raw": "{{pmc_url}}/notify/{{cod_trx}}/commerce/{{pmc_nrodecomercio}}",
									"host": [
										"{{pmc_url}}"
									],
									"path": [
										"notify",
										"{{cod_trx}}",
										"commerce",
										"{{pmc_nrodecomercio}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "17d- PMC - Consultar estado de tx - acreditada",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fe7f699d-5fcb-4a2e-9cda-6f30f9e266ea",
										"type": "text/javascript",
										"exec": [
											"var response = JSON.parse(responseBody);",
											"",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"if (responseCode.code != 200){",
											"    console.log (\"Response code differs from the expected. Received status code is \" + responseCode.code);",
											"    console.log (response);",
											"}",
											"",
											"pm.test(\"Assert expected tx status: 'accredited'\", function () {",
											"    pm.expect(response.status).to.eql(\"accredited\");",
											"    if (response.status != \"accredited\") {",
											"        console.log (\"Tx status differs from the expected\");",
											"        console.log (response);",
											"    }",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "apikey",
										"value": "{{keyprivate}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{base_url}}/api/v2/payments/{{chargeId}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v2",
										"payments",
										"{{chargeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "17e- PMC - Reenvío de aviso de pago",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8730f94a-d3e0-40f7-8303-a63962006135",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"if (responseCode.code != 200){",
											"    console.log (\"Response code differs from the expected. Received status code is \" + responseCode.code);",
											"}"
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\n}"
								},
								"url": {
									"raw": "{{pmc_url}}/notify/{{cod_trx}}/commerce/{{pmc_nrodecomercio}}",
									"host": [
										"{{pmc_url}}"
									],
									"path": [
										"notify",
										"{{cod_trx}}",
										"commerce",
										"{{pmc_nrodecomercio}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "17f- PMC - Consultar estado de tx - acreditada",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fe7f699d-5fcb-4a2e-9cda-6f30f9e266ea",
										"type": "text/javascript",
										"exec": [
											"var response = JSON.parse(responseBody);",
											"",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"if (responseCode.code != 200){",
											"    console.log (\"Response code differs from the expected. Received status code is \" + responseCode.code);",
											"    console.log (response);",
											"}",
											"",
											"pm.test(\"Assert expected tx status: 'accredited'\", function () {",
											"    pm.expect(response.status).to.eql(\"accredited\");",
											"    if (response.status != \"accredited\") {",
											"        console.log (\"Tx status differs from the expected\");",
											"        console.log (response);",
											"    }",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "apikey",
										"value": "{{keyprivate}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{base_url}}/api/v2/payments/{{chargeId}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v2",
										"payments",
										"{{chargeId}}"
									]
								}
							},
							"response": []
						}
					],
					"description": "Objetivo: verificar que se cumpla el criterio de aceptación: \"Si una transacción de PMC, se encuentra en estado \"Acreditada\" y se recibe un aviso de pago por parte de Banelco, la transacción se mantiene en estado \"Acreditada\".\n\nPara ello, se realiza una tx PMC y se envía un aviso de pago. Luego, se reenvía otro aviso de pago y se verifica su estado.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "9062d186-6276-4ac6-94f1-582864c844cb",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "b10d28ba-800c-4fff-8121-ae2438d31723",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "PMC - Reenvío de aviso de pago y de reversa sobre tx reversada",
					"item": [
						{
							"name": "18a - PMC - Creación de token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c5d16c86-360f-4af5-834e-6eed4101d1d2",
										"type": "text/javascript",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"token\", jsonData.id)",
											"",
											"tests[\"Status code is 201\"] = responseCode.code === 201;"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "apikey",
										"value": "{{keypublic}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"customer\" : {\n   \"name\" : \"Santiago Figueroa\",\n   \"identification\" : {\n       \"type\" : \"dni\",\n       \"number\" : \"23968498\"\n   }\n}\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/v2/tokens",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v2",
										"tokens"
									]
								}
							},
							"response": []
						},
						{
							"name": "18b- PMC - Pago offline",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e5fd7f36-0dc9-4203-9ada-95968354b511",
										"type": "text/javascript",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"chargeId\", jsonData.id)",
											"postman.setEnvironmentVariable(\"cod_trx\", jsonData.site_transaction_id)",
											"tests[\"Status code is 201\"] = responseCode.code === 201;",
											"",
											"if (responseCode.code != 201) {",
											"console.log(jsonData);    ",
											"}",
											"",
											"// Define the JSON Schema",
											"var pmcResponseSchema = {",
											"    \"required\": [",
											"          \"id\", ",
											"          \"site_transaction_id\",",
											"          \"payment_method_id\",",
											"          \"card_brand\",",
											"          \"amount\",",
											"          \"status\",",
											"          \"status_details\",",
											"          \"customer\",",
											"          \"bank_id\",",
											"          \"invoice_expiration\",",
											"          \"payment_mode\"",
											"    ],",
											"    \"properties\": {",
											"        \"id\": {\"type\": 'integer'},",
											"        \"site_transaction_id\" : {\"type\": 'string'},",
											"        \"payment_method_id\": {\"type\": 'integer'},",
											"        \"card_brand\": {\"type\": 'string'},",
											"        \"amount\": {\"type\":'integer'},",
											"        \"status\": {\"type\": 'string'},",
											"        \"status_details\":{",
											"            \"type\": 'object',",
											"            \"required\": [\"ticket\", \"card_authorization_code\", \"address_validation_code\", \"error\"],",
											"            \"properties\": {",
											"                \"ticket\": {\"type\": 'string'}",
											"            }",
											"        },",
											"        \"customer\":{",
											"            \"type\": 'object',",
											"            \"required\": [\"email\"],",
											"            \"properties\": {",
											"                \"email\": {\"type\": 'string'}",
											"            }",
											"        },",
											"        \"bank_id\": {\"type\": 'integer'},",
											"        \"invoice_expiration\": {\"type\": 'string'},",
											"        \"payment_mode\": {\"type\": 'string'}",
											"    }",
											"};",
											"",
											"tests[\"JSON Schema\"] = tv4.validate(jsonData,pmcResponseSchema);",
											"if (!tests[\"JSON Schema\"]){",
											"    console.log(\"Se detallan los errores encontrados en el formato del JSON: \\n\")        ",
											"    console.log(tv4.validateMultiple(jsonData, pmcResponseSchema))",
											"    console.log (\"Se detalla el JSON recibido:\")",
											"    console.log (jsonData)",
											"}"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "apikey",
										"value": "{{keyprivate}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"site_transaction_id\" : \"PMC {{$timestamp}}\",\n    \"token\" : \"{{token}}\",\n    \"payment_method_id\" : 41,\n    \"amount\" : 1000,\n    \"currency\" : \"ARS\",\n    \"email\" : \"asd@asd.com\",\n    \"bank_id\" : 1,\n    \"invoice_expiration\" : \"311222 2359\",\n    \"payment_mode\" : \"offline\",\n       \"fraud_detection\": {\n\t\t\"send_to_cs\": false\n   }\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/v2/payments",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v2",
										"payments"
									]
								}
							},
							"response": []
						},
						{
							"name": "18c- PMC - Aviso de reversa",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2e7d37f4-8e3d-42de-87af-5d767012d08a",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"if (responseCode.code != 200){",
											"    console.log (\"Response code differs from the expected. Received status code is \" + responseCode.code);",
											"}"
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n}"
								},
								"url": {
									"raw": "{{pmc_url}}/reverse/{{cod_trx}}/commerce/{{pmc_nrodecomercio}}",
									"host": [
										"{{pmc_url}}"
									],
									"path": [
										"reverse",
										"{{cod_trx}}",
										"commerce",
										"{{pmc_nrodecomercio}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "18d- PMC - Consultar estado de tx - reversada",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b8140bf4-dba9-42c9-8e1c-9329e29bbc50",
										"type": "text/javascript",
										"exec": [
											"var response = JSON.parse(responseBody);",
											"",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"if (responseCode.code != 200){",
											"    console.log (\"Response code differs from the expected. Received status code is \" + responseCode.code);",
											"    console.log (response);",
											"}",
											"",
											"pm.test(\"Assert expected tx status: 'reversed'\", function () {",
											"    pm.expect(response.status).to.eql(\"reversed\");",
											"    if (response.status != \"reversed\") {",
											"        console.log (\"Tx status differs from the expected\");",
											"        console.log (response);",
											"    }",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "apikey",
										"value": "{{keyprivate}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{base_url}}/api/v2/payments/{{chargeId}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v2",
										"payments",
										"{{chargeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "18e- PMC - Aviso de pago",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8730f94a-d3e0-40f7-8303-a63962006135",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"if (responseCode.code != 200){",
											"    console.log (\"Response code differs from the expected. Received status code is \" + responseCode.code);",
											"}"
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\n}"
								},
								"url": {
									"raw": "{{pmc_url}}/notify/{{cod_trx}}/commerce/{{pmc_nrodecomercio}}",
									"host": [
										"{{pmc_url}}"
									],
									"path": [
										"notify",
										"{{cod_trx}}",
										"commerce",
										"{{pmc_nrodecomercio}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "18f- PMC - Consultar estado de tx - reversada",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b8140bf4-dba9-42c9-8e1c-9329e29bbc50",
										"type": "text/javascript",
										"exec": [
											"var response = JSON.parse(responseBody);",
											"",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"if (responseCode.code != 200){",
											"    console.log (\"Response code differs from the expected. Received status code is \" + responseCode.code);",
											"    console.log (response);",
											"}",
											"",
											"pm.test(\"Assert expected tx status: 'reversed'\", function () {",
											"    pm.expect(response.status).to.eql(\"reversed\");",
											"    if (response.status != \"reversed\") {",
											"        console.log (\"Tx status differs from the expected\");",
											"        console.log (response);",
											"    }",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "apikey",
										"value": "{{keyprivate}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{base_url}}/api/v2/payments/{{chargeId}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v2",
										"payments",
										"{{chargeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "18g- PMC - Reenvío de aviso de reversa",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2e7d37f4-8e3d-42de-87af-5d767012d08a",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"if (responseCode.code != 200){",
											"    console.log (\"Response code differs from the expected. Received status code is \" + responseCode.code);",
											"}"
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n}"
								},
								"url": {
									"raw": "{{pmc_url}}/reverse/{{cod_trx}}/commerce/{{pmc_nrodecomercio}}",
									"host": [
										"{{pmc_url}}"
									],
									"path": [
										"reverse",
										"{{cod_trx}}",
										"commerce",
										"{{pmc_nrodecomercio}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "18h- PMC - Consultar estado de tx - reversada",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b8140bf4-dba9-42c9-8e1c-9329e29bbc50",
										"type": "text/javascript",
										"exec": [
											"var response = JSON.parse(responseBody);",
											"",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"if (responseCode.code != 200){",
											"    console.log (\"Response code differs from the expected. Received status code is \" + responseCode.code);",
											"    console.log (response);",
											"}",
											"",
											"pm.test(\"Assert expected tx status: 'reversed'\", function () {",
											"    pm.expect(response.status).to.eql(\"reversed\");",
											"    if (response.status != \"reversed\") {",
											"        console.log (\"Tx status differs from the expected\");",
											"        console.log (response);",
											"    }",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "apikey",
										"value": "{{keyprivate}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{base_url}}/api/v2/payments/{{chargeId}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v2",
										"payments",
										"{{chargeId}}"
									]
								}
							},
							"response": []
						}
					],
					"description": "Objetivo: verificar que se cumpla el criterio de aceptación: \"Si Banelco realiza un segundo aviso de reversa sobre la misma transacción, la misma se mantiene en estado \"Reversada\".\n\nPara ello, se realiza una tx PMC y se envía un aviso de reversa. Luego, se envía un aviso de pago y se verifica su estado, y luego se reenvía un aviso de reversa y se verifica el estado.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "7fb0c40a-95f7-40e6-8d2c-c082a5b0cb46",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "0675b625-7cb8-4be2-8efa-c9a6cc56f3c3",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "PMC - Test negativos",
					"item": [
						{
							"name": "19a - PMC - Negativo - Intentar un pago enviando campo vacío",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3d674eb2-449c-4b9e-8bbb-59d010540bcf",
										"type": "text/javascript",
										"exec": [
											"/* Se envía el campo invoice_expiration con con valor vacío, \"invoice_expiration\":\"\" */",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"",
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"if (responseCode.code != 400) {",
											"    console.log(jsonData);    ",
											"}",
											"",
											"var pmcBadRequestResponseSchema = {",
											"    \"required\": [",
											"          \"error_type\", ",
											"          \"validation_errors\"",
											"    ],",
											"    \"properties\": {",
											"        \"error_type\": {\"type\": 'string'},",
											"        \"validation_errors\": {",
											"            \"type\": 'array',",
											"            \"items\": [",
											"                        {",
											"                           \"type\": 'object',",
											"                            \"required\": [\"code\", \"param\"],",
											"                            \"properties\": {",
											"                                \"code\": {\"type\": 'string'},",
											"                                \"param\": {\"type\": 'string'}",
											"                            }  ",
											"                            ",
											"                        }",
											"                    ]",
											"        }",
											"    }",
											"};",
											"",
											"tests[\"JSON Schema\"] = tv4.validate(jsonData, pmcBadRequestResponseSchema);",
											"if (!tests[\"JSON Schema\"]){",
											"    console.log(\"Se detallan los errores encontrados en el formato del JSON: \\n\")        ",
											"    console.log(tv4.validateMultiple(jsonData, pmcBadRequestResponseSchema))",
											"    console.log (\"Se detalla el JSON recibido:\")",
											"    console.log (jsonData)",
											"}"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "apikey",
										"value": "{{keyPCI}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"customer\" : {\n      \"name\" : \"Nombre Apellido\",\n      \"identification\" : {\n          \"type\" : \"dni\",\n          \"number\" : \"23968498\"\n      }\n  }, \n    \"site_transaction_id\" : \"{{$timestamp}}\",\n    \"token\" : \"{{token}}\",\n    \"payment_method_id\" : 41,\n    \"amount\" : 1000,\n    \"currency\" : \"ARS\",\n    \"email\" : \"santi.figueroa@redb.ee\",\n    \"bank_id\" : 1,\n    \"invoice_expiration\" : \"\",\n    \"payment_mode\" : \"offline\",\n       \"fraud_detection\": {\n\t\t\"send_to_cs\": false\n   }\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/v2/payments",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v2",
										"payments"
									]
								}
							},
							"response": []
						},
						{
							"name": "19b- PMC - Negativo - Intentar pago con campo con formato inválido",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "25047440-3255-45bd-9f60-7bcb133ec962",
										"type": "text/javascript",
										"exec": [
											"/* Se envía el campo bank_id con un valor inválido, \"bank_id:0\" */",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"",
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"if (responseCode.code != 400) {",
											"    console.log(jsonData);    ",
											"}",
											"",
											"var pmcBadRequestResponseSchema = {",
											"    \"required\": [",
											"          \"error_type\", ",
											"          \"validation_errors\"",
											"    ],",
											"    \"properties\": {",
											"        \"error_type\": {\"type\": 'string'},",
											"        \"validation_errors\": {",
											"            \"type\": 'array',",
											"            \"items\": [",
											"                        {",
											"                           \"type\": 'object',",
											"                            \"required\": [\"code\", \"param\"],",
											"                            \"properties\": {",
											"                                \"code\": {\"type\": 'string'},",
											"                                \"param\": {\"type\": 'string'}",
											"                            }  ",
											"                            ",
											"                        }",
											"                    ]",
											"        }",
											"    }",
											"};",
											"",
											"tests[\"JSON Schema\"] = tv4.validate(jsonData, pmcBadRequestResponseSchema);",
											"if (!tests[\"JSON Schema\"]){",
											"    console.log(\"Se detallan los errores encontrados en el formato del JSON: \\n\")        ",
											"    console.log(tv4.validateMultiple(jsonData, pmcBadRequestResponseSchema))",
											"    console.log (\"Se detalla el JSON recibido:\")",
											"    console.log (jsonData)",
											"}"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "apikey",
										"value": "{{keyPCI}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"customer\" : {\n      \"name\" : \"Nombre Apellido\",\n      \"identification\" : {\n          \"type\" : \"dni\",\n          \"number\" : \"23968498\"\n      }\n  }, \n    \"site_transaction_id\" : \"{{$timestamp}}\",\n    \"token\" : \"{{token}}\",\n    \"payment_method_id\" : 41,\n    \"amount\" : 1000,\n    \"currency\" : \"ARS\",\n    \"email\" : \"asd@asd.com\",\n    \"bank_id\" : 0,\n    \"invoice_expiration\" : \"311219 2359\",\n    \"payment_mode\" : \"offline\",\n       \"fraud_detection\": {\n\t\t\"send_to_cs\": false\n   }\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/v2/payments",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v2",
										"payments"
									]
								}
							},
							"response": []
						},
						{
							"name": "19c- PMC - Negativo - Intentar pago sin enviar campo obligatorio",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d83de5c2-10f2-46b6-aace-b4f3b8426188",
										"type": "text/javascript",
										"exec": [
											"/* NO Se envía el campo invoice_expiration. */",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"",
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"if (responseCode.code != 400) {",
											"    console.log(jsonData);    ",
											"}",
											"",
											"var pmcBadRequestResponseSchema = {",
											"    \"required\": [",
											"          \"error_type\", ",
											"          \"validation_errors\"",
											"    ],",
											"    \"properties\": {",
											"        \"error_type\": {\"type\": 'string'},",
											"        \"validation_errors\": {",
											"            \"type\": 'array',",
											"            \"items\": [",
											"                        {",
											"                           \"type\": 'object',",
											"                            \"required\": [\"code\", \"param\"],",
											"                            \"properties\": {",
											"                                \"code\": {\"type\": 'string'},",
											"                                \"param\": {\"type\": 'string'}",
											"                            }  ",
											"                            ",
											"                        }",
											"                    ]",
											"        }",
											"    }",
											"};",
											"",
											"tests[\"JSON Schema\"] = tv4.validate(jsonData, pmcBadRequestResponseSchema);",
											"if (!tests[\"JSON Schema\"]){",
											"    console.log(\"Se detallan los errores encontrados en el formato del JSON: \\n\")        ",
											"    console.log(tv4.validateMultiple(jsonData, pmcBadRequestResponseSchema))",
											"    console.log (\"Se detalla el JSON recibido:\")",
											"    console.log (jsonData)",
											"}"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "apikey",
										"value": "{{keyPCI}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"customer\" : {\n      \"name\" : \"Nombre Apellido\",\n      \"identification\" : {\n          \"type\" : \"dni\",\n          \"number\" : \"23968498\"\n      }\n  }, \n    \"site_transaction_id\" : \"{{$timestamp}}\",\n    \"token\" : \"{{token}}\",\n    \"payment_method_id\" : 41,\n    \"amount\" : 1000,\n    \"currency\" : \"ARS\",\n    \"email\" : \"asd@asd.com\",\n    \"bank_id\" : 1,\n    \n    \"payment_mode\" : \"offline\",\n       \"fraud_detection\": {\n\t\t\"send_to_cs\": false\n   }\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/v2/payments",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v2",
										"payments"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "12a - Creación de token - pago offline",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"token\", jsonData.id)",
									"",
									"tests[\"Status code is 200\"] = responseCode.code === 201;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "apikey",
								"value": "{{keypublic}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\"customer\" : {\n   \"name\" : \"Santiago Figueroa\",\n   \"identification\" : {\n       \"type\" : \"dni\",\n       \"number\" : \"23968498\"\n   }\n}\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v2/tokens",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v2",
								"tokens"
							]
						}
					},
					"response": []
				},
				{
					"name": "12b - Pago offline - Rapipago",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"chargeId\", jsonData.id);",
									"postman.setEnvironmentVariable(\"cod_trx\", jsonData.site_transaction_id);",
									"postman.setEnvironmentVariable(\"barcode\", jsonData.barcode);",
									"",
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"if (responseCode.code != 201) {",
									"console.log(jsonData);    ",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "apikey",
								"value": "{{keyprivate}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"site_transaction_id\" : \"{{$timestamp}}\",\n    \"token\" : \"{{token}}\",\n    \"payment_mode\": \"offline\",\n    \"payment_method_id\" : 26, \n    \"amount\" : 1000,\n    \"currency\" : \"ARS\",\n    \"email\" : \"asd@asd.com\",\n    \"installments\" : \"02\",\n    \"invoice_expiration\" : \"191223\",\n    \"cod_p3\": \"12\",\n    \"cod_p4\": \"012\",\n    \"client\": \"12345678\",\n    \"surcharge\" : 1200,\n    \"fraud_detection\": {\n\t\t\"send_to_cs\": false\n   }\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v2/payments",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v2",
								"payments"
							]
						}
					},
					"response": []
				},
				{
					"name": "1 - QAPI check DB",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"site\": \"{{site}}\",\n   \"charge_id\": \"{{chargeId}}\"\n}"
						},
						"url": {
							"raw": "{{qapi_url}}/tests/db",
							"host": [
								"{{qapi_url}}"
							],
							"path": [
								"tests",
								"db"
							]
						},
						"description": "POST check if an operation with these values exists in DB"
					},
					"response": []
				},
				{
					"name": "12c - Aviso de pago - Rapipago",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"chargeId\", jsonData.id)",
									"",
									"tests[\"Response code is 0\"] = jsonData.codigo_respuesta === \"0\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "apikey",
								"value": "{{keyprivate}}",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id_numero\": \"42423424\",\n  \"cod_trx\": \"{{cod_trx}}\",\n  \"canal\": \"RAPIPAGO\",\n  \"importe\": \"00000000.00\",\n  \"barra\": \"{{barcode}}\",\n  \"fecha_hora_operacion\": \"2014-09-19 15:34:56\"\n}"
						},
						"url": {
							"raw": "{{resttx2_url}}/notifications/avisodepagorapipago",
							"host": [
								"{{resttx2_url}}"
							],
							"path": [
								"notifications",
								"avisodepagorapipago"
							]
						}
					},
					"response": []
				},
				{
					"name": "12d - Aviso de Reversa - Rapipago",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"chargeId\", jsonData.id)",
									"",
									"tests[\"Response code is 0\"] = jsonData.codigo_respuesta === \"0\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Consumer-Username",
								"value": "00111115_private"
							},
							{
								"key": "apikey",
								"value": "92b71cf711ca41f78362a7134f87ff65",
								"disabled": true
							},
							{
								"key": "X-Forwarded-For",
								"value": "123.45.67.89",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id_numero\": \"1234567890\",\n  \"cod_trx\": \"{{cod_trx}}\",\n  \"canal\": \"RAPIPAGO\",\n  \"importe\": \"00000000.00\",\n  \"barra\": \"{{barcode}}\",\n  \"fecha_hora_operacion\": \"2014-09-19 15:34:56\"\n}"
						},
						"url": {
							"raw": "{{resttx2_url}}/notifications/avisodereversarapipago",
							"host": [
								"{{resttx2_url}}"
							],
							"path": [
								"notifications",
								"avisodereversarapipago"
							]
						}
					},
					"response": []
				},
				{
					"name": "12e - Pago offline - Rapipago PCI",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"chargeId\", jsonData.id);",
									"postman.setEnvironmentVariable(\"cod_trx\", jsonData.site_transaction_id);",
									"postman.setEnvironmentVariable(\"barcode\", jsonData.barcode);",
									"",
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"if (responseCode.code != 201) {",
									"console.log(jsonData);    ",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "apikey",
								"value": "{{keyPCI}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"customer\" : {\n      \"name\" : \"Nombre Apellido\",\n      \"identification\" : {\n          \"type\" : \"dni\",\n          \"number\" : \"23968498\"\n      }\n  }, \n    \"site_transaction_id\" : \"{{$timestamp}}\",\n    \"payment_method_id\" : 26, \n    \"amount\" : 1000,\n    \"currency\" : \"ARS\",\n    \"payment_type\" : \"single\",\n    \"email\" : \"asd@asd.com\",\n    \"invoice_expiration\" : \"191123\",\n    \"cod_p3\": \"10\",\n    \"cod_p4\": \"134\",\n    \"client\": \"12345678\",\n    \"surcharge\": 1234567,\n    \"payment_mode\" : \"offline\",\n       \"fraud_detection\": {\n\t\t\"send_to_cs\": false\n   }\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v2/payments",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v2",
								"payments"
							]
						}
					},
					"response": []
				},
				{
					"name": "1 - QAPI check DB",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"site\": \"{{site}}\",\n   \"charge_id\": \"{{chargeId}}\"\n}"
						},
						"url": {
							"raw": "{{qapi_url}}/tests/db",
							"host": [
								"{{qapi_url}}"
							],
							"path": [
								"tests",
								"db"
							]
						},
						"description": "POST check if an operation with these values exists in DB"
					},
					"response": []
				},
				{
					"name": "13a - Creación de token - pago offline",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"token\", jsonData.id)",
									"",
									"tests[\"Status code is 200\"] = responseCode.code === 201;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "apikey",
								"value": "{{keypublic}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\"customer\" : {\n   \"name\" : \"Santiago Figueroa\",\n   \"identification\" : {\n       \"type\" : \"dni\",\n       \"number\" : \"23968498\"\n   }\n}\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v2/tokens",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v2",
								"tokens"
							]
						}
					},
					"response": []
				},
				{
					"name": "13b - Pago offline - Pago Facil",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"chargeId\", jsonData.id);",
									"postman.setEnvironmentVariable(\"cod_trx\", jsonData.site_transaction_id);",
									"postman.setEnvironmentVariable(\"barcode\", jsonData.barcode);",
									"",
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"if (responseCode.code != 201) {",
									"console.log(jsonData);    ",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "apikey",
								"value": "{{keyprivate}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"site_transaction_id\" : \"{{$timestamp}}\",\n    \"token\" : \"{{token}}\",\n    \"payment_mode\": \"offline\",\n    \"payment_method_id\" : 25, \n    \"amount\" : 1000,\n    \"currency\" : \"ARS\",\n    \"email\" : \"asd@asd.com\",\n    \"installments\" : \"02\",\n    \"invoice_expiration\" : \"191223\",\n    \"cod_p3\": \"12\",\n    \"cod_p4\": \"012\",\n    \"client\": \"12345678\",\n    \"surcharge\" : 1200,\n       \"fraud_detection\": {\n\t\t\"send_to_cs\": false\n   }\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v2/payments",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v2",
								"payments"
							]
						}
					},
					"response": []
				},
				{
					"name": "1 - QAPI check DB",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"site\": \"{{site}}\",\n   \"charge_id\": \"{{chargeId}}\"\n}"
						},
						"url": {
							"raw": "{{qapi_url}}/tests/db",
							"host": [
								"{{qapi_url}}"
							],
							"path": [
								"tests",
								"db"
							]
						},
						"description": "POST check if an operation with these values exists in DB"
					},
					"response": []
				},
				{
					"name": "13c - Aviso de Pago - Pago Facil",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"chargeId\", jsonData.id)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "apikey",
								"value": "{{keyprivate}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \n  \"id_operacion\": \"{{cod_trx}}\",\n  \"medio_pago\":\"cup\",\n  \"codigo_barras\":\"{{barcode}}\",\n  \"tipo_documento\":\"FAA\",\n  \"numero_documento\":\"001-45-6688\",\n  \"numero_usuario\":\"usuario123\",\n  \"fecha_pago\":\"20191123\",\n  \"hora_pago\":\"1233\",\n  \"moneda\":\"ARS\",\n  \"importe_abonado\":\"1000\",\n  \"terminal\":\"A23\",\n  \"numero_transaccion\":\"32234323\",\n  \"fecha_proceso_pf\" : \"20191124\"\n}"
						},
						"url": {
							"raw": "{{resttx2_url}}/notifications/avisodepagopagofacil",
							"host": [
								"{{resttx2_url}}"
							],
							"path": [
								"notifications",
								"avisodepagopagofacil"
							]
						}
					},
					"response": []
				},
				{
					"name": "13d - Aviso de Reversa - Pago Facil",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"chargeId\", jsonData.id)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "apikey",
								"value": "{{keyprivate}}",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \n  \"id_operacion\": \"{{cod_trx}}\",\n  \"medio_pago\":\"cup\",\n  \"codigo_barras\":\"{{barcode}}\",\n  \"tipo_documento\":\"FAA\",\n  \"numero_documento\":\"001-45-6688\",\n  \"numero_usuario\":\"usuario123\",\n  \"fecha_pago\":\"20141123\",\n  \"hora_pago\":\"1233\",\n  \"moneda\":\"ARS\",\n  \"importe_abonado\":\"12100\",\n  \"terminal\":\"A23\",\n  \"numero_transaccion\":\"32234323\",\n  \"fecha_proceso_pf\" : \"20141124\"\n}"
						},
						"url": {
							"raw": "{{resttx2_url}}/notifications/avisodereversapagofacil",
							"host": [
								"{{resttx2_url}}"
							],
							"path": [
								"notifications",
								"avisodereversapagofacil"
							]
						}
					},
					"response": []
				},
				{
					"name": "13e -  Pago offline - Pago Facil PCI",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"chargeId\", jsonData.id);",
									"postman.setEnvironmentVariable(\"cod_trx\", jsonData.site_transaction_id);",
									"postman.setEnvironmentVariable(\"barcode\", jsonData.barcode);",
									"",
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"if (responseCode.code != 201) {",
									"console.log(jsonData);    ",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "apikey",
								"value": "{{keyPCI}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"customer\" : {\n      \"name\" : \"Nombre Apellido\",\n      \"identification\" : {\n          \"type\" : \"dni\",\n          \"number\" : \"23968498\"\n      }\n  }, \n    \"site_transaction_id\" : \"{{$timestamp}}\",\n    \"token\" : \"{{token}}\",\n    \"payment_mode\": \"offline\",\n    \"payment_method_id\" : 25, \n    \"amount\" : 1000,\n    \"currency\" : \"ARS\",\n    \"email\" : \"asd@asd.com\",\n    \"installments\" : \"02\",\n    \"invoice_expiration\" : \"191223\",\n    \"cod_p3\": \"12\",\n    \"cod_p4\": \"012\",\n    \"client\": \"12345678\",\n    \"surcharge\" : 1200,\n       \"fraud_detection\": {\n\t\t\"send_to_cs\": false\n   }\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v2/payments",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v2",
								"payments"
							]
						}
					},
					"response": []
				},
				{
					"name": "1 - QAPI check DB",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"site\": \"{{site}}\",\n   \"charge_id\": \"{{chargeId}}\"\n}"
						},
						"url": {
							"raw": "{{qapi_url}}/tests/db",
							"host": [
								"{{qapi_url}}"
							],
							"path": [
								"tests",
								"db"
							]
						},
						"description": "POST check if an operation with these values exists in DB"
					},
					"response": []
				},
				{
					"name": "14a - Creación de token - pago offline",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"token\", jsonData.id)",
									"",
									"tests[\"Status code is 200\"] = responseCode.code === 201;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "apikey",
								"value": "{{keypublic}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\"customer\" : {\n   \"name\" : \"Santiago Figueroa\",\n   \"identification\" : {\n       \"type\" : \"dni\",\n       \"number\" : \"23968498\"\n   }\n}\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v2/tokens",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v2",
								"tokens"
							]
						}
					},
					"response": []
				},
				{
					"name": "14b - Pago offline - Cobro Express",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"postman.setGlobalVariable('randomExpress', Math.floor(Math.random() * 90000000 + 10000000));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"chargeId\", jsonData.id);",
									"postman.setEnvironmentVariable(\"cod_trx\", jsonData.site_transaction_id)",
									"",
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"if (responseCode.code != 201) {",
									"console.log(jsonData);    ",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "apikey",
								"value": "{{keyprivate}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"site_transaction_id\" : \"{{randomExpress}}\",\n    \"token\" : \"{{token}}\",\n    \"payment_method_id\" : 51,\n    \"payment_mode\" : \"offline\",\n    \"amount\" : 1000,\n    \"currency\" : \"ARS\",\n    \"email\" : \"asd@asd.com\",\n    \"invoice_expiration\" : \"191123\",\n    \"client\": \"12345678\",\n    \"surcharge\": 1001,\n    \"second_invoice_expiration\" : \"191223\",\n       \"fraud_detection\": {\n\t\t\"send_to_cs\": false\n   }\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v2/payments",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v2",
								"payments"
							]
						}
					},
					"response": []
				},
				{
					"name": "1 - QAPI check DB",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"site\": \"{{site}}\",\n   \"charge_id\": \"{{chargeId}}\"\n}"
						},
						"url": {
							"raw": "{{qapi_url}}/tests/db",
							"host": [
								"{{qapi_url}}"
							],
							"path": [
								"tests",
								"db"
							]
						},
						"description": "POST check if an operation with these values exists in DB"
					},
					"response": []
				},
				{
					"name": "14c - Pago offline - Cobro Express - PCI",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"postman.setGlobalVariable('randomExpress', Math.floor(Math.random() * 90000000 + 10000000));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"chargeId\", jsonData.id);",
									"postman.setEnvironmentVariable(\"cod_trx\", jsonData.site_transaction_id)",
									"",
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"if (responseCode.code != 201) {",
									"console.log(randomExpress);",
									"console.log(jsonData);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "apikey",
								"value": "{{keyPCI}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"customer\" : {\n      \"name\" : \"Nombre Apellido\",\n      \"identification\" : {\n          \"type\" : \"dni\",\n          \"number\" : \"23968498\"\n      }\n  }, \n    \"site_transaction_id\" : \"{{randomExpress}}\",\n    \"token\" : \"{{token}}\",\n    \"payment_method_id\" : 51, \n    \"amount\" : 1000,\n    \"currency\" : \"ARS\",\n    \"email\" : \"asd@asd.com\",\n    \"invoice_expiration\" : \"191123\",\n    \"client\": \"12345678\",\n    \"surcharge\": 1001,\n    \"second_invoice_expiration\" : \"191223\",\n    \"payment_mode\" : \"offline\",\n       \"fraud_detection\": {\n\t\t\"send_to_cs\": false\n   }\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v2/payments",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v2",
								"payments"
							]
						}
					},
					"response": []
				},
				{
					"name": "1 - QAPI check DB",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"site\": \"{{site}}\",\n   \"charge_id\": \"{{chargeId}}\"\n}"
						},
						"url": {
							"raw": "{{qapi_url}}/tests/db",
							"host": [
								"{{qapi_url}}"
							],
							"path": [
								"tests",
								"db"
							]
						},
						"description": "POST check if an operation with these values exists in DB"
					},
					"response": []
				},
				{
					"name": "15a - Creación de token - pago offline",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"token\", jsonData.id)",
									"",
									"tests[\"Status code is 200\"] = responseCode.code === 201;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "apikey",
								"value": "{{keypublic}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\"customer\" : {\n   \"name\" : \"Santiago Figueroa\",\n   \"identification\" : {\n       \"type\" : \"dni\",\n       \"number\" : \"23968498\"\n   }\n}\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v2/tokens",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v2",
								"tokens"
							]
						}
					},
					"response": []
				},
				{
					"name": "15b - Pago offline - Caja de Pagos",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"postman.setGlobalVariable('randomExpress', Math.floor(Math.random() * 90000000 + 10000000));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"chargeId\", jsonData.id)",
									"",
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"if (responseCode.code != 201) {",
									"console.log(jsonData);    ",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "apikey",
								"value": "{{keyprivate}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"site_transaction_id\" : \"{{randomExpress}}\",\n    \"token\" : \"{{token}}\",\n    \"payment_mode\": \"offline\",\n    \"payment_method_id\" : 48, \n    \"amount\" : 1000,\n    \"currency\" : \"ARS\",\n    \"email\" : \"asd@asd.com\",\n    \"invoice_expiration\" : \"191223\",\n    \"cod_p3\": \"1\",\n    \"client\": \"12345678\",\n    \"second_invoice_expiration\" : \"191223\",\n    \"surcharge\" : 1200,\n       \"fraud_detection\": {\n\t\t\"send_to_cs\": false\n   }\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v2/payments",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v2",
								"payments"
							]
						}
					},
					"response": []
				},
				{
					"name": "1 - QAPI check DB",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"site\": \"{{site}}\",\n   \"charge_id\": \"{{chargeId}}\"\n}"
						},
						"url": {
							"raw": "{{qapi_url}}/tests/db",
							"host": [
								"{{qapi_url}}"
							],
							"path": [
								"tests",
								"db"
							]
						},
						"description": "POST check if an operation with these values exists in DB"
					},
					"response": []
				},
				{
					"name": "15c - Pago offline - Caja de Pagos PCI",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"postman.setGlobalVariable('randomExpress', Math.floor(Math.random() * 90000000 + 10000000));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"chargeId\", jsonData.id);",
									"postman.setEnvironmentVariable(\"cod_trx\", jsonData.site_transaction_id)",
									"",
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"if (responseCode.code != 201) {",
									"console.log(jsonData);    ",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "apikey",
								"value": "{{keyPCI}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"customer\" : {\n      \"name\" : \"Nombre Apellido\",\n      \"identification\" : {\n          \"type\" : \"dni\",\n          \"number\" : \"23968498\"\n      }\n  }, \n    \"site_transaction_id\" : \"{{randomExpress}}\",\n    \"token\" : \"{{token}}\",\n    \"payment_mode\": \"offline\",\n    \"payment_method_id\" : 48, \n    \"amount\" : 1000,\n    \"currency\" : \"ARS\",\n    \"email\" : \"asd@asd.com\",\n    \"invoice_expiration\" : \"191223\",\n    \"cod_p3\": \"1\",\n    \"client\": \"12345678\",\n    \"second_invoice_expiration\" : \"191223\",\n    \"surcharge\" : 1200,\n       \"fraud_detection\": {\n\t\t\"send_to_cs\": false\n   }\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v2/payments",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v2",
								"payments"
							]
						}
					},
					"response": []
				},
				{
					"name": "1 - QAPI check DB",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"site\": \"{{site}}\",\n   \"charge_id\": \"{{chargeId}}\"\n}"
						},
						"url": {
							"raw": "{{qapi_url}}/tests/db",
							"host": [
								"{{qapi_url}}"
							],
							"path": [
								"tests",
								"db"
							]
						},
						"description": "POST check if an operation with these values exists in DB"
					},
					"response": []
				}
			]
		},
		{
			"name": "Reestablecimiento de la configuración - final",
			"item": [
				{
					"name": "final - QAPI delete subsites",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"site\": \"{{site}}\"\n}"
						},
						"url": {
							"raw": "{{qapi_url}}/sites/subsites",
							"host": [
								"{{qapi_url}}"
							],
							"path": [
								"sites",
								"subsites"
							]
						},
						"description": "POST call to create subsites in a certain site"
					},
					"response": []
				},
				{
					"name": "final - Replicate site",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"disabled": true
							},
							{
								"key": "apikey",
								"value": "{{keypublic}}",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"card_number\" : \"4507990000004905\",\n    \"card_expiration_month\" : \"07\",\n    \"card_expiration_year\" : \"17\", \n    \"security_code\" : \"234\",\n    \"card_holder_name\" : \"Valentin Santiago Gomez\",\n    \"card_holder_identification\" : {\n       \"type\" : \"dni\",\n       \"number\" : \"23968498\"\n    },\n    \"fraud_detection\" : {\n        \"device_unique_identifier\": \"12345\"\n    }\n}"
						},
						"url": {
							"raw": "{{replicator_url}}/replication/site/{{site}}",
							"host": [
								"{{replicator_url}}"
							],
							"path": [
								"replication",
								"site",
								"{{site}}"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "65b56f03-4f98-41ba-9658-bb447698edcf",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "4c84e0b6-5aa4-4b1a-958f-c8cb80daa00f",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}