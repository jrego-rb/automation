{
	"info": {
		"name": "Regresi√≥n - CyberSource",
		"_postman_id": "d06675c5-ff52-db2f-96c6-40656e7659b8",
		"description": "",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Reestablecimiento de la configuracion",
			"description": "",
			"item": [
				{
					"name": "00a - QAPI unset CS",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "99091eaf-d3e3-4248-904f-d6c2d7abc9e9",
								"type": "text/javascript",
								"exec": [
									"if (responseBody) {",
									"        ",
									"    tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"     if (!tests[\"Status code is 200\"]) {",
									"           ",
									"        console.log('No se recibio el status esperado. Se adjunta el cuerpo de la respuesta:');",
									"",
									"        console.log(responseBody);  ",
									"           ",
									"    }",
									"            ",
									"} else {",
									"           ",
									"    console.log('Error al no recibir respuesta.');",
									"           ",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"site\": \"{{site}}\"\n}"
						},
						"url": {
							"raw": "{{qapi_url}}/sites/cs",
							"host": [
								"{{qapi_url}}"
							],
							"path": [
								"sites",
								"cs"
							]
						},
						"description": "POST call to set CS in a certain site"
					},
					"response": []
				},
				{
					"name": "00b - QAPI delete subsites",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a007ea1b-b8fd-444b-91f2-e77261833322",
								"type": "text/javascript",
								"exec": [
									"if (responseBody) {",
									"        ",
									"    tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"     if (!tests[\"Status code is 200\"]) {",
									"           ",
									"        console.log('No se recibio el status esperado. Se adjunta el cuerpo de la respuesta:');",
									"",
									"        console.log(responseBody);  ",
									"           ",
									"    }",
									"            ",
									"} else {",
									"           ",
									"    console.log('Error al no recibir respuesta.');",
									"           ",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"site\": \"{{site}}\"\n}"
						},
						"url": {
							"raw": "{{qapi_url}}/sites/subsites",
							"host": [
								"{{qapi_url}}"
							],
							"path": [
								"sites",
								"subsites"
							]
						},
						"description": "POST call to create subsites in a certain site"
					},
					"response": []
				},
				{
					"name": "00c - QAPI unset Porcentaje",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "54c62030-e464-4e27-90a3-f55095a53424",
								"type": "text/javascript",
								"exec": [
									"if (responseBody) {",
									"        ",
									"    tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"     if (!tests[\"Status code is 200\"]) {",
									"           ",
									"        console.log('No se recibio el status esperado. Se adjunta el cuerpo de la respuesta:');",
									"",
									"        console.log(responseBody);  ",
									"           ",
									"    }",
									"            ",
									"} else {",
									"           ",
									"    console.log('Error al no recibir respuesta.');",
									"           ",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"site\": \"{{site}}\"\n}"
						},
						"url": {
							"raw": "{{qapi_url}}/sites/porcentaje",
							"host": [
								"{{qapi_url}}"
							],
							"path": [
								"sites",
								"porcentaje"
							]
						},
						"description": "POST call to set Porcentaje in a certain site and subsites"
					},
					"response": []
				},
				{
					"name": "00d - QAPI unset Dos Pasos",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d9f8cece-ea93-43f3-9966-e8b315ebfc11",
								"type": "text/javascript",
								"exec": [
									"if (responseBody) {",
									"        ",
									"    tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"     if (!tests[\"Status code is 200\"]) {",
									"           ",
									"        console.log('No se recibio el status esperado. Se adjunta el cuerpo de la respuesta:');",
									"",
									"        console.log(responseBody);  ",
									"           ",
									"    }",
									"            ",
									"} else {",
									"           ",
									"    console.log('Error al no recibir respuesta.');",
									"           ",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"site\": \"{{site}}\",\n   \"medio_de_pago\" : \"1\"\n}"
						},
						"url": {
							"raw": "{{qapi_url}}/sites/dospasos",
							"host": [
								"{{qapi_url}}"
							],
							"path": [
								"sites",
								"dospasos"
							]
						},
						"description": "POST call to set CS in a certain site"
					},
					"response": []
				},
				{
					"name": "00e - QAPI unset Agregador",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b8a68bf3-9ce0-4bbf-bef9-140a70bfb19d",
								"type": "text/javascript",
								"exec": [
									"if (responseBody) {",
									"        ",
									"    tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"     if (!tests[\"Status code is 200\"]) {",
									"           ",
									"        console.log('No se recibio el status esperado. Se adjunta el cuerpo de la respuesta:');",
									"",
									"        console.log(responseBody);  ",
									"           ",
									"    }",
									"            ",
									"} else {",
									"           ",
									"    console.log('Error al no recibir respuesta.');",
									"           ",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"site\": \"{{site}}\"\n}"
						},
						"url": {
							"raw": "{{qapi_url}}/sites/agregador",
							"host": [
								"{{qapi_url}}"
							],
							"path": [
								"sites",
								"agregador"
							]
						},
						"description": "POST call to set CS in a certain site"
					},
					"response": []
				},
				{
					"name": "00f - Replicate site",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8975f781-df13-4b09-af4f-89b74c799348",
								"type": "text/javascript",
								"exec": [
									"if (responseBody) {",
									"        ",
									"    tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"     if (!tests[\"Status code is 200\"]) {",
									"           ",
									"        console.log('No se recibio el status esperado. Se adjunta el cuerpo de la respuesta:');",
									"",
									"        console.log(responseBody);  ",
									"           ",
									"    }",
									"            ",
									"} else {",
									"           ",
									"    console.log('Error al no recibir respuesta.');",
									"           ",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"disabled": true
							},
							{
								"key": "apikey",
								"value": "{{keypublic}}",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"card_number\" : \"4507990000004905\",\n    \"card_expiration_month\" : \"07\",\n    \"card_expiration_year\" : \"17\", \n    \"security_code\" : \"234\",\n    \"card_holder_name\" : \"Valentin Santiago Gomez\",\n    \"card_holder_identification\" : {\n       \"type\" : \"dni\",\n       \"number\" : \"23968498\"\n    },\n    \"fraud_detection\" : {\n        \"device_unique_identifier\": \"12345\"\n    }\n}"
						},
						"url": {
							"raw": "{{coretx_url}}/replication/site/{{site}}",
							"host": [
								"{{coretx_url}}"
							],
							"path": [
								"replication",
								"site",
								"{{site}}"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "00g - QAPI create subsites",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "529a1842-ff11-44a4-816c-9c1a5b2ab39b",
								"type": "text/javascript",
								"exec": [
									"if (responseBody) {",
									"        ",
									"    tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"     if (!tests[\"Status code is 200\"]) {",
									"           ",
									"        console.log('No se recibio el status esperado. Se adjunta el cuerpo de la respuesta:');",
									"",
									"        console.log(responseBody);  ",
									"           ",
									"    }",
									"            ",
									"} else {",
									"           ",
									"    console.log('Error al no recibir respuesta.');",
									"           ",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"site\": \"{{site}}\",\n   \"subsites\": \"{{subsites}}\"\n}"
						},
						"url": {
							"raw": "{{qapi_url}}/sites/subsites",
							"host": [
								"{{qapi_url}}"
							],
							"path": [
								"sites",
								"subsites"
							]
						},
						"description": "POST call to create subsites in a certain site FALCON"
					},
					"response": []
				},
				{
					"name": "00h - Replicate site",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "57487a1c-1988-462a-844e-8977269a3694",
								"type": "text/javascript",
								"exec": [
									"if (responseBody) {",
									"        ",
									"    tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"     if (!tests[\"Status code is 200\"]) {",
									"           ",
									"        console.log('No se recibio el status esperado. Se adjunta el cuerpo de la respuesta:');",
									"",
									"        console.log(responseBody);  ",
									"           ",
									"    }",
									"            ",
									"} else {",
									"           ",
									"    console.log('Error al no recibir respuesta.');",
									"           ",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"disabled": true
							},
							{
								"key": "apikey",
								"value": "{{keypublic}}",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"card_number\" : \"4507990000004905\",\n    \"card_expiration_month\" : \"07\",\n    \"card_expiration_year\" : \"17\", \n    \"security_code\" : \"234\",\n    \"card_holder_name\" : \"Valentin Santiago Gomez\",\n    \"card_holder_identification\" : {\n       \"type\" : \"dni\",\n       \"number\" : \"23968498\"\n    },\n    \"fraud_detection\" : {\n        \"device_unique_identifier\": \"12345\"\n    }\n}"
						},
						"url": {
							"raw": "{{coretx_url}}/replication/site/{{site}}",
							"host": [
								"{{coretx_url}}"
							],
							"path": [
								"replication",
								"site",
								"{{site}}"
							]
						},
						"description": null
					},
					"response": []
				}
			]
		},
		{
			"name": "Pagos con Cybersource",
			"description": "",
			"item": [
				{
					"name": "06a - QAPI set CS VERDE Digital Goods",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "aa38d5bf-a586-41f1-b18d-fcfc7c562604",
								"type": "text/javascript",
								"exec": [
									"if (responseBody) {",
									"        ",
									"    tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"     if (!tests[\"Status code is 200\"]) {",
									"           ",
									"        console.log('No se recibio el status esperado. Se adjunta el cuerpo de la respuesta:');",
									"",
									"        console.log(responseBody);  ",
									"           ",
									"    }",
									"            ",
									"} else {",
									"           ",
									"    console.log('Error al no recibir respuesta.');",
									"           ",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"site\": \"{{site}}\",\n   \"security_key\": \"7INYIZLob1xKu4W4xhE7l8HYRgf13MQhIA8XtuRCxW0L9VNqIHXBJCvWMbHzbbv0n771oi3jMEL27xOtt0uD5fbeBRqR0N66QevdhXAQ+5KFHJvmoBZ3Xgq2jFTltP6flXN6PPlN3X6XYmPuBhJoqlrFfuo7sD24pM0qRbZFeRf1/13ZrYA+K3vNe6ATvyHr6TF2jMiK8RkstPl97AE95l7B2zYqxWpL2cpPh/WAFFReOFkgqnpo2NYqe3ZRfcYFMBTpJtmZVJu5gnEDBY7cxCp8jmLz5V9cphX5FO19KaBPkMvHFvVjGcXp8JOcL162sNo5hcKZNFCFIZ3ZFizVnQ==\",\n   \"modelo\" : 2,\n   \"mid\" : \"decidir_agregador\",\n   \"rubro\" : 1,\n   \"continuar\" : \"N\",\n   \"reverso\" : \"N\"\n}"
						},
						"url": {
							"raw": "{{qapi_url}}/sites/cs",
							"host": [
								"{{qapi_url}}"
							],
							"path": [
								"sites",
								"cs"
							]
						},
						"description": "POST call to set CS in a certain site"
					},
					"response": []
				},
				{
					"name": "06b - Replicate site",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7b5a0550-3a68-4868-9a04-e68b12ac9509",
								"type": "text/javascript",
								"exec": [
									"if (responseBody) {",
									"        ",
									"    tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"     if (!tests[\"Status code is 200\"]) {",
									"           ",
									"        console.log('No se recibio el status esperado. Se adjunta el cuerpo de la respuesta:');",
									"",
									"        console.log(responseBody);  ",
									"           ",
									"    }",
									"            ",
									"} else {",
									"           ",
									"    console.log('Error al no recibir respuesta.');",
									"           ",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"disabled": true
							},
							{
								"key": "apikey",
								"value": "{{keypublic}}",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"card_number\" : \"4507990000004905\",\n    \"card_expiration_month\" : \"07\",\n    \"card_expiration_year\" : \"17\", \n    \"security_code\" : \"234\",\n    \"card_holder_name\" : \"Valentin Santiago Gomez\",\n    \"card_holder_identification\" : {\n       \"type\" : \"dni\",\n       \"number\" : \"23968498\"\n    },\n    \"fraud_detection\" : {\n        \"device_unique_identifier\": \"12345\"\n    }\n}"
						},
						"url": {
							"raw": "{{coretx_url}}/replication/site/{{site}}",
							"host": [
								"{{coretx_url}}"
							],
							"path": [
								"replication",
								"site",
								"{{site}}"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "06c - Creacion de token pago",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2a3b09b1-e88e-4c5d-9c77-13889c122468",
								"type": "text/javascript",
								"exec": [
									"if (responseBody) {",
									"    var jsonData = JSON.parse(responseBody);",
									"} else {",
									"    console.log('No se recibi√≥ respuesta con el formato esperado'); ",
									"}",
									"",
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"if (!tests[\"Status code is 201\"]) {",
									"    console.log('Alguna de las comprobaciones no dio resultados satisfactorios.');",
									"    if (jsonData) {",
									"        console.log('Se adjunta la respuesta recibida:');",
									"        console.log(jsonData);    ",
									"    } else {",
									"       console.log('Error al intentar parsear la respuesta obtenida. Se adjunta el cuerpo de la respuesta como fue recibido:');",
									"       console.log(responseBody);   ",
									"    }",
									"",
									"} else {",
									"",
									"    if (jsonData.id) {",
									"        console.log('Se cre√≥ el token con id ' + jsonData.id);",
									"        postman.setEnvironmentVariable(\"token\", jsonData.id);",
									"    } else {",
									"        console.log('No se encontr√≥ un id de token en la respuesta');",
									"    }",
									"    ",
									"    if (jsonData.bin) {",
									"        postman.setEnvironmentVariable(\"bin\", jsonData.bin);",
									"    }",
									"    ",
									"    if (pm.environment.get(\"token\")) {",
									"        console.log('Se configur√≥ la variable de entorno token con el valor ' + pm.environment.get(\"token\")); ",
									"    } else {",
									"        console.log('No se pudo configurar correctamente la variable de entorno token');    ",
									"    }",
									"    ",
									"    if (pm.environment.get(\"bin\")) {",
									"        console.log('Se configur√≥ la variable de entorno bin con el valor ' + pm.environment.get(\"bin\")); ",
									"    } else {",
									"        console.log('No se pudo configurar correctamente la variable de entorno bin');    ",
									"    }",
									"",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "apikey",
								"value": "{{keypublic}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"card_number\" : \"4509790112684851\",\n    \"card_expiration_month\" : \"07\",\n    \"card_expiration_year\" : \"19\", \n    \"security_code\" : \"234\",\n    \"card_holder_name\" : \"Valentin Santiago Gomez\",\n    \"card_holder_identification\" : {\n       \"type\" : \"dni\",\n       \"number\" : \"23968498\"\n    },\n    \"fraud_detection\" : {\n        \"device_unique_identifier\": \"12345\"\n    }\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v2/tokens",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v2",
								"tokens"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "06d - Payments CS Digital goods simple OK",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "10ef4761-5807-4ef7-abf8-8fc21513a2dd",
								"type": "text/javascript",
								"exec": [
									"if (responseBody) {",
									"    var jsonData = JSON.parse(responseBody);",
									"    ",
									"    if (jsonData) {",
									"        ",
									"        tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"        if (tests[\"Status code is 201\"]) {",
									"            ",
									"            tests[\"CS response\"] = jsonData.fraud_detection.status !== null;",
									"            ",
									"            if (tests[\"CS response\"]) {",
									"        ",
									"                tests[\"CS decision status is green\"] = jsonData.fraud_detection.status.decision === 'green';",
									"                ",
									"            } else {",
									"               ",
									"               console.log('No se recibi√≥ respuesta de CyberSource. Puede no estar configurado correctamente.');",
									"            }",
									"            ",
									"            if (!tests[\"CS decision status is green\"]) {",
									"                ",
									"                console.log('Alguna de las comprobaciones no dio resultados satisfactorios. Se adjunta la respuesta recibida:');",
									"                ",
									"                console.log(jsonData);",
									"            ",
									"            } else {",
									"                ",
									"                if (jsonData.id) {",
									"                    console.log('Se cre√≥ el pago con id ' + jsonData.id);",
									"                    postman.setEnvironmentVariable(\"chargeId\", jsonData.id);",
									"                ",
									"                    ",
									"                } else {",
									"                ",
									"                console.log('No se encontr√≥ un id de transacci√≥n en la respuesta');",
									"                }",
									"            ",
									"                if (pm.environment.get(\"chargeId\")) {",
									"                    ",
									"                    console.log('Se configur√≥ la variable de entorno chargeId con el valor ' + pm.environment.get(\"chargeId\")); ",
									"    ",
									"                } else {",
									"                    console.log('No se pudo configurar correctamente la variable de entorno chargeId');    ",
									"                }",
									"                ",
									"            }",
									"        ",
									"        } else {",
									"           ",
									"           console.log('No se recibio el status esperado. Se adjunta el cuerpo de la respuesta:');",
									"",
									"           console.log(jsonData);  ",
									"           ",
									"        }",
									"            ",
									"    } else {",
									"           ",
									"           console.log('Error al intentar parsear la respuesta obtenida. Se adjunta el cuerpo de la respuesta como fue recibido:');",
									"",
									"           console.log(responseBody);  ",
									"           ",
									"    }",
									"    ",
									"} else {",
									"    ",
									"    console.log('No se recibi√≥ respuesta con el formato esperado');",
									"    ",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "apikey",
								"value": "{{keyprivate}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"user_id\": \"morton\",\n   \"site_transaction_id\": \"auto regrvisacs {{$timestamp}}\",\n   \"token\": \"{{token}}\",\n   \"payment_method_id\": 1,\n   \"bin\": \"{{bin}}\",\n   \"amount\": 20000,\n   \"currency\": \"ARS\",\n   \"installments\": 1,\n   \"description\": \"8\",\n   \"payment_type\": \"single\",\n   \"establishment_name\" : \"prueba desa soft\",\n   \"sub_payments\": [\n   ],\n   \"fraud_detection\": {\n      \"send_to_cs\": true,\n      \"channel\": \"Web/Mobile/Telefonica\",\n      \"bill_to\": {\n         \"city\": \"Buenos Aires\",\n         \"country\": \"AR\",\n         \"customer_id\": \"martinid\",\n         \"email\": \"accept@decidir.com.ar\",\n         \"first_name\": \"martin\",\n         \"last_name\": \"paoletta\",\n         \"phone_number\": \"1547766329\",\n         \"postal_code\": \"1427\",\n         \"state\": \"BA\",\n         \"street1\": \"GARCIA DEL RIO 4041\",\n         \"street2\": \"GARCIA DEL RIO 4041\"         \n      },      \n      \"purchase_totals\": {\n         \"currency\": \"ARS\",\n         \"amount\": 2\n      },\n      \"customer_in_site\": {\n         \"days_in_site\": 243,\n         \"is_guest\": false,\n         \"password\": \"abracadabra\",\n         \"num_of_transactions\": 1,\n         \"cellphone_number\": \"12121\",\n         \"date_of_birth\": \"129412\",\n         \"street\": \"RIO 4041\"\n      },\n      \"device_unique_id\": \"devicefingerprintid\",\n      \"digital_goods_transaction_data\": {\n      \"delivery_type\": \"Pick up\",\n      \"items\": [\n            {\n               \"code\": \"popblacksabbat2016\",\n               \"description\": \"Popular Black Sabbath 2016\",\n               \"name\": \"popblacksabbat2016ss\",\n               \"sku\": \"asas\",\n               \"total_amount\": 20,\n               \"quantity\": 1,\n               \"unit_price\": 20\n            },\n            {\n               \"code\": \"popblacksabbat2016\",\n               \"description\": \"Popular Black Sabbath 2016\",\n               \"name\": \"popblacksabbat2016ss\",\n               \"sku\": \"asas\",\n               \"total_amount\": 20,\n               \"quantity\": 1,\n               \"unit_price\": 20\n            }\n         ]\n      },\n      \n        \"csmdds\": [\n         {\"code\": 17, \"description\": \"Campo MDD17\"},\n         {\"code\": 18, \"description\": \"Campo MDD18\"},\n         {\"code\": 19, \"description\": \"Campo MDD19\"},\n         {\"code\": 20, \"description\": \"Campo MDD20\"},\n         {\"code\": 21, \"description\": \"Campo MDD21\"},\n         {\"code\": 22, \"description\": \"Campo MDD22\"},\n         {\"code\": 23, \"description\": \"Campo MDD23\"},\n         {\"code\": 24, \"description\": \"Campo MDD24\"},\n         {\"code\": 25, \"description\": \"Campo MDD25\"},\n         {\"code\": 26, \"description\": \"Campo MDD26\"},\n         {\"code\": 27, \"description\": \"Campo MDD27\"},\n         {\"code\": 28, \"description\": \"Campo MDD28\"},\n         {\"code\": 29, \"description\": \"Campo MDD29\"},\n         {\"code\": 30, \"description\": \"Campo MDD30\"},\n         {\"code\": 31, \"description\": \"Campo MDD31\"},\n         {\"code\": 33, \"description\": \"Campo MDD33\"},\n         {\"code\": 34, \"description\": \"Campo MDD34\"},\n         {\"code\": 43, \"description\": \"Campo MDD43\"},\n         {\"code\": 44, \"description\": \"Campo MDD44\"},\n         {\"code\": 45, \"description\": \"Campo MDD45\"},\n         {\"code\": 46, \"description\": \"Campo MDD46\"},\n         {\"code\": 47, \"description\": \"Campo MDD47\"},\n         {\"code\": 48, \"description\": \"Campo MDD48\"},\n         {\"code\": 49, \"description\": \"Campo MDD49\"},\n         {\"code\": 50, \"description\": \"Campo MDD50\"},\n         {\"code\": 51, \"description\": \"Campo MDD51\"},\n         {\"code\": 52, \"description\": \"Campo MDD52\"},\n         {\"code\": 53, \"description\": \"Campo MDD53\"},\n         {\"code\": 54, \"description\": \"Campo MDD54\"},\n         {\"code\": 55, \"description\": \"Campo MDD55\"},\n         {\"code\": 56, \"description\": \"Campo MDD56\"},\n         {\"code\": 57, \"description\": \"Campo MDD57\"},\n         {\"code\": 58, \"description\": \"Campo MDD58\"},\n         {\"code\": 59, \"description\": \"Campo MDD59\"},\n         {\"code\": 60, \"description\": \"Campo MDD60\"},\n         {\"code\": 61, \"description\": \"Campo MDD61\"},\n         {\"code\": 62, \"description\": \"Campo MDD62\"},\n         {\"code\": 63, \"description\": \"Campo MDD63\"},\n         {\"code\": 64, \"description\": \"Campo MDD64\"},\n         {\"code\": 65, \"description\": \"Campo MDD65\"},\n         {\"code\": 66, \"description\": \"Campo MDD66\"},\n         {\"code\": 67, \"description\": \"Campo MDD67\"},\n         {\"code\": 68, \"description\": \"Campo MDD68\"},\n         {\"code\": 69, \"description\": \"Campo MDD69\"},\n         {\"code\": 70, \"description\": \"Campo MDD70\"},\n         {\"code\": 71, \"description\": \"Campo MDD71\"},\n         {\"code\": 72, \"description\": \"Campo MDD72\"},\n         {\"code\": 73, \"description\": \"Campo MDD73\"},\n         {\"code\": 74, \"description\": \"Campo MDD74\"},\n         {\"code\": 75, \"description\": \"Campo MDD75\"},\n         {\"code\": 76, \"description\": \"Campo MDD76\"},\n         {\"code\": 77, \"description\": \"Campo MDD77\"},\n         {\"code\": 78, \"description\": \"Campo MDD78\"},\n         {\"code\": 79, \"description\": \"Campo MDD79\"},\n         {\"code\": 80, \"description\": \"Campo MDD80\"},\n         {\"code\": 81, \"description\": \"Campo MDD81\"},\n         {\"code\": 82, \"description\": \"Campo MDD82\"},\n         {\"code\": 83, \"description\": \"Campo MDD83\"},\n         {\"code\": 84, \"description\": \"Campo MDD84\"},\n         {\"code\": 85, \"description\": \"Campo MDD85\"},\n         {\"code\": 86, \"description\": \"Campo MDD86\"},\n         {\"code\": 87, \"description\": \"Campo MDD87\"},\n         {\"code\": 88, \"description\": \"Campo MDD88\"},\n         {\"code\": 89, \"description\": \"Campo MDD89\"},\n         {\"code\": 90, \"description\": \"Campo MDD90\"},\n         {\"code\": 91, \"description\": \"Campo MDD91\"},\n         {\"code\": 92, \"description\": \"Campo MDD92\"},\n         {\"code\": 93, \"description\": \"Campo MDD93\"},\n         {\"code\": 94, \"description\": \"Campo MDD94\"},\n         {\"code\": 95, \"description\": \"Campo MDD95\"},\n         {\"code\": 96, \"description\": \"Campo MDD96\"},\n         {\"code\": 97, \"description\": \"Campo MDD97\"},\n         {\"code\": 98, \"description\": \"Campo MDD98\"},\n         {\"code\": 99, \"description\": \"Campo MDD99\"}\n      ]\n   }\n}\n"
						},
						"url": {
							"raw": "{{base_url}}/api/v2/payments",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v2",
								"payments"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "1 - QAPI check DB",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"site\": \"{{site}}\",\n   \"charge_id\": \"{{chargeId}}\"\n}"
						},
						"url": {
							"raw": "{{qapi_url}}/tests/db",
							"host": [
								"{{qapi_url}}"
							],
							"path": [
								"tests",
								"db"
							]
						},
						"description": "POST check if an operation with these values exists in DB"
					},
					"response": []
				},
				{
					"name": "06e - Creacion de token pago",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a9b44c4e-f1f1-4b6e-a87e-bf8c9840aca0",
								"type": "text/javascript",
								"exec": [
									"if (responseBody) {",
									"    var jsonData = JSON.parse(responseBody);",
									"} else {",
									"    console.log('No se recibi√≥ respuesta con el formato esperado'); ",
									"}",
									"",
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"if (!tests[\"Status code is 201\"]) {",
									"    console.log('Alguna de las comprobaciones no dio resultados satisfactorios.');",
									"    if (jsonData) {",
									"        console.log('Se adjunta la respuesta recibida:');",
									"        console.log(jsonData);    ",
									"    } else {",
									"       console.log('Error al intentar parsear la respuesta obtenida. Se adjunta el cuerpo de la respuesta como fue recibido:');",
									"       console.log(responseBody);   ",
									"    }",
									"",
									"} else {",
									"",
									"    if (jsonData.id) {",
									"        console.log('Se cre√≥ el token con id ' + jsonData.id);",
									"        postman.setEnvironmentVariable(\"token\", jsonData.id);",
									"    } else {",
									"        console.log('No se encontr√≥ un id de token en la respuesta');",
									"    }",
									"    ",
									"    if (jsonData.bin) {",
									"        postman.setEnvironmentVariable(\"bin\", jsonData.bin);",
									"    }",
									"    ",
									"    if (pm.environment.get(\"token\")) {",
									"        console.log('Se configur√≥ la variable de entorno token con el valor ' + pm.environment.get(\"token\")); ",
									"    } else {",
									"        console.log('No se pudo configurar correctamente la variable de entorno token');    ",
									"    }",
									"    ",
									"    if (pm.environment.get(\"bin\")) {",
									"        console.log('Se configur√≥ la variable de entorno bin con el valor ' + pm.environment.get(\"bin\")); ",
									"    } else {",
									"        console.log('No se pudo configurar correctamente la variable de entorno bin');    ",
									"    }",
									"",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "apikey",
								"value": "{{keypublic}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"card_number\" : \"4509790112684851\",\n    \"card_expiration_month\" : \"07\",\n    \"card_expiration_year\" : \"19\", \n    \"security_code\" : \"234\",\n    \"card_holder_name\" : \"Valentin Santiago Gomez\",\n    \"card_holder_identification\" : {\n       \"type\" : \"dni\",\n       \"number\" : \"23968498\"\n    },\n    \"fraud_detection\" : {\n        \"device_unique_identifier\": \"12345\"\n    }\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v2/tokens",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v2",
								"tokens"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "06f - Payments CS Digital goods distribuida OK",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d6f61182-0a25-4122-9638-023fd6c785b0",
								"type": "text/javascript",
								"exec": [
									"if (responseBody) {",
									"    var jsonData = JSON.parse(responseBody);",
									"    ",
									"    if (jsonData) {",
									"        ",
									"        tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"        if (tests[\"Status code is 201\"]) {",
									"            ",
									"            tests[\"CS response\"] = jsonData.fraud_detection.status !== null;",
									"            ",
									"            if (tests[\"CS response\"]) {",
									"        ",
									"                tests[\"CS decision status is green\"] = jsonData.fraud_detection.status.decision === 'green';",
									"                ",
									"                tests[\"has subpayments\"] = jsonData.sub_payments !== null;",
									"                ",
									"                if (tests[\"has subpayments\"]) {",
									"                ",
									"                    tests[\"Status child 1 is approved\"] = jsonData.sub_payments[0].status === 'approved';",
									"                    tests[\"Status child 2 is approved\"] = jsonData.sub_payments[1].status === 'approved';",
									"                ",
									"                } else {",
									"               ",
									"                    console.log('No se encontraron subpagos realizados.');",
									"                }",
									"                ",
									"            } else {",
									"               ",
									"               console.log('No se recibi√≥ respuesta de CyberSource. Puede no estar configurado correctamente.');",
									"            }",
									"            ",
									"            if (!tests[\"CS decision status is green\"] || !tests[\"has subpayments\"] || !tests[\"Status child 1 is approved\"] || !tests[\"Status child 2 is approved\"]) {",
									"                ",
									"                console.log('Alguna de las comprobaciones no dio resultados satisfactorios. Se adjunta la respuesta recibida:');",
									"                ",
									"                console.log(jsonData);",
									"            ",
									"            } else {",
									"                ",
									"                if (jsonData.id) {",
									"                    console.log('Se cre√≥ el pago con id ' + jsonData.id);",
									"                    postman.setEnvironmentVariable(\"chargeId\", jsonData.id);",
									"                ",
									"                    ",
									"                } else {",
									"                ",
									"                console.log('No se encontr√≥ un id de transacci√≥n en la respuesta');",
									"                }",
									"            ",
									"                if (pm.environment.get(\"chargeId\")) {",
									"                    ",
									"                    console.log('Se configur√≥ la variable de entorno chargeId con el valor ' + pm.environment.get(\"chargeId\")); ",
									"    ",
									"                } else {",
									"                    console.log('No se pudo configurar correctamente la variable de entorno chargeId');    ",
									"                }",
									"                ",
									"            }",
									"        ",
									"        } else {",
									"           ",
									"           console.log('No se recibio el status esperado. Se adjunta el cuerpo de la respuesta:');",
									"",
									"           console.log(jsonData);  ",
									"           ",
									"        }",
									"            ",
									"    } else {",
									"           ",
									"           console.log('Error al intentar parsear la respuesta obtenida. Se adjunta el cuerpo de la respuesta como fue recibido:');",
									"",
									"           console.log(responseBody);  ",
									"           ",
									"    }",
									"    ",
									"} else {",
									"    ",
									"    console.log('No se recibi√≥ respuesta con el formato esperado');",
									"    ",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "apikey",
								"value": "{{keyprivate}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"user_id\": \"morton\",\n   \"site_transaction_id\": \"auto regrvisacs {{$timestamp}}\",\n   \"token\": \"{{token}}\",\n   \"payment_method_id\": 1,\n   \"bin\": \"{{bin}}\",\n   \"amount\": 20000,\n   \"currency\": \"ARS\",\n   \"installments\": 1,\n   \"description\": \"8\",\n   \"payment_type\": \"distributed\",\n   \"establishment_name\" : \"prueba desa soft\",\n   \"sub_payments\": [\n     {\n         \"site_id\": \"{{subsite_1}}\",\n         \"installments\": 5,\n         \"amount\": 10000\n      },\n      {\n         \"site_id\": \"{{subsite_2}}\",\n         \"installments\": 6,\n         \"amount\": 10000\n        \n      }\n   ],\n   \"fraud_detection\": {\n      \"send_to_cs\": true,\n      \"channel\": \"Web/Mobile/Telefonica\",\n      \"bill_to\": {\n         \"city\": \"Buenos Aires\",\n         \"country\": \"AR\",\n         \"customer_id\": \"martinid\",\n         \"email\": \"accept@decidir.com.ar\",\n         \"first_name\": \"martin\",\n         \"last_name\": \"paoletta\",\n         \"phone_number\": \"1547766329\",\n         \"postal_code\": \"1427\",\n         \"state\": \"BA\",\n         \"street1\": \"GARCIA DEL RIO 4041\",\n         \"street2\": \"GARCIA DEL RIO 4041\"         \n      },      \n      \"purchase_totals\": {\n         \"currency\": \"ARS\",\n         \"amount\": 2\n      },\n      \"customer_in_site\": {\n         \"days_in_site\": 243,\n         \"is_guest\": false,\n         \"password\": \"abracadabra\",\n         \"num_of_transactions\": 1,\n         \"cellphone_number\": \"12121\",\n         \"date_of_birth\": \"129412\",\n         \"street\": \"RIO 4041\"\n      },\n      \"device_unique_id\": \"devicefingerprintid\",\n      \"digital_goods_transaction_data\": {\n      \"delivery_type\": \"Pick up\",\n      \"items\": [\n            {\n               \"code\": \"popblacksabbat2016\",\n               \"description\": \"Popular Black Sabbath 2016\",\n               \"name\": \"popblacksabbat2016ss\",\n               \"sku\": \"asas\",\n               \"total_amount\": 20,\n               \"quantity\": 1,\n               \"unit_price\": 20\n            },\n            {\n               \"code\": \"popblacksabbat2016\",\n               \"description\": \"Popular Black Sabbath 2016\",\n               \"name\": \"popblacksabbat2016ss\",\n               \"sku\": \"asas\",\n               \"total_amount\": 20,\n               \"quantity\": 1,\n               \"unit_price\": 20\n            }\n         ]\n      },\n      \n        \"csmdds\": [\n         {\"code\": 17, \"description\": \"Campo MDD17\"},\n         {\"code\": 18, \"description\": \"Campo MDD18\"},\n         {\"code\": 19, \"description\": \"Campo MDD19\"},\n         {\"code\": 20, \"description\": \"Campo MDD20\"},\n         {\"code\": 21, \"description\": \"Campo MDD21\"},\n         {\"code\": 22, \"description\": \"Campo MDD22\"},\n         {\"code\": 23, \"description\": \"Campo MDD23\"},\n         {\"code\": 24, \"description\": \"Campo MDD24\"},\n         {\"code\": 25, \"description\": \"Campo MDD25\"},\n         {\"code\": 26, \"description\": \"Campo MDD26\"},\n         {\"code\": 27, \"description\": \"Campo MDD27\"},\n         {\"code\": 28, \"description\": \"Campo MDD28\"},\n         {\"code\": 29, \"description\": \"Campo MDD29\"},\n         {\"code\": 30, \"description\": \"Campo MDD30\"},\n         {\"code\": 31, \"description\": \"Campo MDD31\"},\n         {\"code\": 33, \"description\": \"Campo MDD33\"},\n         {\"code\": 34, \"description\": \"Campo MDD34\"},\n         {\"code\": 43, \"description\": \"Campo MDD43\"},\n         {\"code\": 44, \"description\": \"Campo MDD44\"},\n         {\"code\": 45, \"description\": \"Campo MDD45\"},\n         {\"code\": 46, \"description\": \"Campo MDD46\"},\n         {\"code\": 47, \"description\": \"Campo MDD47\"},\n         {\"code\": 48, \"description\": \"Campo MDD48\"},\n         {\"code\": 49, \"description\": \"Campo MDD49\"},\n         {\"code\": 50, \"description\": \"Campo MDD50\"},\n         {\"code\": 51, \"description\": \"Campo MDD51\"},\n         {\"code\": 52, \"description\": \"Campo MDD52\"},\n         {\"code\": 53, \"description\": \"Campo MDD53\"},\n         {\"code\": 54, \"description\": \"Campo MDD54\"},\n         {\"code\": 55, \"description\": \"Campo MDD55\"},\n         {\"code\": 56, \"description\": \"Campo MDD56\"},\n         {\"code\": 57, \"description\": \"Campo MDD57\"},\n         {\"code\": 58, \"description\": \"Campo MDD58\"},\n         {\"code\": 59, \"description\": \"Campo MDD59\"},\n         {\"code\": 60, \"description\": \"Campo MDD60\"},\n         {\"code\": 61, \"description\": \"Campo MDD61\"},\n         {\"code\": 62, \"description\": \"Campo MDD62\"},\n         {\"code\": 63, \"description\": \"Campo MDD63\"},\n         {\"code\": 64, \"description\": \"Campo MDD64\"},\n         {\"code\": 65, \"description\": \"Campo MDD65\"},\n         {\"code\": 66, \"description\": \"Campo MDD66\"},\n         {\"code\": 67, \"description\": \"Campo MDD67\"},\n         {\"code\": 68, \"description\": \"Campo MDD68\"},\n         {\"code\": 69, \"description\": \"Campo MDD69\"},\n         {\"code\": 70, \"description\": \"Campo MDD70\"},\n         {\"code\": 71, \"description\": \"Campo MDD71\"},\n         {\"code\": 72, \"description\": \"Campo MDD72\"},\n         {\"code\": 73, \"description\": \"Campo MDD73\"},\n         {\"code\": 74, \"description\": \"Campo MDD74\"},\n         {\"code\": 75, \"description\": \"Campo MDD75\"},\n         {\"code\": 76, \"description\": \"Campo MDD76\"},\n         {\"code\": 77, \"description\": \"Campo MDD77\"},\n         {\"code\": 78, \"description\": \"Campo MDD78\"},\n         {\"code\": 79, \"description\": \"Campo MDD79\"},\n         {\"code\": 80, \"description\": \"Campo MDD80\"},\n         {\"code\": 81, \"description\": \"Campo MDD81\"},\n         {\"code\": 82, \"description\": \"Campo MDD82\"},\n         {\"code\": 83, \"description\": \"Campo MDD83\"},\n         {\"code\": 84, \"description\": \"Campo MDD84\"},\n         {\"code\": 85, \"description\": \"Campo MDD85\"},\n         {\"code\": 86, \"description\": \"Campo MDD86\"},\n         {\"code\": 87, \"description\": \"Campo MDD87\"},\n         {\"code\": 88, \"description\": \"Campo MDD88\"},\n         {\"code\": 89, \"description\": \"Campo MDD89\"},\n         {\"code\": 90, \"description\": \"Campo MDD90\"},\n         {\"code\": 91, \"description\": \"Campo MDD91\"},\n         {\"code\": 92, \"description\": \"Campo MDD92\"},\n         {\"code\": 93, \"description\": \"Campo MDD93\"},\n         {\"code\": 94, \"description\": \"Campo MDD94\"},\n         {\"code\": 95, \"description\": \"Campo MDD95\"},\n         {\"code\": 96, \"description\": \"Campo MDD96\"},\n         {\"code\": 97, \"description\": \"Campo MDD97\"},\n         {\"code\": 98, \"description\": \"Campo MDD98\"},\n         {\"code\": 99, \"description\": \"Campo MDD99\"}\n      ]\n   }\n}\n"
						},
						"url": {
							"raw": "{{base_url}}/api/v2/payments",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v2",
								"payments"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "1 - QAPI check DB",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"site\": \"{{site}}\",\n   \"charge_id\": \"{{chargeId}}\"\n}"
						},
						"url": {
							"raw": "{{qapi_url}}/tests/db",
							"host": [
								"{{qapi_url}}"
							],
							"path": [
								"tests",
								"db"
							]
						},
						"description": "POST check if an operation with these values exists in DB"
					},
					"response": []
				},
				{
					"name": "07a - QAPI set CS VERDE Retail",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6c0b4467-12c6-42a7-ac55-5562034e2109",
								"type": "text/javascript",
								"exec": [
									"if (responseBody) {",
									"        ",
									"    tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"     if (!tests[\"Status code is 200\"]) {",
									"           ",
									"        console.log('No se recibio el status esperado. Se adjunta el cuerpo de la respuesta:');",
									"",
									"        console.log(responseBody);  ",
									"           ",
									"    }",
									"            ",
									"} else {",
									"           ",
									"    console.log('Error al no recibir respuesta.');",
									"           ",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"site\": \"{{site}}\",\n   \"security_key\": \"7INYIZLob1xKu4W4xhE7l8HYRgf13MQhIA8XtuRCxW0L9VNqIHXBJCvWMbHzbbv0n771oi3jMEL27xOtt0uD5fbeBRqR0N66QevdhXAQ+5KFHJvmoBZ3Xgq2jFTltP6flXN6PPlN3X6XYmPuBhJoqlrFfuo7sD24pM0qRbZFeRf1/13ZrYA+K3vNe6ATvyHr6TF2jMiK8RkstPl97AE95l7B2zYqxWpL2cpPh/WAFFReOFkgqnpo2NYqe3ZRfcYFMBTpJtmZVJu5gnEDBY7cxCp8jmLz5V9cphX5FO19KaBPkMvHFvVjGcXp8JOcL162sNo5hcKZNFCFIZ3ZFizVnQ==\",\n   \"modelo\" : 2,\n   \"mid\" : \"decidir_agregador\",\n   \"rubro\" : 2,\n   \"continuar\" : \"N\",\n   \"reverso\" : \"N\"\n}"
						},
						"url": {
							"raw": "{{qapi_url}}/sites/cs",
							"host": [
								"{{qapi_url}}"
							],
							"path": [
								"sites",
								"cs"
							]
						},
						"description": "POST call to set CS in a certain site"
					},
					"response": []
				},
				{
					"name": "07b - Replicate site",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5436e77f-33fc-4d57-a880-f38b5a09ac65",
								"type": "text/javascript",
								"exec": [
									"if (responseBody) {",
									"        ",
									"    tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"     if (!tests[\"Status code is 200\"]) {",
									"           ",
									"        console.log('No se recibio el status esperado. Se adjunta el cuerpo de la respuesta:');",
									"",
									"        console.log(responseBody);  ",
									"           ",
									"    }",
									"            ",
									"} else {",
									"           ",
									"    console.log('Error al no recibir respuesta.');",
									"           ",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"disabled": true
							},
							{
								"key": "apikey",
								"value": "{{keypublic}}",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"card_number\" : \"4507990000004905\",\n    \"card_expiration_month\" : \"07\",\n    \"card_expiration_year\" : \"17\", \n    \"security_code\" : \"234\",\n    \"card_holder_name\" : \"Valentin Santiago Gomez\",\n    \"card_holder_identification\" : {\n       \"type\" : \"dni\",\n       \"number\" : \"23968498\"\n    },\n    \"fraud_detection\" : {\n        \"device_unique_identifier\": \"12345\"\n    }\n}"
						},
						"url": {
							"raw": "{{coretx_url}}/replication/site/{{site}}",
							"host": [
								"{{coretx_url}}"
							],
							"path": [
								"replication",
								"site",
								"{{site}}"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "07c - Creacion de token pago",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bd82ade3-cccb-4cc4-9bd5-c665c6284086",
								"type": "text/javascript",
								"exec": [
									"if (responseBody) {",
									"    var jsonData = JSON.parse(responseBody);",
									"} else {",
									"    console.log('No se recibi√≥ respuesta con el formato esperado'); ",
									"}",
									"",
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"if (!tests[\"Status code is 201\"]) {",
									"    console.log('Alguna de las comprobaciones no dio resultados satisfactorios.');",
									"    if (jsonData) {",
									"        console.log('Se adjunta la respuesta recibida:');",
									"        console.log(jsonData);    ",
									"    } else {",
									"       console.log('Error al intentar parsear la respuesta obtenida. Se adjunta el cuerpo de la respuesta como fue recibido:');",
									"       console.log(responseBody);   ",
									"    }",
									"",
									"} else {",
									"",
									"    if (jsonData.id) {",
									"        console.log('Se cre√≥ el token con id ' + jsonData.id);",
									"        postman.setEnvironmentVariable(\"token\", jsonData.id);",
									"    } else {",
									"        console.log('No se encontr√≥ un id de token en la respuesta');",
									"    }",
									"    ",
									"    if (jsonData.bin) {",
									"        postman.setEnvironmentVariable(\"bin\", jsonData.bin);",
									"    }",
									"    ",
									"    if (pm.environment.get(\"token\")) {",
									"        console.log('Se configur√≥ la variable de entorno token con el valor ' + pm.environment.get(\"token\")); ",
									"    } else {",
									"        console.log('No se pudo configurar correctamente la variable de entorno token');    ",
									"    }",
									"    ",
									"    if (pm.environment.get(\"bin\")) {",
									"        console.log('Se configur√≥ la variable de entorno bin con el valor ' + pm.environment.get(\"bin\")); ",
									"    } else {",
									"        console.log('No se pudo configurar correctamente la variable de entorno bin');    ",
									"    }",
									"",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "apikey",
								"value": "{{keypublic}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"card_number\" : \"4509790112684851\",\n    \"card_expiration_month\" : \"07\",\n    \"card_expiration_year\" : \"19\", \n    \"security_code\" : \"234\",\n    \"card_holder_name\" : \"Valentin Santiago Gomez\",\n    \"card_holder_identification\" : {\n       \"type\" : \"dni\",\n       \"number\" : \"23968498\"\n    },\n    \"fraud_detection\" : {\n        \"device_unique_identifier\": \"12345\"\n    }\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v2/tokens",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v2",
								"tokens"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "07d - Payments CS Retail simple OK",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "88b6c3f8-4eba-4c6e-9c38-8da19475f2a3",
								"type": "text/javascript",
								"exec": [
									"if (responseBody) {",
									"    var jsonData = JSON.parse(responseBody);",
									"    ",
									"    if (jsonData) {",
									"        ",
									"        tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"        if (tests[\"Status code is 201\"]) {",
									"            ",
									"            tests[\"CS response\"] = jsonData.fraud_detection.status !== null;",
									"            ",
									"            if (tests[\"CS response\"]) {",
									"        ",
									"                tests[\"CS decision status is green\"] = jsonData.fraud_detection.status.decision === 'green';",
									"                ",
									"            } else {",
									"               ",
									"               console.log('No se recibi√≥ respuesta de CyberSource. Puede no estar configurado correctamente.');",
									"            }",
									"            ",
									"            if (!tests[\"CS decision status is green\"]) {",
									"                ",
									"                console.log('Alguna de las comprobaciones no dio resultados satisfactorios. Se adjunta la respuesta recibida:');",
									"                ",
									"                console.log(jsonData);",
									"            ",
									"            } else {",
									"                ",
									"                if (jsonData.id) {",
									"                    console.log('Se cre√≥ el pago con id ' + jsonData.id);",
									"                    postman.setEnvironmentVariable(\"chargeId\", jsonData.id);",
									"                ",
									"                    ",
									"                } else {",
									"                ",
									"                console.log('No se encontr√≥ un id de transacci√≥n en la respuesta');",
									"                }",
									"            ",
									"                if (pm.environment.get(\"chargeId\")) {",
									"                    ",
									"                    console.log('Se configur√≥ la variable de entorno chargeId con el valor ' + pm.environment.get(\"chargeId\")); ",
									"    ",
									"                } else {",
									"                    console.log('No se pudo configurar correctamente la variable de entorno chargeId');    ",
									"                }",
									"                ",
									"            }",
									"        ",
									"        } else {",
									"           ",
									"           console.log('No se recibio el status esperado. Se adjunta el cuerpo de la respuesta:');",
									"",
									"           console.log(jsonData);  ",
									"           ",
									"        }",
									"            ",
									"    } else {",
									"           ",
									"           console.log('Error al intentar parsear la respuesta obtenida. Se adjunta el cuerpo de la respuesta como fue recibido:');",
									"",
									"           console.log(responseBody);  ",
									"           ",
									"    }",
									"    ",
									"} else {",
									"    ",
									"    console.log('No se recibi√≥ respuesta con el formato esperado');",
									"    ",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "apikey",
								"value": "{{keyprivate}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"user_id\": \"morton\",\n   \"site_transaction_id\": \"auto regrvisacs {{$timestamp}}\",\n   \"token\": \"{{token}}\",\n   \"payment_method_id\": 1,\n   \"bin\": \"{{bin}}\",\n   \"amount\": 200,\n   \"currency\": \"ARS\",\n   \"installments\": 1,\n   \"description\": \"8\",\n   \"payment_type\": \"single\",\n   \"establishment_name\" : \"prueba desa soft\",\n   \"sub_payments\": [\n   ],\n   \"fraud_detection\": {\n      \"send_to_cs\": true,\n      \"channel\": \"Web/Mobile/Telefonica\",\n      \"bill_to\": {\n        \"city\": \"Buenos Aires\",\n         \"country\": \"AR\",\n         \"customer_id\": \"martinid\",\n         \"email\": \"accept@decidir.com.ar\",\n         \"first_name\": \"martin\",\n         \"last_name\": \"paoletta\",\n         \"phone_number\": \"1547766329\",\n         \"postal_code\": \"1427\",\n         \"state\": \"BA\",\n         \"street1\": \"GARCIA DEL RIO 4041\",\n         \"street2\": \"GARCIA DEL RIO 4041\"         \n      },      \n      \"purchase_totals\": {\n         \"currency\": \"ARS\",\n         \"amount\": 2\n      },\n      \"customer_in_site\": {\n         \"days_in_site\": 243,\n         \"is_guest\": false,\n         \"password\": \"abracadabra\",\n         \"num_of_transactions\": 1,\n         \"cellphone_number\": \"12121\",\n         \"date_of_birth\": \"129412\",\n         \"street\": \"RIO 4041\"\n      },\n      \"retail_transaction_data\": {\n         \"ship_to\": {\n            \"city\": \"Buenos Aires\",\n            \"country\": \"AR\",\n            \"email\": \"accept@decidir.com.ar\",\n            \"first_name\": \"martin\",\n            \"last_name\": \"paoletta\",\n            \"phone_number\": \"1547766329\",\n            \"postal_code\": \"1427\",\n            \"state\": \"BA\",\n            \"street1\": \"GARCIA DEL RIO 4041\",\n            \"street2\": \"GARCIA DEL RIO 4041\"\n      },\n         \"days_to_delivery\": \"55\",\n         \"dispatch_method\": \"storepickup\",\n         \"tax_voucher_required\": true,\n         \"customer_loyality_number\": \"123232\",\n         \"coupon_code\": \"cupon22\",\n         \"items\": [\n            {\n               \"code\": \"popblacksabbat2016\",\n               \"description\": \"Popular Black Sabbath 2016\",\n               \"name\": \"popblacksabbat2016ss\",\n               \"sku\": \"asas\",\n               \"total_amount\": 20,\n               \"quantity\": 1,\n               \"unit_price\": 20\n            },\n           {\n              \"code\": \"popblacksdssabbat2016\",\n              \"description\": \"Popular Blasdsck Sabbath 2016\",\n              \"name\": \"popblacksabbatdsds2016ss\",\n              \"sku\": \"aswewas\",\n              \"total_amount\": 111212,\n              \"quantity\": 1,\n              \"unit_price\": 111212\n           }\n         ]\n      },\n        \"csmdds\": [\n         {\"code\": 17, \"description\": \"Campo MDD17\"},\n          {\"code\": 18, \"description\": \"Campo MDD18\"},\n         {\"code\": 19, \"description\": \"Campo MDD19\"},\n         {\"code\": 20, \"description\": \"Campo MDD20\"},\n         {\"code\": 21, \"description\": \"Campo MDD21\"},\n         {\"code\": 22, \"description\": \"Campo MDD22\"},\n         {\"code\": 23, \"description\": \"Campo MDD23\"},\n         {\"code\": 24, \"description\": \"Campo MDD24\"},\n         {\"code\": 25, \"description\": \"Campo MDD25\"},\n         {\"code\": 26, \"description\": \"Campo MDD26\"},\n         {\"code\": 27, \"description\": \"Campo MDD27\"},\n         {\"code\": 28, \"description\": \"Campo MDD28\"},\n         {\"code\": 29, \"description\": \"Campo MDD29\"},\n         {\"code\": 30, \"description\": \"Campo MDD30\"},\n         {\"code\": 31, \"description\": \"Campo MDD31\"},\n         {\"code\": 32, \"description\": \"Campo MDD32\"},\n         {\"code\": 33, \"description\": \"Campo MDD33\"},\n         {\"code\": 34, \"description\": \"Campo MDD34\"},\n         {\"code\": 43, \"description\": \"Campo MDD43\"},\n         {\"code\": 44, \"description\": \"Campo MDD44\"},\n         {\"code\": 45, \"description\": \"Campo MDD45\"},\n         {\"code\": 46, \"description\": \"Campo MDD46\"},\n         {\"code\": 47, \"description\": \"Campo MDD47\"},\n         {\"code\": 48, \"description\": \"Campo MDD48\"},\n         {\"code\": 49, \"description\": \"Campo MDD49\"},\n         {\"code\": 50, \"description\": \"Campo MDD50\"},\n         {\"code\": 51, \"description\": \"Campo MDD51\"},\n         {\"code\": 52, \"description\": \"Campo MDD52\"},\n         {\"code\": 53, \"description\": \"Campo MDD53\"},\n         {\"code\": 54, \"description\": \"Campo MDD54\"},\n         {\"code\": 55, \"description\": \"Campo MDD55\"},\n         {\"code\": 56, \"description\": \"Campo MDD56\"},\n         {\"code\": 57, \"description\": \"Campo MDD57\"},\n         {\"code\": 58, \"description\": \"Campo MDD58\"},\n         {\"code\": 59, \"description\": \"Campo MDD59\"},\n         {\"code\": 60, \"description\": \"Campo MDD60\"},\n         {\"code\": 61, \"description\": \"Campo MDD61\"},\n         {\"code\": 62, \"description\": \"Campo MDD62\"},\n         {\"code\": 63, \"description\": \"Campo MDD63\"},\n         {\"code\": 64, \"description\": \"Campo MDD64\"},\n         {\"code\": 65, \"description\": \"Campo MDD65\"},\n         {\"code\": 66, \"description\": \"Campo MDD66\"},\n         {\"code\": 67, \"description\": \"Campo MDD67\"},\n         {\"code\": 68, \"description\": \"Campo MDD68\"},\n         {\"code\": 69, \"description\": \"Campo MDD69\"},\n         {\"code\": 70, \"description\": \"Campo MDD70\"},\n         {\"code\": 71, \"description\": \"Campo MDD71\"},\n         {\"code\": 72, \"description\": \"Campo MDD72\"},\n         {\"code\": 73, \"description\": \"Campo MDD73\"},\n         {\"code\": 74, \"description\": \"Campo MDD74\"},\n         {\"code\": 75, \"description\": \"Campo MDD75\"},\n         {\"code\": 76, \"description\": \"Campo MDD76\"},\n         {\"code\": 77, \"description\": \"Campo MDD77\"},\n         {\"code\": 78, \"description\": \"Campo MDD78\"},\n         {\"code\": 79, \"description\": \"Campo MDD79\"},\n         {\"code\": 80, \"description\": \"Campo MDD80\"},\n         {\"code\": 81, \"description\": \"Campo MDD81\"},\n         {\"code\": 82, \"description\": \"Campo MDD82\"},\n         {\"code\": 83, \"description\": \"Campo MDD83\"},\n         {\"code\": 84, \"description\": \"Campo MDD84\"},\n         {\"code\": 85, \"description\": \"Campo MDD85\"},\n         {\"code\": 86, \"description\": \"Campo MDD86\"},\n         {\"code\": 87, \"description\": \"Campo MDD87\"},\n         {\"code\": 88, \"description\": \"Campo MDD88\"},\n         {\"code\": 89, \"description\": \"Campo MDD89\"},\n         {\"code\": 90, \"description\": \"Campo MDD90\"},\n         {\"code\": 91, \"description\": \"Campo MDD91\"},\n         {\"code\": 92, \"description\": \"Campo MDD92\"},\n         {\"code\": 93, \"description\": \"Campo MDD93\"},\n         {\"code\": 94, \"description\": \"Campo MDD94\"},\n         {\"code\": 95, \"description\": \"Campo MDD95\"},\n         {\"code\": 96, \"description\": \"Campo MDD96\"},\n         {\"code\": 97, \"description\": \"Campo MDD97\"},\n         {\"code\": 98, \"description\": \"Campo MDD98\"},\n         {\"code\": 99, \"description\": \"Campo MDD99\"}\n      ]\n   }\n}\n"
						},
						"url": {
							"raw": "{{base_url}}/api/v2/payments",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v2",
								"payments"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "1 - QAPI check DB",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"site\": \"{{site}}\",\n   \"charge_id\": \"{{chargeId}}\"\n}"
						},
						"url": {
							"raw": "{{qapi_url}}/tests/db",
							"host": [
								"{{qapi_url}}"
							],
							"path": [
								"tests",
								"db"
							]
						},
						"description": "POST check if an operation with these values exists in DB"
					},
					"response": []
				},
				{
					"name": "07e - Creacion de token pago",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "df445c4b-88bd-4876-bef8-f1061c6d930d",
								"type": "text/javascript",
								"exec": [
									"if (responseBody) {",
									"    var jsonData = JSON.parse(responseBody);",
									"} else {",
									"    console.log('No se recibi√≥ respuesta con el formato esperado'); ",
									"}",
									"",
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"if (!tests[\"Status code is 201\"]) {",
									"    console.log('Alguna de las comprobaciones no dio resultados satisfactorios.');",
									"    if (jsonData) {",
									"        console.log('Se adjunta la respuesta recibida:');",
									"        console.log(jsonData);    ",
									"    } else {",
									"       console.log('Error al intentar parsear la respuesta obtenida. Se adjunta el cuerpo de la respuesta como fue recibido:');",
									"       console.log(responseBody);   ",
									"    }",
									"",
									"} else {",
									"",
									"    if (jsonData.id) {",
									"        console.log('Se cre√≥ el token con id ' + jsonData.id);",
									"        postman.setEnvironmentVariable(\"token\", jsonData.id);",
									"    } else {",
									"        console.log('No se encontr√≥ un id de token en la respuesta');",
									"    }",
									"    ",
									"    if (jsonData.bin) {",
									"        postman.setEnvironmentVariable(\"bin\", jsonData.bin);",
									"    }",
									"    ",
									"    if (pm.environment.get(\"token\")) {",
									"        console.log('Se configur√≥ la variable de entorno token con el valor ' + pm.environment.get(\"token\")); ",
									"    } else {",
									"        console.log('No se pudo configurar correctamente la variable de entorno token');    ",
									"    }",
									"    ",
									"    if (pm.environment.get(\"bin\")) {",
									"        console.log('Se configur√≥ la variable de entorno bin con el valor ' + pm.environment.get(\"bin\")); ",
									"    } else {",
									"        console.log('No se pudo configurar correctamente la variable de entorno bin');    ",
									"    }",
									"",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "apikey",
								"value": "{{keypublic}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"card_number\" : \"4509790112684851\",\n    \"card_expiration_month\" : \"07\",\n    \"card_expiration_year\" : \"19\", \n    \"security_code\" : \"234\",\n    \"card_holder_name\" : \"Valentin Santiago Gomez\",\n    \"card_holder_identification\" : {\n       \"type\" : \"dni\",\n       \"number\" : \"23968498\"\n    },\n    \"fraud_detection\" : {\n        \"device_unique_identifier\": \"12345\"\n    }\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v2/tokens",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v2",
								"tokens"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "07f - Payments CS Retail distribuida OK",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9f44a453-f3d2-49a9-8226-9e01cf94488a",
								"type": "text/javascript",
								"exec": [
									"if (responseBody) {",
									"    var jsonData = JSON.parse(responseBody);",
									"    ",
									"    if (jsonData) {",
									"        ",
									"        tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"        if (tests[\"Status code is 201\"]) {",
									"            ",
									"            tests[\"CS response\"] = jsonData.fraud_detection.status !== null;",
									"            ",
									"            if (tests[\"CS response\"]) {",
									"        ",
									"                tests[\"CS decision status is green\"] = jsonData.fraud_detection.status.decision === 'green';",
									"                ",
									"                tests[\"has subpayments\"] = jsonData.sub_payments !== null;",
									"                ",
									"                if (tests[\"has subpayments\"]) {",
									"                ",
									"                    tests[\"Status child 1 is approved\"] = jsonData.sub_payments[0].status === 'approved';",
									"                    tests[\"Status child 2 is approved\"] = jsonData.sub_payments[1].status === 'approved';",
									"                ",
									"                } else {",
									"               ",
									"                    console.log('No se encontraron subpagos realizados.');",
									"                }",
									"                ",
									"            } else {",
									"               ",
									"               console.log('No se recibi√≥ respuesta de CyberSource. Puede no estar configurado correctamente.');",
									"            }",
									"            ",
									"            if (!tests[\"CS decision status is green\"] || !tests[\"has subpayments\"] || !tests[\"Status child 1 is approved\"] || !tests[\"Status child 2 is approved\"]) {",
									"                ",
									"                console.log('Alguna de las comprobaciones no dio resultados satisfactorios. Se adjunta la respuesta recibida:');",
									"                ",
									"                console.log(jsonData);",
									"            ",
									"            } else {",
									"                ",
									"                if (jsonData.id) {",
									"                    console.log('Se cre√≥ el pago con id ' + jsonData.id);",
									"                    postman.setEnvironmentVariable(\"chargeId\", jsonData.id);",
									"                ",
									"                    ",
									"                } else {",
									"                ",
									"                console.log('No se encontr√≥ un id de transacci√≥n en la respuesta');",
									"                }",
									"            ",
									"                if (pm.environment.get(\"chargeId\")) {",
									"                    ",
									"                    console.log('Se configur√≥ la variable de entorno chargeId con el valor ' + pm.environment.get(\"chargeId\")); ",
									"    ",
									"                } else {",
									"                    console.log('No se pudo configurar correctamente la variable de entorno chargeId');    ",
									"                }",
									"                ",
									"            }",
									"        ",
									"        } else {",
									"           ",
									"           console.log('No se recibio el status esperado. Se adjunta el cuerpo de la respuesta:');",
									"",
									"           console.log(jsonData);  ",
									"           ",
									"        }",
									"            ",
									"    } else {",
									"           ",
									"           console.log('Error al intentar parsear la respuesta obtenida. Se adjunta el cuerpo de la respuesta como fue recibido:');",
									"",
									"           console.log(responseBody);  ",
									"           ",
									"    }",
									"    ",
									"} else {",
									"    ",
									"    console.log('No se recibi√≥ respuesta con el formato esperado');",
									"    ",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "apikey",
								"value": "{{keyprivate}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"user_id\": \"morton\",\n   \"site_transaction_id\": \"auto regrvisacs {{$timestamp}}\",\n   \"token\": \"{{token}}\",\n   \"payment_method_id\": 1,\n   \"bin\": \"{{bin}}\",\n   \"amount\": 20000,\n   \"currency\": \"ARS\",\n   \"installments\": 1,\n   \"description\": \"8\",\n   \"payment_type\": \"distributed\",\n   \"establishment_name\" : \"prueba desa soft\",\n   \"sub_payments\": [\n     {\n         \"site_id\": \"{{subsite_1}}\",\n         \"installments\": 5,\n         \"amount\": 10000\n      },\n      {\n         \"site_id\": \"{{subsite_2}}\",\n         \"installments\": 6,\n         \"amount\": 10000\n        \n      }\n   ],\n   \"fraud_detection\": {\n      \"send_to_cs\": true,\n      \"channel\": \"Web/Mobile/Telefonica\",\n      \"bill_to\": {\n        \"city\": \"Buenos Aires\",\n         \"country\": \"AR\",\n         \"customer_id\": \"martinid\",\n         \"email\": \"accept@decidir.com.ar\",\n         \"first_name\": \"martin\",\n         \"last_name\": \"paoletta\",\n         \"phone_number\": \"1547766329\",\n         \"postal_code\": \"1427\",\n         \"state\": \"BA\",\n         \"street1\": \"GARCIA DEL RIO 4041\",\n         \"street2\": \"GARCIA DEL RIO 4041\"         \n      },      \n      \"purchase_totals\": {\n         \"currency\": \"ARS\",\n         \"amount\": 2\n      },\n      \"customer_in_site\": {\n         \"days_in_site\": 243,\n         \"is_guest\": false,\n         \"password\": \"abracadabra\",\n         \"num_of_transactions\": 1,\n         \"cellphone_number\": \"12121\",\n         \"date_of_birth\": \"129412\",\n         \"street\": \"RIO 4041\"\n      },\n      \"retail_transaction_data\": {\n         \"ship_to\": {\n            \"city\": \"Buenos Aires\",\n            \"country\": \"AR\",\n            \"email\": \"accept@decidir.com.ar\",\n            \"first_name\": \"martin\",\n            \"last_name\": \"paoletta\",\n            \"phone_number\": \"1547766329\",\n            \"postal_code\": \"1427\",\n            \"state\": \"BA\",\n            \"street1\": \"GARCIA DEL RIO 4041\",\n            \"street2\": \"GARCIA DEL RIO 4041\"\n      },\n         \"days_to_delivery\": \"55\",\n         \"dispatch_method\": \"storepickup\",\n         \"tax_voucher_required\": true,\n         \"customer_loyality_number\": \"123232\",\n         \"coupon_code\": \"cupon22\",\n         \"items\": [\n            {\n               \"code\": \"popblacksabbat2016\",\n               \"description\": \"Popular Black Sabbath 2016\",\n               \"name\": \"popblacksabbat2016ss\",\n               \"sku\": \"asas\",\n               \"total_amount\": 20,\n               \"quantity\": 1,\n               \"unit_price\": 20\n            },\n           {\n              \"code\": \"popblacksdssabbat2016\",\n              \"description\": \"Popular Blasdsck Sabbath 2016\",\n              \"name\": \"popblacksabbatdsds2016ss\",\n              \"sku\": \"aswewas\",\n              \"total_amount\": 111212,\n              \"quantity\": 1,\n              \"unit_price\": 111212\n           }\n         ]\n      },\n        \"csmdds\": [\n         {\"code\": 17, \"description\": \"Campo MDD17\"},\n          {\"code\": 18, \"description\": \"Campo MDD18\"},\n         {\"code\": 19, \"description\": \"Campo MDD19\"},\n         {\"code\": 20, \"description\": \"Campo MDD20\"},\n         {\"code\": 21, \"description\": \"Campo MDD21\"},\n         {\"code\": 22, \"description\": \"Campo MDD22\"},\n         {\"code\": 23, \"description\": \"Campo MDD23\"},\n         {\"code\": 24, \"description\": \"Campo MDD24\"},\n         {\"code\": 25, \"description\": \"Campo MDD25\"},\n         {\"code\": 26, \"description\": \"Campo MDD26\"},\n         {\"code\": 27, \"description\": \"Campo MDD27\"},\n         {\"code\": 28, \"description\": \"Campo MDD28\"},\n         {\"code\": 29, \"description\": \"Campo MDD29\"},\n         {\"code\": 30, \"description\": \"Campo MDD30\"},\n         {\"code\": 31, \"description\": \"Campo MDD31\"},\n         {\"code\": 32, \"description\": \"Campo MDD32\"},\n         {\"code\": 33, \"description\": \"Campo MDD33\"},\n         {\"code\": 34, \"description\": \"Campo MDD34\"},\n         {\"code\": 43, \"description\": \"Campo MDD43\"},\n         {\"code\": 44, \"description\": \"Campo MDD44\"},\n         {\"code\": 45, \"description\": \"Campo MDD45\"},\n         {\"code\": 46, \"description\": \"Campo MDD46\"},\n         {\"code\": 47, \"description\": \"Campo MDD47\"},\n         {\"code\": 48, \"description\": \"Campo MDD48\"},\n         {\"code\": 49, \"description\": \"Campo MDD49\"},\n         {\"code\": 50, \"description\": \"Campo MDD50\"},\n         {\"code\": 51, \"description\": \"Campo MDD51\"},\n         {\"code\": 52, \"description\": \"Campo MDD52\"},\n         {\"code\": 53, \"description\": \"Campo MDD53\"},\n         {\"code\": 54, \"description\": \"Campo MDD54\"},\n         {\"code\": 55, \"description\": \"Campo MDD55\"},\n         {\"code\": 56, \"description\": \"Campo MDD56\"},\n         {\"code\": 57, \"description\": \"Campo MDD57\"},\n         {\"code\": 58, \"description\": \"Campo MDD58\"},\n         {\"code\": 59, \"description\": \"Campo MDD59\"},\n         {\"code\": 60, \"description\": \"Campo MDD60\"},\n         {\"code\": 61, \"description\": \"Campo MDD61\"},\n         {\"code\": 62, \"description\": \"Campo MDD62\"},\n         {\"code\": 63, \"description\": \"Campo MDD63\"},\n         {\"code\": 64, \"description\": \"Campo MDD64\"},\n         {\"code\": 65, \"description\": \"Campo MDD65\"},\n         {\"code\": 66, \"description\": \"Campo MDD66\"},\n         {\"code\": 67, \"description\": \"Campo MDD67\"},\n         {\"code\": 68, \"description\": \"Campo MDD68\"},\n         {\"code\": 69, \"description\": \"Campo MDD69\"},\n         {\"code\": 70, \"description\": \"Campo MDD70\"},\n         {\"code\": 71, \"description\": \"Campo MDD71\"},\n         {\"code\": 72, \"description\": \"Campo MDD72\"},\n         {\"code\": 73, \"description\": \"Campo MDD73\"},\n         {\"code\": 74, \"description\": \"Campo MDD74\"},\n         {\"code\": 75, \"description\": \"Campo MDD75\"},\n         {\"code\": 76, \"description\": \"Campo MDD76\"},\n         {\"code\": 77, \"description\": \"Campo MDD77\"},\n         {\"code\": 78, \"description\": \"Campo MDD78\"},\n         {\"code\": 79, \"description\": \"Campo MDD79\"},\n         {\"code\": 80, \"description\": \"Campo MDD80\"},\n         {\"code\": 81, \"description\": \"Campo MDD81\"},\n         {\"code\": 82, \"description\": \"Campo MDD82\"},\n         {\"code\": 83, \"description\": \"Campo MDD83\"},\n         {\"code\": 84, \"description\": \"Campo MDD84\"},\n         {\"code\": 85, \"description\": \"Campo MDD85\"},\n         {\"code\": 86, \"description\": \"Campo MDD86\"},\n         {\"code\": 87, \"description\": \"Campo MDD87\"},\n         {\"code\": 88, \"description\": \"Campo MDD88\"},\n         {\"code\": 89, \"description\": \"Campo MDD89\"},\n         {\"code\": 90, \"description\": \"Campo MDD90\"},\n         {\"code\": 91, \"description\": \"Campo MDD91\"},\n         {\"code\": 92, \"description\": \"Campo MDD92\"},\n         {\"code\": 93, \"description\": \"Campo MDD93\"},\n         {\"code\": 94, \"description\": \"Campo MDD94\"},\n         {\"code\": 95, \"description\": \"Campo MDD95\"},\n         {\"code\": 96, \"description\": \"Campo MDD96\"},\n         {\"code\": 97, \"description\": \"Campo MDD97\"},\n         {\"code\": 98, \"description\": \"Campo MDD98\"},\n         {\"code\": 99, \"description\": \"Campo MDD99\"}\n      ]\n   }\n}\n"
						},
						"url": {
							"raw": "{{base_url}}/api/v2/payments",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v2",
								"payments"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "1 - QAPI check DB",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"site\": \"{{site}}\",\n   \"charge_id\": \"{{chargeId}}\"\n}"
						},
						"url": {
							"raw": "{{qapi_url}}/tests/db",
							"host": [
								"{{qapi_url}}"
							],
							"path": [
								"tests",
								"db"
							]
						},
						"description": "POST check if an operation with these values exists in DB"
					},
					"response": []
				},
				{
					"name": "08a - QAPI set CS VERDE Services",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cb6ecc34-dd1c-4816-9cf8-f323c787f531",
								"type": "text/javascript",
								"exec": [
									"if (responseBody) {",
									"        ",
									"    tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"     if (!tests[\"Status code is 200\"]) {",
									"           ",
									"        console.log('No se recibio el status esperado. Se adjunta el cuerpo de la respuesta:');",
									"",
									"        console.log(responseBody);  ",
									"           ",
									"    }",
									"            ",
									"} else {",
									"           ",
									"    console.log('Error al no recibir respuesta.');",
									"           ",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"site\": \"{{site}}\",\n   \"security_key\": \"7INYIZLob1xKu4W4xhE7l8HYRgf13MQhIA8XtuRCxW0L9VNqIHXBJCvWMbHzbbv0n771oi3jMEL27xOtt0uD5fbeBRqR0N66QevdhXAQ+5KFHJvmoBZ3Xgq2jFTltP6flXN6PPlN3X6XYmPuBhJoqlrFfuo7sD24pM0qRbZFeRf1/13ZrYA+K3vNe6ATvyHr6TF2jMiK8RkstPl97AE95l7B2zYqxWpL2cpPh/WAFFReOFkgqnpo2NYqe3ZRfcYFMBTpJtmZVJu5gnEDBY7cxCp8jmLz5V9cphX5FO19KaBPkMvHFvVjGcXp8JOcL162sNo5hcKZNFCFIZ3ZFizVnQ==\",\n   \"modelo\" : 2,\n   \"mid\" : \"decidir_agregador\",\n   \"rubro\" : 3,\n   \"continuar\" : \"N\",\n   \"reverso\" : \"N\"\n}"
						},
						"url": {
							"raw": "{{qapi_url}}/sites/cs",
							"host": [
								"{{qapi_url}}"
							],
							"path": [
								"sites",
								"cs"
							]
						},
						"description": "POST call to set CS in a certain site"
					},
					"response": []
				},
				{
					"name": "08b - Replicate site",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ecdf7c91-77fd-4387-a55a-6a240fc99092",
								"type": "text/javascript",
								"exec": [
									"if (responseBody) {",
									"        ",
									"    tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"     if (!tests[\"Status code is 200\"]) {",
									"           ",
									"        console.log('No se recibio el status esperado. Se adjunta el cuerpo de la respuesta:');",
									"",
									"        console.log(responseBody);  ",
									"           ",
									"    }",
									"            ",
									"} else {",
									"           ",
									"    console.log('Error al no recibir respuesta.');",
									"           ",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"disabled": true
							},
							{
								"key": "apikey",
								"value": "{{keypublic}}",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"card_number\" : \"4507990000004905\",\n    \"card_expiration_month\" : \"07\",\n    \"card_expiration_year\" : \"17\", \n    \"security_code\" : \"234\",\n    \"card_holder_name\" : \"Valentin Santiago Gomez\",\n    \"card_holder_identification\" : {\n       \"type\" : \"dni\",\n       \"number\" : \"23968498\"\n    },\n    \"fraud_detection\" : {\n        \"device_unique_identifier\": \"12345\"\n    }\n}"
						},
						"url": {
							"raw": "{{coretx_url}}/replication/site/{{site}}",
							"host": [
								"{{coretx_url}}"
							],
							"path": [
								"replication",
								"site",
								"{{site}}"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "08c - Creacion de token pago",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "99ad278d-64bc-4b68-b546-4ad6360db20b",
								"type": "text/javascript",
								"exec": [
									"if (responseBody) {",
									"    var jsonData = JSON.parse(responseBody);",
									"} else {",
									"    console.log('No se recibi√≥ respuesta con el formato esperado'); ",
									"}",
									"",
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"if (!tests[\"Status code is 201\"]) {",
									"    console.log('Alguna de las comprobaciones no dio resultados satisfactorios.');",
									"    if (jsonData) {",
									"        console.log('Se adjunta la respuesta recibida:');",
									"        console.log(jsonData);    ",
									"    } else {",
									"       console.log('Error al intentar parsear la respuesta obtenida. Se adjunta el cuerpo de la respuesta como fue recibido:');",
									"       console.log(responseBody);   ",
									"    }",
									"",
									"} else {",
									"",
									"    if (jsonData.id) {",
									"        console.log('Se cre√≥ el token con id ' + jsonData.id);",
									"        postman.setEnvironmentVariable(\"token\", jsonData.id);",
									"    } else {",
									"        console.log('No se encontr√≥ un id de token en la respuesta');",
									"    }",
									"    ",
									"    if (jsonData.bin) {",
									"        postman.setEnvironmentVariable(\"bin\", jsonData.bin);",
									"    }",
									"    ",
									"    if (pm.environment.get(\"token\")) {",
									"        console.log('Se configur√≥ la variable de entorno token con el valor ' + pm.environment.get(\"token\")); ",
									"    } else {",
									"        console.log('No se pudo configurar correctamente la variable de entorno token');    ",
									"    }",
									"    ",
									"    if (pm.environment.get(\"bin\")) {",
									"        console.log('Se configur√≥ la variable de entorno bin con el valor ' + pm.environment.get(\"bin\")); ",
									"    } else {",
									"        console.log('No se pudo configurar correctamente la variable de entorno bin');    ",
									"    }",
									"",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "apikey",
								"value": "{{keypublic}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"card_number\" : \"4509790112684851\",\n    \"card_expiration_month\" : \"07\",\n    \"card_expiration_year\" : \"19\", \n    \"security_code\" : \"234\",\n    \"card_holder_name\" : \"Valentin Santiago Gomez\",\n    \"card_holder_identification\" : {\n       \"type\" : \"dni\",\n       \"number\" : \"23968498\"\n    },\n    \"fraud_detection\" : {\n        \"device_unique_identifier\": \"12345\"\n    }\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v2/tokens",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v2",
								"tokens"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "08d - Payments CS Services simple OK",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "21f6d5c3-b644-4887-a77e-1e15fb8b295d",
								"type": "text/javascript",
								"exec": [
									"if (responseBody) {",
									"    var jsonData = JSON.parse(responseBody);",
									"    ",
									"    if (jsonData) {",
									"        ",
									"        tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"        if (tests[\"Status code is 201\"]) {",
									"            ",
									"            tests[\"CS response\"] = jsonData.fraud_detection.status !== null;",
									"            ",
									"            if (tests[\"CS response\"]) {",
									"        ",
									"                tests[\"CS decision status is green\"] = jsonData.fraud_detection.status.decision === 'green';",
									"                ",
									"            } else {",
									"               ",
									"               console.log('No se recibi√≥ respuesta de CyberSource. Puede no estar configurado correctamente.');",
									"            }",
									"            ",
									"            if (!tests[\"CS decision status is green\"]) {",
									"                ",
									"                console.log('Alguna de las comprobaciones no dio resultados satisfactorios. Se adjunta la respuesta recibida:');",
									"                ",
									"                console.log(jsonData);",
									"            ",
									"            } else {",
									"                ",
									"                if (jsonData.id) {",
									"                    console.log('Se cre√≥ el pago con id ' + jsonData.id);",
									"                    postman.setEnvironmentVariable(\"chargeId\", jsonData.id);",
									"                ",
									"                    ",
									"                } else {",
									"                ",
									"                console.log('No se encontr√≥ un id de transacci√≥n en la respuesta');",
									"                }",
									"            ",
									"                if (pm.environment.get(\"chargeId\")) {",
									"                    ",
									"                    console.log('Se configur√≥ la variable de entorno chargeId con el valor ' + pm.environment.get(\"chargeId\")); ",
									"    ",
									"                } else {",
									"                    console.log('No se pudo configurar correctamente la variable de entorno chargeId');    ",
									"                }",
									"                ",
									"            }",
									"        ",
									"        } else {",
									"           ",
									"           console.log('No se recibio el status esperado. Se adjunta el cuerpo de la respuesta:');",
									"",
									"           console.log(jsonData);  ",
									"           ",
									"        }",
									"            ",
									"    } else {",
									"           ",
									"           console.log('Error al intentar parsear la respuesta obtenida. Se adjunta el cuerpo de la respuesta como fue recibido:');",
									"",
									"           console.log(responseBody);  ",
									"           ",
									"    }",
									"    ",
									"} else {",
									"    ",
									"    console.log('No se recibi√≥ respuesta con el formato esperado');",
									"    ",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "apikey",
								"value": "{{keyprivate}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"site_transaction_id\": \"auto regrvisacs {{$timestamp}}\",\n   \"token\": \"{{token}}\",\n   \"payment_method_id\": 1,\n   \"bin\": \"{{bin}}\",\n   \"amount\": 20000,\n   \"currency\": \"ARS\",\n   \"installments\": 1,\n   \"payment_type\": \"single\",\n   \"establishment_name\" : \"prueba desa soft\",\n   \"sub_payments\": [],\n   \"fraud_detection\": {\n      \"send_to_cs\": true,\n      \"channel\": \"Web/Mobile/Telefonica\",\n      \"bill_to\": {\n        \"city\": \"Buenos Aires\",\n         \"country\": \"AR\",\n         \"customer_id\": \"martinid\",\n         \"email\": \"accept@decidir.com.ar\",\n         \"first_name\": \"martin\",\n         \"last_name\": \"paoletta\",\n         \"phone_number\": \"1547766329\",\n         \"postal_code\": \"1427\",\n         \"state\": \"BA\",\n         \"street1\": \"GARCIA DEL RIO 4041\",\n         \"street2\": \"GARCIA DEL RIO 4041\"        \n      },      \n      \"purchase_totals\": {\n         \"currency\": \"ARS\",\n         \"amount\": 2\n      },\n      \"customer_in_site\": {\n         \"days_in_site\": 243,\n         \"is_guest\": false,\n         \"password\": \"abracadabra\",\n         \"num_of_transactions\": 1,\n         \"cellphone_number\": \"12121\",\n         \"date_of_birth\": \"129412\",\n         \"street\": \"RIO 4041\"\n      },\n      \"services_transaction_data\": {\n         \"service_type\": \"eltipodelservicio\",\n         \"reference_payment_service1\": \"reference1\",\n         \"reference_payment_service2\": \"reference2\",\n         \"reference_payment_service3\": \"reference3\",\n         \"items\": [\n            {\n               \"code\": \"popblacksabbat2016\",\n               \"description\": \"Popular Black Sabbath 2016\",\n               \"name\": \"popblacksabbat2016ss\",\n               \"sku\": \"asas\",\n               \"total_amount\": 20,\n               \"quantity\": 1,\n               \"unit_price\": 20\n            },\n           {\n              \"code\": \"popblacksdssabbat2016\",\n              \"description\": \"Popular Blasdsck Sabbath 2016\",\n              \"name\": \"popblacksabbatdsds2016ss\",\n              \"sku\": \"aswewas\",\n              \"total_amount\": 111212,\n              \"quantity\": 1,\n              \"unit_price\": 111212\n           }\n         ]\n      },\n        \"csmdds\": [\n         {\"code\": 17, \"description\": \"Campo MDD17\"},\n         {\"code\": 18, \"description\": \"Campo MDD18\"},\n         {\"code\": 19, \"description\": \"Campo MDD19\"},\n         {\"code\": 20, \"description\": \"Campo MDD20\"},\n         {\"code\": 21, \"description\": \"Campo MDD21\"},\n         {\"code\": 22, \"description\": \"Campo MDD22\"},\n         {\"code\": 23, \"description\": \"Campo MDD23\"},\n         {\"code\": 24, \"description\": \"Campo MDD24\"},\n         {\"code\": 25, \"description\": \"Campo MDD25\"},\n         {\"code\": 26, \"description\": \"Campo MDD26\"},\n         {\"code\": 27, \"description\": \"Campo MDD27\"},\n         {\"code\": 28, \"description\": \"Campo MDD28\"},\n         {\"code\": 29, \"description\": \"Campo MDD29\"},\n         {\"code\": 30, \"description\": \"Campo MDD30\"},\n         {\"code\": 31, \"description\": \"Campo MDD31\"},\n         {\"code\": 32, \"description\": \"Campo MDD32\"},\n         {\"code\": 33, \"description\": \"Campo MDD33\"},\n         {\"code\": 34, \"description\": \"Campo MDD34\"},\n         {\"code\": 43, \"description\": \"Campo MDD43\"},\n         {\"code\": 44, \"description\": \"Campo MDD44\"},\n         {\"code\": 45, \"description\": \"Campo MDD45\"},\n         {\"code\": 46, \"description\": \"Campo MDD46\"},\n         {\"code\": 47, \"description\": \"Campo MDD47\"},\n         {\"code\": 48, \"description\": \"Campo MDD48\"},\n         {\"code\": 49, \"description\": \"Campo MDD49\"},\n         {\"code\": 50, \"description\": \"Campo MDD50\"},\n         {\"code\": 51, \"description\": \"Campo MDD51\"},\n         {\"code\": 52, \"description\": \"Campo MDD52\"},\n         {\"code\": 53, \"description\": \"Campo MDD53\"},\n         {\"code\": 54, \"description\": \"Campo MDD54\"},\n         {\"code\": 55, \"description\": \"Campo MDD55\"},\n         {\"code\": 56, \"description\": \"Campo MDD56\"},\n         {\"code\": 57, \"description\": \"Campo MDD57\"},\n         {\"code\": 58, \"description\": \"Campo MDD58\"},\n         {\"code\": 59, \"description\": \"Campo MDD59\"},\n         {\"code\": 60, \"description\": \"Campo MDD60\"},\n         {\"code\": 61, \"description\": \"Campo MDD61\"},\n       {\"code\": 62, \"description\": \"Campo MDD62\"},\n         {\"code\": 63, \"description\": \"Campo MDD63\"},\n         {\"code\": 64, \"description\": \"Campo MDD64\"},\n         {\"code\": 65, \"description\": \"Campo MDD65\"},\n         {\"code\": 66, \"description\": \"Campo MDD66\"},\n         {\"code\": 67, \"description\": \"Campo MDD67\"},\n         {\"code\": 68, \"description\": \"Campo MDD68\"},\n         {\"code\": 69, \"description\": \"Campo MDD69\"},\n         {\"code\": 70, \"description\": \"Campo MDD70\"},\n         {\"code\": 71, \"description\": \"Campo MDD71\"},\n         {\"code\": 72, \"description\": \"Campo MDD72\"},\n         {\"code\": 73, \"description\": \"Campo MDD73\"},\n         {\"code\": 74, \"description\": \"Campo MDD74\"},\n         {\"code\": 75, \"description\": \"Campo MDD75\"},\n         {\"code\": 76, \"description\": \"Campo MDD76\"},\n         {\"code\": 77, \"description\": \"Campo MDD77\"},\n         {\"code\": 78, \"description\": \"Campo MDD78\"},\n         {\"code\": 79, \"description\": \"Campo MDD79\"},\n         {\"code\": 80, \"description\": \"Campo MDD80\"},\n         {\"code\": 81, \"description\": \"Campo MDD81\"},\n         {\"code\": 82, \"description\": \"Campo MDD82\"},\n         {\"code\": 83, \"description\": \"Campo MDD83\"},\n         {\"code\": 84, \"description\": \"Campo MDD84\"},\n         {\"code\": 85, \"description\": \"Campo MDD85\"},\n         {\"code\": 86, \"description\": \"Campo MDD86\"},\n         {\"code\": 87, \"description\": \"Campo MDD87\"},\n         {\"code\": 88, \"description\": \"Campo MDD88\"},\n         {\"code\": 89, \"description\": \"Campo MDD89\"},\n         {\"code\": 90, \"description\": \"Campo MDD90\"},\n         {\"code\": 91, \"description\": \"Campo MDD91\"},\n         {\"code\": 92, \"description\": \"Campo MDD92\"},\n         {\"code\": 93, \"description\": \"Campo MDD93\"},\n         {\"code\": 94, \"description\": \"Campo MDD94\"},\n         {\"code\": 95, \"description\": \"Campo MDD95\"},\n         {\"code\": 96, \"description\": \"Campo MDD96\"},\n         {\"code\": 97, \"description\": \"Campo MDD97\"},\n         {\"code\": 98, \"description\": \"Campo MDD98\"},\n         {\"code\": 99, \"description\": \"Campo MDD99\"}\n      ]\n   }\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v2/payments",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v2",
								"payments"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "1 - QAPI check DB",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"site\": \"{{site}}\",\n   \"charge_id\": \"{{chargeId}}\"\n}"
						},
						"url": {
							"raw": "{{qapi_url}}/tests/db",
							"host": [
								"{{qapi_url}}"
							],
							"path": [
								"tests",
								"db"
							]
						},
						"description": "POST check if an operation with these values exists in DB"
					},
					"response": []
				},
				{
					"name": "08e - Creacion de token pago",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "11961f81-2c25-4249-b600-fe73b347d4bf",
								"type": "text/javascript",
								"exec": [
									"if (responseBody) {",
									"    var jsonData = JSON.parse(responseBody);",
									"} else {",
									"    console.log('No se recibi√≥ respuesta con el formato esperado'); ",
									"}",
									"",
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"if (!tests[\"Status code is 201\"]) {",
									"    console.log('Alguna de las comprobaciones no dio resultados satisfactorios.');",
									"    if (jsonData) {",
									"        console.log('Se adjunta la respuesta recibida:');",
									"        console.log(jsonData);    ",
									"    } else {",
									"       console.log('Error al intentar parsear la respuesta obtenida. Se adjunta el cuerpo de la respuesta como fue recibido:');",
									"       console.log(responseBody);   ",
									"    }",
									"",
									"} else {",
									"",
									"    if (jsonData.id) {",
									"        console.log('Se cre√≥ el token con id ' + jsonData.id);",
									"        postman.setEnvironmentVariable(\"token\", jsonData.id);",
									"    } else {",
									"        console.log('No se encontr√≥ un id de token en la respuesta');",
									"    }",
									"    ",
									"    if (jsonData.bin) {",
									"        postman.setEnvironmentVariable(\"bin\", jsonData.bin);",
									"    }",
									"    ",
									"    if (pm.environment.get(\"token\")) {",
									"        console.log('Se configur√≥ la variable de entorno token con el valor ' + pm.environment.get(\"token\")); ",
									"    } else {",
									"        console.log('No se pudo configurar correctamente la variable de entorno token');    ",
									"    }",
									"    ",
									"    if (pm.environment.get(\"bin\")) {",
									"        console.log('Se configur√≥ la variable de entorno bin con el valor ' + pm.environment.get(\"bin\")); ",
									"    } else {",
									"        console.log('No se pudo configurar correctamente la variable de entorno bin');    ",
									"    }",
									"",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "apikey",
								"value": "{{keypublic}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"card_number\" : \"4509790112684851\",\n    \"card_expiration_month\" : \"07\",\n    \"card_expiration_year\" : \"19\", \n    \"security_code\" : \"234\",\n    \"card_holder_name\" : \"Valentin Santiago Gomez\",\n    \"card_holder_identification\" : {\n       \"type\" : \"dni\",\n       \"number\" : \"23968498\"\n    },\n    \"fraud_detection\" : {\n        \"device_unique_identifier\": \"12345\"\n    }\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v2/tokens",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v2",
								"tokens"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "08f - Payments CS Services distribuida OK",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e8a56275-5efb-496f-8c4e-a8ed3d2e3f20",
								"type": "text/javascript",
								"exec": [
									"if (responseBody) {",
									"    var jsonData = JSON.parse(responseBody);",
									"    ",
									"    if (jsonData) {",
									"        ",
									"        tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"        if (tests[\"Status code is 201\"]) {",
									"            ",
									"            tests[\"CS response\"] = jsonData.fraud_detection.status !== null;",
									"            ",
									"            if (tests[\"CS response\"]) {",
									"        ",
									"                tests[\"CS decision status is green\"] = jsonData.fraud_detection.status.decision === 'green';",
									"                ",
									"                tests[\"has subpayments\"] = jsonData.sub_payments !== null;",
									"                ",
									"                if (tests[\"has subpayments\"]) {",
									"                ",
									"                    tests[\"Status child 1 is approved\"] = jsonData.sub_payments[0].status === 'approved';",
									"                    tests[\"Status child 2 is approved\"] = jsonData.sub_payments[1].status === 'approved';",
									"                ",
									"                } else {",
									"               ",
									"                    console.log('No se encontraron subpagos realizados.');",
									"                }",
									"                ",
									"            } else {",
									"               ",
									"               console.log('No se recibi√≥ respuesta de CyberSource. Puede no estar configurado correctamente.');",
									"            }",
									"            ",
									"            if (!tests[\"CS decision status is green\"] || !tests[\"has subpayments\"] || !tests[\"Status child 1 is approved\"] || !tests[\"Status child 2 is approved\"]) {",
									"                ",
									"                console.log('Alguna de las comprobaciones no dio resultados satisfactorios. Se adjunta la respuesta recibida:');",
									"                ",
									"                console.log(jsonData);",
									"            ",
									"            } else {",
									"                ",
									"                if (jsonData.id) {",
									"                    console.log('Se cre√≥ el pago con id ' + jsonData.id);",
									"                    postman.setEnvironmentVariable(\"chargeId\", jsonData.id);",
									"                ",
									"                    ",
									"                } else {",
									"                ",
									"                console.log('No se encontr√≥ un id de transacci√≥n en la respuesta');",
									"                }",
									"            ",
									"                if (pm.environment.get(\"chargeId\")) {",
									"                    ",
									"                    console.log('Se configur√≥ la variable de entorno chargeId con el valor ' + pm.environment.get(\"chargeId\")); ",
									"    ",
									"                } else {",
									"                    console.log('No se pudo configurar correctamente la variable de entorno chargeId');    ",
									"                }",
									"                ",
									"            }",
									"        ",
									"        } else {",
									"           ",
									"           console.log('No se recibio el status esperado. Se adjunta el cuerpo de la respuesta:');",
									"",
									"           console.log(jsonData);  ",
									"           ",
									"        }",
									"            ",
									"    } else {",
									"           ",
									"           console.log('Error al intentar parsear la respuesta obtenida. Se adjunta el cuerpo de la respuesta como fue recibido:');",
									"",
									"           console.log(responseBody);  ",
									"           ",
									"    }",
									"    ",
									"} else {",
									"    ",
									"    console.log('No se recibi√≥ respuesta con el formato esperado');",
									"    ",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "apikey",
								"value": "{{keyprivate}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"site_transaction_id\": \"auto regrvisacs {{$timestamp}}\",\n   \"token\": \"{{token}}\",\n   \"payment_method_id\": 1,\n   \"bin\": \"{{bin}}\",\n   \"amount\": 20000,\n   \"currency\": \"ARS\",\n   \"installments\": 1,\n   \"payment_type\": \"distributed\",\n   \"establishment_name\" : \"prueba desa soft\",\n    \"sub_payments\": [\n      {\n         \"site_id\": \"{{subsite_1}}\",\n         \"installments\": 5,\n         \"amount\": 11000\n      },\n      {\n         \"site_id\": \"{{subsite_2}}\",\n         \"installments\": 6,\n         \"amount\": 9000\n        \n      }\n   ], \n   \"fraud_detection\": {\n      \"send_to_cs\": true,\n      \"channel\": \"Web/Mobile/Telefonica\",\n      \"bill_to\": {\n        \"city\": \"Buenos Aires\",\n         \"country\": \"AR\",\n         \"customer_id\": \"martinid\",\n         \"email\": \"accept@decidir.com.ar\",\n         \"first_name\": \"martin\",\n         \"last_name\": \"paoletta\",\n         \"phone_number\": \"1547766329\",\n         \"postal_code\": \"1427\",\n         \"state\": \"BA\",\n         \"street1\": \"GARCIA DEL RIO 4041\",\n         \"street2\": \"GARCIA DEL RIO 4041\"        \n      },      \n      \"purchase_totals\": {\n         \"currency\": \"ARS\",\n         \"amount\": 2\n      },\n      \"customer_in_site\": {\n         \"days_in_site\": 243,\n         \"is_guest\": false,\n         \"password\": \"abracadabra\",\n         \"num_of_transactions\": 1,\n         \"cellphone_number\": \"12121\",\n         \"date_of_birth\": \"129412\",\n         \"street\": \"RIO 4041\"\n      },\n      \"services_transaction_data\": {\n         \"service_type\": \"eltipodelservicio\",\n         \"reference_payment_service1\": \"reference1\",\n         \"reference_payment_service2\": \"reference2\",\n         \"reference_payment_service3\": \"reference3\",\n         \"items\": [\n            {\n               \"code\": \"popblacksabbat2016\",\n               \"description\": \"Popular Black Sabbath 2016\",\n               \"name\": \"popblacksabbat2016ss\",\n               \"sku\": \"asas\",\n               \"total_amount\": 20,\n               \"quantity\": 1,\n               \"unit_price\": 20\n            },\n           {\n              \"code\": \"popblacksdssabbat2016\",\n              \"description\": \"Popular Blasdsck Sabbath 2016\",\n              \"name\": \"popblacksabbatdsds2016ss\",\n              \"sku\": \"aswewas\",\n              \"total_amount\": 111212,\n              \"quantity\": 1,\n              \"unit_price\": 111212\n           }\n         ]\n      },\n        \"csmdds\": [\n         {\"code\": 17, \"description\": \"Campo MDD17\"},\n         {\"code\": 18, \"description\": \"Campo MDD18\"},\n         {\"code\": 19, \"description\": \"Campo MDD19\"},\n         {\"code\": 20, \"description\": \"Campo MDD20\"},\n         {\"code\": 21, \"description\": \"Campo MDD21\"},\n         {\"code\": 22, \"description\": \"Campo MDD22\"},\n         {\"code\": 23, \"description\": \"Campo MDD23\"},\n         {\"code\": 24, \"description\": \"Campo MDD24\"},\n         {\"code\": 25, \"description\": \"Campo MDD25\"},\n         {\"code\": 26, \"description\": \"Campo MDD26\"},\n         {\"code\": 27, \"description\": \"Campo MDD27\"},\n         {\"code\": 28, \"description\": \"Campo MDD28\"},\n         {\"code\": 29, \"description\": \"Campo MDD29\"},\n         {\"code\": 30, \"description\": \"Campo MDD30\"},\n         {\"code\": 31, \"description\": \"Campo MDD31\"},\n         {\"code\": 32, \"description\": \"Campo MDD32\"},\n         {\"code\": 33, \"description\": \"Campo MDD33\"},\n         {\"code\": 34, \"description\": \"Campo MDD34\"},\n         {\"code\": 43, \"description\": \"Campo MDD43\"},\n         {\"code\": 44, \"description\": \"Campo MDD44\"},\n         {\"code\": 45, \"description\": \"Campo MDD45\"},\n         {\"code\": 46, \"description\": \"Campo MDD46\"},\n         {\"code\": 47, \"description\": \"Campo MDD47\"},\n         {\"code\": 48, \"description\": \"Campo MDD48\"},\n         {\"code\": 49, \"description\": \"Campo MDD49\"},\n         {\"code\": 50, \"description\": \"Campo MDD50\"},\n         {\"code\": 51, \"description\": \"Campo MDD51\"},\n         {\"code\": 52, \"description\": \"Campo MDD52\"},\n         {\"code\": 53, \"description\": \"Campo MDD53\"},\n         {\"code\": 54, \"description\": \"Campo MDD54\"},\n         {\"code\": 55, \"description\": \"Campo MDD55\"},\n         {\"code\": 56, \"description\": \"Campo MDD56\"},\n         {\"code\": 57, \"description\": \"Campo MDD57\"},\n         {\"code\": 58, \"description\": \"Campo MDD58\"},\n         {\"code\": 59, \"description\": \"Campo MDD59\"},\n         {\"code\": 60, \"description\": \"Campo MDD60\"},\n         {\"code\": 61, \"description\": \"Campo MDD61\"},\n     {\"code\": 62, \"description\": \"Campo MDD62\"},\n {\"code\": 63, \"description\": \"Campo MDD63\"},\n         {\"code\": 64, \"description\": \"Campo MDD64\"},\n         {\"code\": 65, \"description\": \"Campo MDD65\"},\n         {\"code\": 66, \"description\": \"Campo MDD66\"},\n         {\"code\": 67, \"description\": \"Campo MDD67\"},\n         {\"code\": 68, \"description\": \"Campo MDD68\"},\n         {\"code\": 69, \"description\": \"Campo MDD69\"},\n         {\"code\": 70, \"description\": \"Campo MDD70\"},\n         {\"code\": 71, \"description\": \"Campo MDD71\"},\n         {\"code\": 72, \"description\": \"Campo MDD72\"},\n         {\"code\": 73, \"description\": \"Campo MDD73\"},\n         {\"code\": 74, \"description\": \"Campo MDD74\"},\n         {\"code\": 75, \"description\": \"Campo MDD75\"},\n         {\"code\": 76, \"description\": \"Campo MDD76\"},\n         {\"code\": 77, \"description\": \"Campo MDD77\"},\n         {\"code\": 78, \"description\": \"Campo MDD78\"},\n         {\"code\": 79, \"description\": \"Campo MDD79\"},\n         {\"code\": 80, \"description\": \"Campo MDD80\"},\n         {\"code\": 81, \"description\": \"Campo MDD81\"},\n         {\"code\": 82, \"description\": \"Campo MDD82\"},\n         {\"code\": 83, \"description\": \"Campo MDD83\"},\n         {\"code\": 84, \"description\": \"Campo MDD84\"},\n         {\"code\": 85, \"description\": \"Campo MDD85\"},\n         {\"code\": 86, \"description\": \"Campo MDD86\"},\n         {\"code\": 87, \"description\": \"Campo MDD87\"},\n         {\"code\": 88, \"description\": \"Campo MDD88\"},\n         {\"code\": 89, \"description\": \"Campo MDD89\"},\n         {\"code\": 90, \"description\": \"Campo MDD90\"},\n         {\"code\": 91, \"description\": \"Campo MDD91\"},\n         {\"code\": 92, \"description\": \"Campo MDD92\"},\n         {\"code\": 93, \"description\": \"Campo MDD93\"},\n         {\"code\": 94, \"description\": \"Campo MDD94\"},\n         {\"code\": 95, \"description\": \"Campo MDD95\"},\n         {\"code\": 96, \"description\": \"Campo MDD96\"},\n         {\"code\": 97, \"description\": \"Campo MDD97\"},\n         {\"code\": 98, \"description\": \"Campo MDD98\"},\n         {\"code\": 99, \"description\": \"Campo MDD99\"}\n      ]\n   }\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v2/payments",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v2",
								"payments"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "1 - QAPI check DB",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"site\": \"{{site}}\",\n   \"charge_id\": \"{{chargeId}}\"\n}"
						},
						"url": {
							"raw": "{{qapi_url}}/tests/db",
							"host": [
								"{{qapi_url}}"
							],
							"path": [
								"tests",
								"db"
							]
						},
						"description": "POST check if an operation with these values exists in DB"
					},
					"response": []
				},
				{
					"name": "09a - QAPI set CS VERDE Ticketing",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8f24d308-8db3-4ac0-b0a2-f06636d5e72b",
								"type": "text/javascript",
								"exec": [
									"if (responseBody) {",
									"        ",
									"    tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"     if (!tests[\"Status code is 200\"]) {",
									"           ",
									"        console.log('No se recibio el status esperado. Se adjunta el cuerpo de la respuesta:');",
									"",
									"        console.log(responseBody);  ",
									"           ",
									"    }",
									"            ",
									"} else {",
									"           ",
									"    console.log('Error al no recibir respuesta.');",
									"           ",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"site\": \"{{site}}\",\n   \"security_key\": \"7INYIZLob1xKu4W4xhE7l8HYRgf13MQhIA8XtuRCxW0L9VNqIHXBJCvWMbHzbbv0n771oi3jMEL27xOtt0uD5fbeBRqR0N66QevdhXAQ+5KFHJvmoBZ3Xgq2jFTltP6flXN6PPlN3X6XYmPuBhJoqlrFfuo7sD24pM0qRbZFeRf1/13ZrYA+K3vNe6ATvyHr6TF2jMiK8RkstPl97AE95l7B2zYqxWpL2cpPh/WAFFReOFkgqnpo2NYqe3ZRfcYFMBTpJtmZVJu5gnEDBY7cxCp8jmLz5V9cphX5FO19KaBPkMvHFvVjGcXp8JOcL162sNo5hcKZNFCFIZ3ZFizVnQ==\",\n   \"modelo\" : 2,\n   \"mid\" : \"decidir_agregador\",\n   \"rubro\" : 4,\n   \"continuar\" : \"N\",\n   \"reverso\" : \"N\"\n}"
						},
						"url": {
							"raw": "{{qapi_url}}/sites/cs",
							"host": [
								"{{qapi_url}}"
							],
							"path": [
								"sites",
								"cs"
							]
						},
						"description": "POST call to set CS in a certain site"
					},
					"response": []
				},
				{
					"name": "09b - Replicate site",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6c5f676c-1935-4cfd-afb7-e8012b372e7e",
								"type": "text/javascript",
								"exec": [
									"if (responseBody) {",
									"        ",
									"    tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"     if (!tests[\"Status code is 200\"]) {",
									"           ",
									"        console.log('No se recibio el status esperado. Se adjunta el cuerpo de la respuesta:');",
									"",
									"        console.log(responseBody);  ",
									"           ",
									"    }",
									"            ",
									"} else {",
									"           ",
									"    console.log('Error al no recibir respuesta.');",
									"           ",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"disabled": true
							},
							{
								"key": "apikey",
								"value": "{{keypublic}}",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"card_number\" : \"4507990000004905\",\n    \"card_expiration_month\" : \"07\",\n    \"card_expiration_year\" : \"17\", \n    \"security_code\" : \"234\",\n    \"card_holder_name\" : \"Valentin Santiago Gomez\",\n    \"card_holder_identification\" : {\n       \"type\" : \"dni\",\n       \"number\" : \"23968498\"\n    },\n    \"fraud_detection\" : {\n        \"device_unique_identifier\": \"12345\"\n    }\n}"
						},
						"url": {
							"raw": "{{coretx_url}}/replication/site/{{site}}",
							"host": [
								"{{coretx_url}}"
							],
							"path": [
								"replication",
								"site",
								"{{site}}"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "09c - Creacion de token pago",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3165eae5-3bb8-4719-94bf-68faf18e3914",
								"type": "text/javascript",
								"exec": [
									"if (responseBody) {",
									"    var jsonData = JSON.parse(responseBody);",
									"} else {",
									"    console.log('No se recibi√≥ respuesta con el formato esperado'); ",
									"}",
									"",
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"if (!tests[\"Status code is 201\"]) {",
									"    console.log('Alguna de las comprobaciones no dio resultados satisfactorios.');",
									"    if (jsonData) {",
									"        console.log('Se adjunta la respuesta recibida:');",
									"        console.log(jsonData);    ",
									"    } else {",
									"       console.log('Error al intentar parsear la respuesta obtenida. Se adjunta el cuerpo de la respuesta como fue recibido:');",
									"       console.log(responseBody);   ",
									"    }",
									"",
									"} else {",
									"",
									"    if (jsonData.id) {",
									"        console.log('Se cre√≥ el token con id ' + jsonData.id);",
									"        postman.setEnvironmentVariable(\"token\", jsonData.id);",
									"    } else {",
									"        console.log('No se encontr√≥ un id de token en la respuesta');",
									"    }",
									"    ",
									"    if (jsonData.bin) {",
									"        postman.setEnvironmentVariable(\"bin\", jsonData.bin);",
									"    }",
									"    ",
									"    if (pm.environment.get(\"token\")) {",
									"        console.log('Se configur√≥ la variable de entorno token con el valor ' + pm.environment.get(\"token\")); ",
									"    } else {",
									"        console.log('No se pudo configurar correctamente la variable de entorno token');    ",
									"    }",
									"    ",
									"    if (pm.environment.get(\"bin\")) {",
									"        console.log('Se configur√≥ la variable de entorno bin con el valor ' + pm.environment.get(\"bin\")); ",
									"    } else {",
									"        console.log('No se pudo configurar correctamente la variable de entorno bin');    ",
									"    }",
									"",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "apikey",
								"value": "{{keypublic}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"card_number\" : \"4509790112684851\",\n    \"card_expiration_month\" : \"07\",\n    \"card_expiration_year\" : \"19\", \n    \"security_code\" : \"234\",\n    \"card_holder_name\" : \"Valentin Santiago Gomez\",\n    \"card_holder_identification\" : {\n       \"type\" : \"dni\",\n       \"number\" : \"23968498\"\n    },\n    \"fraud_detection\" : {\n        \"device_unique_identifier\": \"12345\"\n    }\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v2/tokens",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v2",
								"tokens"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "09d - Payments CS Ticketing simple OK",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5bf0ccd1-b05a-41a8-adae-e6e1954226c1",
								"type": "text/javascript",
								"exec": [
									"if (responseBody) {",
									"    var jsonData = JSON.parse(responseBody);",
									"    ",
									"    if (jsonData) {",
									"        ",
									"        tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"        if (tests[\"Status code is 201\"]) {",
									"            ",
									"            tests[\"CS response\"] = jsonData.fraud_detection.status !== null;",
									"            ",
									"            if (tests[\"CS response\"]) {",
									"        ",
									"                tests[\"CS decision status is green\"] = jsonData.fraud_detection.status.decision === 'green';",
									"                ",
									"            } else {",
									"               ",
									"               console.log('No se recibi√≥ respuesta de CyberSource. Puede no estar configurado correctamente.');",
									"            }",
									"            ",
									"            if (!tests[\"CS decision status is green\"]) {",
									"                ",
									"                console.log('Alguna de las comprobaciones no dio resultados satisfactorios. Se adjunta la respuesta recibida:');",
									"                ",
									"                console.log(jsonData);",
									"            ",
									"            } else {",
									"                ",
									"                if (jsonData.id) {",
									"                    console.log('Se cre√≥ el pago con id ' + jsonData.id);",
									"                    postman.setEnvironmentVariable(\"chargeId\", jsonData.id);",
									"                ",
									"                    ",
									"                } else {",
									"                ",
									"                console.log('No se encontr√≥ un id de transacci√≥n en la respuesta');",
									"                }",
									"            ",
									"                if (pm.environment.get(\"chargeId\")) {",
									"                    ",
									"                    console.log('Se configur√≥ la variable de entorno chargeId con el valor ' + pm.environment.get(\"chargeId\")); ",
									"    ",
									"                } else {",
									"                    console.log('No se pudo configurar correctamente la variable de entorno chargeId');    ",
									"                }",
									"                ",
									"            }",
									"        ",
									"        } else {",
									"           ",
									"           console.log('No se recibio el status esperado. Se adjunta el cuerpo de la respuesta:');",
									"",
									"           console.log(jsonData);  ",
									"           ",
									"        }",
									"            ",
									"    } else {",
									"           ",
									"           console.log('Error al intentar parsear la respuesta obtenida. Se adjunta el cuerpo de la respuesta como fue recibido:');",
									"",
									"           console.log(responseBody);  ",
									"           ",
									"    }",
									"    ",
									"} else {",
									"    ",
									"    console.log('No se recibi√≥ respuesta con el formato esperado');",
									"    ",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "apikey",
								"value": "{{keyprivate}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"user_id\": \"morton\",\n   \"site_transaction_id\": \"auto regrvisacs {{$timestamp}}\",\n   \"token\": \"{{token}}\",\n   \"payment_method_id\": 1,\n   \"bin\": \"{{bin}}\",\n   \"amount\": 20000,\n   \"currency\": \"ARS\",\n   \"installments\": 1,\n   \"description\": \"Prueba QA\",\n   \"payment_type\": \"single\",\n   \"establishment_name\" : \"prueba desa soft\",\n   \"sub_payments\": [\n   ], \n   \n    \"fraud_detection\": {\n        \"send_to_cs\": true,\n        \"channel\": \"Web/Mobile/Telefonica\",\n        \"bill_to\": {\n        \"city\": \"Buenos Aires\",\n        \"country\": \"AR\",\n        \"customer_id\": \"martinid\",\n        \"email\": \"accept@decidir.com.ar\",\n        \"first_name\": \"leila\",\n      \"last_name\": \"PPP\",\n        \"phone_number\": \"2322323232\",\n        \"postal_code\": \"1223\",\n        \"state\": \"BA\",\n        \"street1\": \"Italia 1234\",\n        \"street2\": \"Italia 1234\"        \n     },\n        \"purchase_totals\": {\n        \"currency\": \"ARS\",\n        \"amount\": 12444\n     },\n     \"customer_in_site\": {\n        \"days_in_site\": 243,\n        \"is_guest\": false,\n        \"password\": \"abracadabra\",\n        \"num_of_transactions\": 1,\n        \"cellphone_number\": \"12121\",\n        \"date_of_birth\": \"129412\",\n        \"street\": \"RIO 4041\"\n     },\n     \"ticketing_transaction_data\": {\n        \"days_to_event\": 55,\n        \"delivery_type\": \"Pick up\",\n        \"items\": [\n           {\n              \"code\": \"popblacksabbat2016\",\n              \"description\": \"Popular Black Sabbath 2016\",\n              \"name\": \"popblacksabbat2016ss\",\n              \"sku\": \"asas\",\n              \"total_amount\": 242424,\n              \"quantity\": 2,\n              \"unit_price\": 121212\n           },\n           {\n              \"code\": \"popblacksdssabbat2016\",\n              \"description\": \"Popular Blasdsck Sabbath 2016\",\n              \"name\": \"popblacksabbatdsds2016ss\",\n              \"sku\": \"aswewas\",\n              \"total_amount\": 111212,\n              \"quantity\": 1,\n              \"unit_price\": 111212\n           }\n        ]\n     },\n        \"csmdds\": [\n         {\"code\": 12, \"description\": \"Campo MDD12\"},\n         {\"code\": 14, \"description\": \"Campo MDD14\"},\n         {\"code\": 15, \"description\": \"Campo MDD15\"},\n         {\"code\": 16, \"description\": \"Campo MDD16\"},\n         {\"code\": 17, \"description\": \"Campo MDD17\"},\n         {\"code\": 18, \"description\": \"Campo MDD18\"},\n         {\"code\": 19, \"description\": \"Campo MDD19\"},\n         {\"code\": 20, \"description\": \"Campo MDD20\"},\n         {\"code\": 21, \"description\": \"Campo MDD21\"},\n         {\"code\": 22, \"description\": \"Campo MDD22\"},\n         {\"code\": 23, \"description\": \"Campo MDD23\"},\n         {\"code\": 24, \"description\": \"Campo MDD24\"},\n         {\"code\": 25, \"description\": \"Campo MDD25\"},\n         {\"code\": 26, \"description\": \"Campo MDD26\"},\n         {\"code\": 27, \"description\": \"Campo MDD27\"},\n         {\"code\": 28, \"description\": \"Campo MDD28\"},\n         {\"code\": 29, \"description\": \"Campo MDD29\"},\n         {\"code\": 30, \"description\": \"Campo MDD30\"},\n         {\"code\": 31, \"description\": \"Campo MDD31\"},\n         {\"code\": 32, \"description\": \"Campo MDD32\"},\n         {\"code\": 43, \"description\": \"Campo MDD43\"},\n         {\"code\": 44, \"description\": \"Campo MDD44\"},\n         {\"code\": 45, \"description\": \"Campo MDD45\"},\n         {\"code\": 46, \"description\": \"Campo MDD46\"},\n         {\"code\": 47, \"description\": \"Campo MDD47\"},\n         {\"code\": 48, \"description\": \"Campo MDD48\"},\n         {\"code\": 49, \"description\": \"Campo MDD49\"},\n         {\"code\": 50, \"description\": \"Campo MDD50\"},\n         {\"code\": 51, \"description\": \"Campo MDD51\"},\n         {\"code\": 52, \"description\": \"Campo MDD52\"},\n         {\"code\": 53, \"description\": \"Campo MDD53\"},\n         {\"code\": 54, \"description\": \"Campo MDD54\"},\n         {\"code\": 55, \"description\": \"Campo MDD55\"},\n         {\"code\": 56, \"description\": \"Campo MDD56\"},\n         {\"code\": 57, \"description\": \"Campo MDD57\"},\n         {\"code\": 58, \"description\": \"Campo MDD58\"},\n         {\"code\": 59, \"description\": \"Campo MDD59\"},\n         {\"code\": 60, \"description\": \"Campo MDD60\"},\n         {\"code\": 61, \"description\": \"Campo MDD61\"},\n         {\"code\": 62, \"description\": \"Campo MDD62\"},\n         {\"code\": 63, \"description\": \"Campo MDD63\"},\n         {\"code\": 64, \"description\": \"Campo MDD64\"},\n         {\"code\": 65, \"description\": \"Campo MDD65\"},\n         {\"code\": 66, \"description\": \"Campo MDD66\"},\n         {\"code\": 67, \"description\": \"Campo MDD67\"},\n         {\"code\": 68, \"description\": \"Campo MDD68\"},\n         {\"code\": 69, \"description\": \"Campo MDD69\"},\n         {\"code\": 70, \"description\": \"Campo MDD70\"},\n         {\"code\": 71, \"description\": \"Campo MDD71\"},\n         {\"code\": 72, \"description\": \"Campo MDD72\"},\n         {\"code\": 73, \"description\": \"Campo MDD73\"},\n         {\"code\": 74, \"description\": \"Campo MDD74\"},\n         {\"code\": 75, \"description\": \"Campo MDD75\"},\n         {\"code\": 76, \"description\": \"Campo MDD76\"},\n         {\"code\": 77, \"description\": \"Campo MDD77\"},\n         {\"code\": 78, \"description\": \"Campo MDD78\"},\n         {\"code\": 79, \"description\": \"Campo MDD79\"},\n         {\"code\": 80, \"description\": \"Campo MDD80\"},\n         {\"code\": 81, \"description\": \"Campo MDD81\"},\n         {\"code\": 82, \"description\": \"Campo MDD82\"},\n         {\"code\": 83, \"description\": \"Campo MDD83\"},\n         {\"code\": 84, \"description\": \"Campo MDD84\"},\n         {\"code\": 85, \"description\": \"Campo MDD85\"},\n         {\"code\": 86, \"description\": \"Campo MDD86\"},\n         {\"code\": 87, \"description\": \"Campo MDD87\"},\n         {\"code\": 88, \"description\": \"Campo MDD88\"},\n         {\"code\": 89, \"description\": \"Campo MDD89\"},\n         {\"code\": 90, \"description\": \"Campo MDD90\"},\n         {\"code\": 91, \"description\": \"Campo MDD91\"},\n         {\"code\": 92, \"description\": \"Campo MDD92\"},\n         {\"code\": 93, \"description\": \"Campo MDD93\"},\n         {\"code\": 94, \"description\": \"Campo MDD94\"},\n         {\"code\": 95, \"description\": \"Campo MDD95\"},\n         {\"code\": 96, \"description\": \"Campo MDD96\"},\n         {\"code\": 97, \"description\": \"Campo MDD97\"},\n         {\"code\": 98, \"description\": \"Campo MDD98\"},\n         {\"code\": 99, \"description\": \"Campo MDD99\"}\n      ]\n  }\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v2/payments",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v2",
								"payments"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "1 - QAPI check DB",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"site\": \"{{site}}\",\n   \"charge_id\": \"{{chargeId}}\"\n}"
						},
						"url": {
							"raw": "{{qapi_url}}/tests/db",
							"host": [
								"{{qapi_url}}"
							],
							"path": [
								"tests",
								"db"
							]
						},
						"description": "POST check if an operation with these values exists in DB"
					},
					"response": []
				},
				{
					"name": "09e - Creacion de token pago",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b03fd8ef-856f-4f91-b6c9-334ed2025ba7",
								"type": "text/javascript",
								"exec": [
									"if (responseBody) {",
									"    var jsonData = JSON.parse(responseBody);",
									"} else {",
									"    console.log('No se recibi√≥ respuesta con el formato esperado'); ",
									"}",
									"",
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"if (!tests[\"Status code is 201\"]) {",
									"    console.log('Alguna de las comprobaciones no dio resultados satisfactorios.');",
									"    if (jsonData) {",
									"        console.log('Se adjunta la respuesta recibida:');",
									"        console.log(jsonData);    ",
									"    } else {",
									"       console.log('Error al intentar parsear la respuesta obtenida. Se adjunta el cuerpo de la respuesta como fue recibido:');",
									"       console.log(responseBody);   ",
									"    }",
									"",
									"} else {",
									"",
									"    if (jsonData.id) {",
									"        console.log('Se cre√≥ el token con id ' + jsonData.id);",
									"        postman.setEnvironmentVariable(\"token\", jsonData.id);",
									"    } else {",
									"        console.log('No se encontr√≥ un id de token en la respuesta');",
									"    }",
									"    ",
									"    if (jsonData.bin) {",
									"        postman.setEnvironmentVariable(\"bin\", jsonData.bin);",
									"    }",
									"    ",
									"    if (pm.environment.get(\"token\")) {",
									"        console.log('Se configur√≥ la variable de entorno token con el valor ' + pm.environment.get(\"token\")); ",
									"    } else {",
									"        console.log('No se pudo configurar correctamente la variable de entorno token');    ",
									"    }",
									"    ",
									"    if (pm.environment.get(\"bin\")) {",
									"        console.log('Se configur√≥ la variable de entorno bin con el valor ' + pm.environment.get(\"bin\")); ",
									"    } else {",
									"        console.log('No se pudo configurar correctamente la variable de entorno bin');    ",
									"    }",
									"",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "apikey",
								"value": "{{keypublic}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"card_number\" : \"4509790112684851\",\n    \"card_expiration_month\" : \"07\",\n    \"card_expiration_year\" : \"19\", \n    \"security_code\" : \"234\",\n    \"card_holder_name\" : \"Valentin Santiago Gomez\",\n    \"card_holder_identification\" : {\n       \"type\" : \"dni\",\n       \"number\" : \"23968498\"\n    },\n    \"fraud_detection\" : {\n        \"device_unique_identifier\": \"12345\"\n    }\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v2/tokens",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v2",
								"tokens"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "09f - Payments CS Ticketing distribuida OK",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "af166110-25ef-4fdc-8f8f-7c089347ba1f",
								"type": "text/javascript",
								"exec": [
									"if (responseBody) {",
									"    var jsonData = JSON.parse(responseBody);",
									"    ",
									"    if (jsonData) {",
									"        ",
									"        tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"        if (tests[\"Status code is 201\"]) {",
									"            ",
									"            tests[\"CS response\"] = jsonData.fraud_detection.status !== null;",
									"            ",
									"            if (tests[\"CS response\"]) {",
									"        ",
									"                tests[\"CS decision status is green\"] = jsonData.fraud_detection.status.decision === 'green';",
									"                ",
									"                tests[\"has subpayments\"] = jsonData.sub_payments !== null;",
									"                ",
									"                if (tests[\"has subpayments\"]) {",
									"                ",
									"                    tests[\"Status child 1 is approved\"] = jsonData.sub_payments[0].status === 'approved';",
									"                    tests[\"Status child 2 is approved\"] = jsonData.sub_payments[1].status === 'approved';",
									"                ",
									"                } else {",
									"               ",
									"                    console.log('No se encontraron subpagos realizados.');",
									"                }",
									"                ",
									"            } else {",
									"               ",
									"               console.log('No se recibi√≥ respuesta de CyberSource. Puede no estar configurado correctamente.');",
									"            }",
									"            ",
									"            if (!tests[\"CS decision status is green\"] || !tests[\"has subpayments\"] || !tests[\"Status child 1 is approved\"] || !tests[\"Status child 2 is approved\"]) {",
									"                ",
									"                console.log('Alguna de las comprobaciones no dio resultados satisfactorios. Se adjunta la respuesta recibida:');",
									"                ",
									"                console.log(jsonData);",
									"            ",
									"            } else {",
									"                ",
									"                if (jsonData.id) {",
									"                    console.log('Se cre√≥ el pago con id ' + jsonData.id);",
									"                    postman.setEnvironmentVariable(\"chargeId\", jsonData.id);",
									"                ",
									"                    ",
									"                } else {",
									"                ",
									"                console.log('No se encontr√≥ un id de transacci√≥n en la respuesta');",
									"                }",
									"            ",
									"                if (pm.environment.get(\"chargeId\")) {",
									"                    ",
									"                    console.log('Se configur√≥ la variable de entorno chargeId con el valor ' + pm.environment.get(\"chargeId\")); ",
									"    ",
									"                } else {",
									"                    console.log('No se pudo configurar correctamente la variable de entorno chargeId');    ",
									"                }",
									"                ",
									"            }",
									"        ",
									"        } else {",
									"           ",
									"           console.log('No se recibio el status esperado. Se adjunta el cuerpo de la respuesta:');",
									"",
									"           console.log(jsonData);  ",
									"           ",
									"        }",
									"            ",
									"    } else {",
									"           ",
									"           console.log('Error al intentar parsear la respuesta obtenida. Se adjunta el cuerpo de la respuesta como fue recibido:');",
									"",
									"           console.log(responseBody);  ",
									"           ",
									"    }",
									"    ",
									"} else {",
									"    ",
									"    console.log('No se recibi√≥ respuesta con el formato esperado');",
									"    ",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "apikey",
								"value": "{{keyprivate}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"user_id\": \"morton\",\n   \"site_transaction_id\": \"auto regrvisacs {{$timestamp}}\",\n   \"token\": \"{{token}}\",\n   \"payment_method_id\": 1,\n   \"bin\": \"{{bin}}\",\n   \"amount\": 20000,\n   \"currency\": \"ARS\",\n   \"installments\": 1,\n   \"description\": \"Prueba QA\",\n   \"payment_type\": \"distributed\",\n   \"establishment_name\" : \"prueba desa soft\",\n   \"sub_payments\": [\n      {\n         \"site_id\": \"{{subsite_1}}\",\n         \"installments\": 5,\n         \"amount\": 11000\n      },\n      {\n         \"site_id\": \"{{subsite_2}}\",\n         \"installments\": 6,\n         \"amount\": 9000\n        \n      }\n   ], \n   \n    \"fraud_detection\": {\n        \"send_to_cs\": true,\n        \"channel\": \"Web/Mobile/Telefonica\",\n        \"bill_to\": {\n        \"city\": \"Buenos Aires\",\n        \"country\": \"AR\",\n        \"customer_id\": \"martinid\",\n        \"email\": \"accept@decidir.com.ar\",\n        \"first_name\": \"leila\",\n      \"last_name\": \"PPP\",\n        \"phone_number\": \"2322323232\",\n        \"postal_code\": \"1223\",\n        \"state\": \"BA\",\n        \"street1\": \"Italia 1234\",\n        \"street2\": \"Italia 1234\"        \n     },\n        \"purchase_totals\": {\n        \"currency\": \"ARS\",\n        \"amount\": 12444\n     },\n     \"customer_in_site\": {\n        \"days_in_site\": 243,\n        \"is_guest\": false,\n        \"password\": \"abracadabra\",\n        \"num_of_transactions\": 1,\n        \"cellphone_number\": \"12121\",\n        \"date_of_birth\": \"129412\",\n        \"street\": \"RIO 4041\"\n     },\n     \"ticketing_transaction_data\": {\n        \"days_to_event\": 55,\n        \"delivery_type\": \"Pick up\",\n        \"items\": [\n           {\n              \"code\": \"popblacksabbat2016\",\n              \"description\": \"Popular Black Sabbath 2016\",\n              \"name\": \"popblacksabbat2016ss\",\n              \"sku\": \"asas\",\n              \"total_amount\": 242424,\n              \"quantity\": 2,\n              \"unit_price\": 121212\n           },\n           {\n              \"code\": \"popblacksdssabbat2016\",\n              \"description\": \"Popular Blasdsck Sabbath 2016\",\n              \"name\": \"popblacksabbatdsds2016ss\",\n              \"sku\": \"aswewas\",\n              \"total_amount\": 111212,\n              \"quantity\": 1,\n              \"unit_price\": 111212\n           }\n        ]\n     },\n        \"csmdds\": [\n         {\"code\": 12, \"description\": \"Campo MDD12\"},\n         {\"code\": 14, \"description\": \"Campo MDD14\"},\n         {\"code\": 15, \"description\": \"Campo MDD15\"},\n         {\"code\": 16, \"description\": \"Campo MDD16\"},\n         {\"code\": 17, \"description\": \"Campo MDD17\"},\n         {\"code\": 18, \"description\": \"Campo MDD18\"},\n         {\"code\": 19, \"description\": \"Campo MDD19\"},\n         {\"code\": 20, \"description\": \"Campo MDD20\"},\n         {\"code\": 21, \"description\": \"Campo MDD21\"},\n         {\"code\": 22, \"description\": \"Campo MDD22\"},\n         {\"code\": 23, \"description\": \"Campo MDD23\"},\n         {\"code\": 24, \"description\": \"Campo MDD24\"},\n         {\"code\": 25, \"description\": \"Campo MDD25\"},\n         {\"code\": 26, \"description\": \"Campo MDD26\"},\n         {\"code\": 27, \"description\": \"Campo MDD27\"},\n         {\"code\": 28, \"description\": \"Campo MDD28\"},\n         {\"code\": 29, \"description\": \"Campo MDD29\"},\n         {\"code\": 30, \"description\": \"Campo MDD30\"},\n         {\"code\": 31, \"description\": \"Campo MDD31\"},\n         {\"code\": 32, \"description\": \"Campo MDD32\"},\n         {\"code\": 43, \"description\": \"Campo MDD43\"},\n         {\"code\": 44, \"description\": \"Campo MDD44\"},\n         {\"code\": 45, \"description\": \"Campo MDD45\"},\n         {\"code\": 46, \"description\": \"Campo MDD46\"},\n         {\"code\": 47, \"description\": \"Campo MDD47\"},\n         {\"code\": 48, \"description\": \"Campo MDD48\"},\n         {\"code\": 49, \"description\": \"Campo MDD49\"},\n         {\"code\": 50, \"description\": \"Campo MDD50\"},\n         {\"code\": 51, \"description\": \"Campo MDD51\"},\n         {\"code\": 52, \"description\": \"Campo MDD52\"},\n         {\"code\": 53, \"description\": \"Campo MDD53\"},\n         {\"code\": 54, \"description\": \"Campo MDD54\"},\n         {\"code\": 55, \"description\": \"Campo MDD55\"},\n         {\"code\": 56, \"description\": \"Campo MDD56\"},\n         {\"code\": 57, \"description\": \"Campo MDD57\"},\n         {\"code\": 58, \"description\": \"Campo MDD58\"},\n         {\"code\": 59, \"description\": \"Campo MDD59\"},\n         {\"code\": 60, \"description\": \"Campo MDD60\"},\n         {\"code\": 61, \"description\": \"Campo MDD61\"},\n         {\"code\": 62, \"description\": \"Campo MDD62\"},\n         {\"code\": 63, \"description\": \"Campo MDD63\"},\n         {\"code\": 64, \"description\": \"Campo MDD64\"},\n         {\"code\": 65, \"description\": \"Campo MDD65\"},\n         {\"code\": 66, \"description\": \"Campo MDD66\"},\n         {\"code\": 67, \"description\": \"Campo MDD67\"},\n         {\"code\": 68, \"description\": \"Campo MDD68\"},\n         {\"code\": 69, \"description\": \"Campo MDD69\"},\n         {\"code\": 70, \"description\": \"Campo MDD70\"},\n         {\"code\": 71, \"description\": \"Campo MDD71\"},\n         {\"code\": 72, \"description\": \"Campo MDD72\"},\n         {\"code\": 73, \"description\": \"Campo MDD73\"},\n         {\"code\": 74, \"description\": \"Campo MDD74\"},\n         {\"code\": 75, \"description\": \"Campo MDD75\"},\n         {\"code\": 76, \"description\": \"Campo MDD76\"},\n         {\"code\": 77, \"description\": \"Campo MDD77\"},\n         {\"code\": 78, \"description\": \"Campo MDD78\"},\n         {\"code\": 79, \"description\": \"Campo MDD79\"},\n         {\"code\": 80, \"description\": \"Campo MDD80\"},\n         {\"code\": 81, \"description\": \"Campo MDD81\"},\n         {\"code\": 82, \"description\": \"Campo MDD82\"},\n         {\"code\": 83, \"description\": \"Campo MDD83\"},\n         {\"code\": 84, \"description\": \"Campo MDD84\"},\n         {\"code\": 85, \"description\": \"Campo MDD85\"},\n         {\"code\": 86, \"description\": \"Campo MDD86\"},\n         {\"code\": 87, \"description\": \"Campo MDD87\"},\n         {\"code\": 88, \"description\": \"Campo MDD88\"},\n         {\"code\": 89, \"description\": \"Campo MDD89\"},\n         {\"code\": 90, \"description\": \"Campo MDD90\"},\n         {\"code\": 91, \"description\": \"Campo MDD91\"},\n         {\"code\": 92, \"description\": \"Campo MDD92\"},\n         {\"code\": 93, \"description\": \"Campo MDD93\"},\n         {\"code\": 94, \"description\": \"Campo MDD94\"},\n         {\"code\": 95, \"description\": \"Campo MDD95\"},\n         {\"code\": 96, \"description\": \"Campo MDD96\"},\n         {\"code\": 97, \"description\": \"Campo MDD97\"},\n         {\"code\": 98, \"description\": \"Campo MDD98\"},\n         {\"code\": 99, \"description\": \"Campo MDD99\"}\n      ]\n  }\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v2/payments",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v2",
								"payments"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "1 - QAPI check DB",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"site\": \"{{site}}\",\n   \"charge_id\": \"{{chargeId}}\"\n}"
						},
						"url": {
							"raw": "{{qapi_url}}/tests/db",
							"host": [
								"{{qapi_url}}"
							],
							"path": [
								"tests",
								"db"
							]
						},
						"description": "POST check if an operation with these values exists in DB"
					},
					"response": []
				},
				{
					"name": "10a - QAPI set CS VERDE Travel",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "eb009503-8c5b-4331-801b-5809776af5ef",
								"type": "text/javascript",
								"exec": [
									"if (responseBody) {",
									"        ",
									"    tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"     if (!tests[\"Status code is 200\"]) {",
									"           ",
									"        console.log('No se recibio el status esperado. Se adjunta el cuerpo de la respuesta:');",
									"",
									"        console.log(responseBody);  ",
									"           ",
									"    }",
									"            ",
									"} else {",
									"           ",
									"    console.log('Error al no recibir respuesta.');",
									"           ",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"site\": \"{{site}}\",\n   \"security_key\": \"7INYIZLob1xKu4W4xhE7l8HYRgf13MQhIA8XtuRCxW0L9VNqIHXBJCvWMbHzbbv0n771oi3jMEL27xOtt0uD5fbeBRqR0N66QevdhXAQ+5KFHJvmoBZ3Xgq2jFTltP6flXN6PPlN3X6XYmPuBhJoqlrFfuo7sD24pM0qRbZFeRf1/13ZrYA+K3vNe6ATvyHr6TF2jMiK8RkstPl97AE95l7B2zYqxWpL2cpPh/WAFFReOFkgqnpo2NYqe3ZRfcYFMBTpJtmZVJu5gnEDBY7cxCp8jmLz5V9cphX5FO19KaBPkMvHFvVjGcXp8JOcL162sNo5hcKZNFCFIZ3ZFizVnQ==\",\n   \"modelo\" : 2,\n   \"mid\" : \"decidir_agregador\",\n   \"rubro\" : 5,\n   \"continuar\" : \"N\",\n   \"reverso\" : \"N\"\n}"
						},
						"url": {
							"raw": "{{qapi_url}}/sites/cs",
							"host": [
								"{{qapi_url}}"
							],
							"path": [
								"sites",
								"cs"
							]
						},
						"description": "POST call to set CS in a certain site"
					},
					"response": []
				},
				{
					"name": "10b - Replicate site",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ca1f390d-cdab-44f1-a785-8159af1d0d42",
								"type": "text/javascript",
								"exec": [
									"if (responseBody) {",
									"        ",
									"    tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"     if (!tests[\"Status code is 200\"]) {",
									"           ",
									"        console.log('No se recibio el status esperado. Se adjunta el cuerpo de la respuesta:');",
									"",
									"        console.log(responseBody);  ",
									"           ",
									"    }",
									"            ",
									"} else {",
									"           ",
									"    console.log('Error al no recibir respuesta.');",
									"           ",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"disabled": true
							},
							{
								"key": "apikey",
								"value": "{{keypublic}}",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"card_number\" : \"4507990000004905\",\n    \"card_expiration_month\" : \"07\",\n    \"card_expiration_year\" : \"17\", \n    \"security_code\" : \"234\",\n    \"card_holder_name\" : \"Valentin Santiago Gomez\",\n    \"card_holder_identification\" : {\n       \"type\" : \"dni\",\n       \"number\" : \"23968498\"\n    },\n    \"fraud_detection\" : {\n        \"device_unique_identifier\": \"12345\"\n    }\n}"
						},
						"url": {
							"raw": "{{coretx_url}}/replication/site/{{site}}",
							"host": [
								"{{coretx_url}}"
							],
							"path": [
								"replication",
								"site",
								"{{site}}"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "10c - Creacion de token pago",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "590da006-dcde-4762-b871-6b595ba134d7",
								"type": "text/javascript",
								"exec": [
									"if (responseBody) {",
									"    var jsonData = JSON.parse(responseBody);",
									"} else {",
									"    console.log('No se recibi√≥ respuesta con el formato esperado'); ",
									"}",
									"",
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"if (!tests[\"Status code is 201\"]) {",
									"    console.log('Alguna de las comprobaciones no dio resultados satisfactorios.');",
									"    if (jsonData) {",
									"        console.log('Se adjunta la respuesta recibida:');",
									"        console.log(jsonData);    ",
									"    } else {",
									"       console.log('Error al intentar parsear la respuesta obtenida. Se adjunta el cuerpo de la respuesta como fue recibido:');",
									"       console.log(responseBody);   ",
									"    }",
									"",
									"} else {",
									"",
									"    if (jsonData.id) {",
									"        console.log('Se cre√≥ el token con id ' + jsonData.id);",
									"        postman.setEnvironmentVariable(\"token\", jsonData.id);",
									"    } else {",
									"        console.log('No se encontr√≥ un id de token en la respuesta');",
									"    }",
									"    ",
									"    if (jsonData.bin) {",
									"        postman.setEnvironmentVariable(\"bin\", jsonData.bin);",
									"    }",
									"    ",
									"    if (pm.environment.get(\"token\")) {",
									"        console.log('Se configur√≥ la variable de entorno token con el valor ' + pm.environment.get(\"token\")); ",
									"    } else {",
									"        console.log('No se pudo configurar correctamente la variable de entorno token');    ",
									"    }",
									"    ",
									"    if (pm.environment.get(\"bin\")) {",
									"        console.log('Se configur√≥ la variable de entorno bin con el valor ' + pm.environment.get(\"bin\")); ",
									"    } else {",
									"        console.log('No se pudo configurar correctamente la variable de entorno bin');    ",
									"    }",
									"",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "apikey",
								"value": "{{keypublic}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"card_number\" : \"4509790112684851\",\n    \"card_expiration_month\" : \"07\",\n    \"card_expiration_year\" : \"19\", \n    \"security_code\" : \"234\",\n    \"card_holder_name\" : \"Valentin Santiago Gomez\",\n    \"card_holder_identification\" : {\n       \"type\" : \"dni\",\n       \"number\" : \"23968498\"\n    },\n    \"fraud_detection\" : {\n        \"device_unique_identifier\": \"12345\"\n    }\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v2/tokens",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v2",
								"tokens"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "10d - Payments CS Travel simple OK",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "48b8353f-c755-470d-8efa-c063ec1e3051",
								"type": "text/javascript",
								"exec": [
									"if (responseBody) {",
									"    var jsonData = JSON.parse(responseBody);",
									"    ",
									"    if (jsonData) {",
									"        ",
									"        tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"        if (tests[\"Status code is 201\"]) {",
									"            ",
									"            tests[\"CS response\"] = jsonData.fraud_detection.status !== null;",
									"            ",
									"            if (tests[\"CS response\"]) {",
									"        ",
									"                tests[\"CS decision status is green\"] = jsonData.fraud_detection.status.decision === 'green';",
									"                ",
									"            } else {",
									"               ",
									"               console.log('No se recibi√≥ respuesta de CyberSource. Puede no estar configurado correctamente.');",
									"            }",
									"            ",
									"            if (!tests[\"CS decision status is green\"]) {",
									"                ",
									"                console.log('Alguna de las comprobaciones no dio resultados satisfactorios. Se adjunta la respuesta recibida:');",
									"                ",
									"                console.log(jsonData);",
									"            ",
									"            } else {",
									"                ",
									"                if (jsonData.id) {",
									"                    console.log('Se cre√≥ el pago con id ' + jsonData.id);",
									"                    postman.setEnvironmentVariable(\"chargeId\", jsonData.id);",
									"                ",
									"                    ",
									"                } else {",
									"                ",
									"                console.log('No se encontr√≥ un id de transacci√≥n en la respuesta');",
									"                }",
									"            ",
									"                if (pm.environment.get(\"chargeId\")) {",
									"                    ",
									"                    console.log('Se configur√≥ la variable de entorno chargeId con el valor ' + pm.environment.get(\"chargeId\")); ",
									"    ",
									"                } else {",
									"                    console.log('No se pudo configurar correctamente la variable de entorno chargeId');    ",
									"                }",
									"                ",
									"            }",
									"        ",
									"        } else {",
									"           ",
									"           console.log('No se recibio el status esperado. Se adjunta el cuerpo de la respuesta:');",
									"",
									"           console.log(jsonData);  ",
									"           ",
									"        }",
									"            ",
									"    } else {",
									"           ",
									"           console.log('Error al intentar parsear la respuesta obtenida. Se adjunta el cuerpo de la respuesta como fue recibido:');",
									"",
									"           console.log(responseBody);  ",
									"           ",
									"    }",
									"    ",
									"} else {",
									"    ",
									"    console.log('No se recibi√≥ respuesta con el formato esperado');",
									"    ",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "apikey",
								"value": "{{keyprivate}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"site_transaction_id\": \"auto regrvisacs {{$timestamp}}\",\n   \"token\": \"{{token}}\",\n   \"user_id\": \"morton\",\n   \"payment_method_id\": 1,\n   \"bin\": \"{{bin}}\",\n   \"amount\": 20000,\n   \"currency\": \"ARS\",\n   \"installments\": 1,\n   \"description\": \"8\",\n   \"payment_type\": \"single\",\n   \"sub_payments\": [\n   ],\n   \"fraud_detection\": {\n        \"send_to_cs\": true,\n      \"bill_to\": {\n         \"city\": \"Buenos Aires\",\n         \"country\": \"AR\",\n         \"customer_id\": \"martinid\",\n         \"email\": \"accept@decidir.com.ar\",\n         \"first_name\": \"martin\",\n         \"last_name\": \"paoletta\",\n         \"phone_number\": \"1547766329\",\n         \"postal_code\": \"1427\",\n         \"state\": \"BA\",\n         \"street1\": \"GARCIA DEL RIO 4041\",\n         \"ip_address\": \"190.210.214.252\"\n      },\n      \"purchase_totals\": {\n         \"currency\": \"ARS\",\n         \"amount\": 2\n      },\n      \"channel\": \"Web\",\n      \"customer_in_site\": {\n         \"days_in_site\": 243,\n         \"is_guest\": false,\n         \"password\": \"abracadabra\",\n         \"num_of_transactions\": 1,\n         \"cellphone_number\": \"12121\"\n      },\n      \"device_unique_id\": \"devicefingerprintid\",\n      \"travel_transaction_data\": {\n          \"reservation_code\": \"GJH784\",\n        \"third_party_booking\": false,\n        \"departure_city\": \"EZE\",\n        \"final_destination_city\": \"HND\",\n        \"international_flight\": true,\n        \"frequent_flier_number\": \"00000123\",\n        \"class_of_service\": \"class\" ,\n        \"day_of_week_of_flight\": 2,\n        \"week_of_year_of_flight\": 5,\n        \"airline_code\": \"AA\",\n        \"code_share\": \"SKYTEAM\",\n        \"decision_manager_travel\": {\n            \"complete_route\": \"EZE-LAX:LAX-HND\",\n            \"journey_type\": \"one way\",\n            \"departure_date\": {\n                \"departure_time\": \"2017-05-30T09:00Z\",\n                \"departure_zone\": \"GMT-0300\"\n            }\n        },\n        \"passengers\": [{\n            \"email\": \"juan@mail.com\",\n            \"first_name\": \"Juan\",\n            \"last_name\": \"Perez\",\n            \"passport_id\": \"412314851231\",\n            \"phone\": \"541134356768\",\n            \"passenger_status\": \"gold\",\n            \"passenger_type\": \"ADT\"\n            }\n         ],\n         \"airline_number_of_passengers\": 1\n      }\n   }\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v2/payments",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v2",
								"payments"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "1 - QAPI check DB",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"site\": \"{{site}}\",\n   \"charge_id\": \"{{chargeId}}\"\n}"
						},
						"url": {
							"raw": "{{qapi_url}}/tests/db",
							"host": [
								"{{qapi_url}}"
							],
							"path": [
								"tests",
								"db"
							]
						},
						"description": "POST check if an operation with these values exists in DB"
					},
					"response": []
				},
				{
					"name": "10e - Creacion de token pago",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1ebe3deb-e4a6-4865-b8b9-914d8dc6d0af",
								"type": "text/javascript",
								"exec": [
									"if (responseBody) {",
									"    var jsonData = JSON.parse(responseBody);",
									"} else {",
									"    console.log('No se recibi√≥ respuesta con el formato esperado'); ",
									"}",
									"",
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"if (!tests[\"Status code is 201\"]) {",
									"    console.log('Alguna de las comprobaciones no dio resultados satisfactorios.');",
									"    if (jsonData) {",
									"        console.log('Se adjunta la respuesta recibida:');",
									"        console.log(jsonData);    ",
									"    } else {",
									"       console.log('Error al intentar parsear la respuesta obtenida. Se adjunta el cuerpo de la respuesta como fue recibido:');",
									"       console.log(responseBody);   ",
									"    }",
									"",
									"} else {",
									"",
									"    if (jsonData.id) {",
									"        console.log('Se cre√≥ el token con id ' + jsonData.id);",
									"        postman.setEnvironmentVariable(\"token\", jsonData.id);",
									"    } else {",
									"        console.log('No se encontr√≥ un id de token en la respuesta');",
									"    }",
									"    ",
									"    if (jsonData.bin) {",
									"        postman.setEnvironmentVariable(\"bin\", jsonData.bin);",
									"    }",
									"    ",
									"    if (pm.environment.get(\"token\")) {",
									"        console.log('Se configur√≥ la variable de entorno token con el valor ' + pm.environment.get(\"token\")); ",
									"    } else {",
									"        console.log('No se pudo configurar correctamente la variable de entorno token');    ",
									"    }",
									"    ",
									"    if (pm.environment.get(\"bin\")) {",
									"        console.log('Se configur√≥ la variable de entorno bin con el valor ' + pm.environment.get(\"bin\")); ",
									"    } else {",
									"        console.log('No se pudo configurar correctamente la variable de entorno bin');    ",
									"    }",
									"",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "apikey",
								"value": "{{keypublic}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"card_number\" : \"4509790112684851\",\n    \"card_expiration_month\" : \"07\",\n    \"card_expiration_year\" : \"19\", \n    \"security_code\" : \"234\",\n    \"card_holder_name\" : \"Valentin Santiago Gomez\",\n    \"card_holder_identification\" : {\n       \"type\" : \"dni\",\n       \"number\" : \"23968498\"\n    },\n    \"fraud_detection\" : {\n        \"device_unique_identifier\": \"12345\"\n    }\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v2/tokens",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v2",
								"tokens"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "10f - Payments CS Travel distribuida OK",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "86fbc383-a88e-45cf-bc97-c16bd2d89a48",
								"type": "text/javascript",
								"exec": [
									"if (responseBody) {",
									"    var jsonData = JSON.parse(responseBody);",
									"    ",
									"    if (jsonData) {",
									"        ",
									"        tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"        if (tests[\"Status code is 201\"]) {",
									"            ",
									"            tests[\"CS response\"] = jsonData.fraud_detection.status !== null;",
									"            ",
									"            if (tests[\"CS response\"]) {",
									"        ",
									"                tests[\"CS decision status is green\"] = jsonData.fraud_detection.status.decision === 'green';",
									"                ",
									"                tests[\"has subpayments\"] = jsonData.sub_payments !== null;",
									"                ",
									"                if (tests[\"has subpayments\"]) {",
									"                ",
									"                    tests[\"Status child 1 is approved\"] = jsonData.sub_payments[0].status === 'approved';",
									"                    tests[\"Status child 2 is approved\"] = jsonData.sub_payments[1].status === 'approved';",
									"                ",
									"                } else {",
									"               ",
									"                    console.log('No se encontraron subpagos realizados.');",
									"                }",
									"                ",
									"            } else {",
									"               ",
									"               console.log('No se recibi√≥ respuesta de CyberSource. Puede no estar configurado correctamente.');",
									"            }",
									"            ",
									"            if (!tests[\"CS decision status is green\"] || !tests[\"has subpayments\"] || !tests[\"Status child 1 is approved\"] || !tests[\"Status child 2 is approved\"]) {",
									"                ",
									"                console.log('Alguna de las comprobaciones no dio resultados satisfactorios. Se adjunta la respuesta recibida:');",
									"                ",
									"                console.log(jsonData);",
									"            ",
									"            } else {",
									"                ",
									"                if (jsonData.id) {",
									"                    console.log('Se cre√≥ el pago con id ' + jsonData.id);",
									"                    postman.setEnvironmentVariable(\"chargeId\", jsonData.id);",
									"                ",
									"                    ",
									"                } else {",
									"                ",
									"                console.log('No se encontr√≥ un id de transacci√≥n en la respuesta');",
									"                }",
									"            ",
									"                if (pm.environment.get(\"chargeId\")) {",
									"                    ",
									"                    console.log('Se configur√≥ la variable de entorno chargeId con el valor ' + pm.environment.get(\"chargeId\")); ",
									"    ",
									"                } else {",
									"                    console.log('No se pudo configurar correctamente la variable de entorno chargeId');    ",
									"                }",
									"                ",
									"            }",
									"        ",
									"        } else {",
									"           ",
									"           console.log('No se recibio el status esperado. Se adjunta el cuerpo de la respuesta:');",
									"",
									"           console.log(jsonData);  ",
									"           ",
									"        }",
									"            ",
									"    } else {",
									"           ",
									"           console.log('Error al intentar parsear la respuesta obtenida. Se adjunta el cuerpo de la respuesta como fue recibido:');",
									"",
									"           console.log(responseBody);  ",
									"           ",
									"    }",
									"    ",
									"} else {",
									"    ",
									"    console.log('No se recibi√≥ respuesta con el formato esperado');",
									"    ",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "apikey",
								"value": "{{keyprivate}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"site_transaction_id\": \"auto regrvisacs {{$timestamp}}\",\n   \"token\": \"{{token}}\",\n   \"user_id\": \"morton\",\n   \"payment_method_id\": 1,\n   \"bin\": \"{{bin}}\",\n   \"amount\": 20000,\n   \"currency\": \"ARS\",\n   \"installments\": 1,\n   \"description\": \"8\",\n   \"payment_type\": \"distributed\",\n  \"sub_payments\": [\n      {\n         \"site_id\": \"{{subsite_1}}\",\n         \"installments\": 5,\n         \"amount\": 11000\n      },\n      {\n         \"site_id\": \"{{subsite_2}}\",\n         \"installments\": 6,\n         \"amount\": 9000\n        \n      }\n   ], \n   \"fraud_detection\": {\n        \"send_to_cs\": true,\n      \"bill_to\": {\n         \"city\": \"Buenos Aires\",\n         \"country\": \"AR\",\n         \"customer_id\": \"martinid\",\n         \"email\": \"accept@decidir.com.ar\",\n         \"first_name\": \"martin\",\n         \"last_name\": \"paoletta\",\n         \"phone_number\": \"1547766329\",\n         \"postal_code\": \"1427\",\n         \"state\": \"BA\",\n         \"street1\": \"GARCIA DEL RIO 4041\",\n         \"ip_address\": \"190.210.214.252\"\n      },\n      \"purchase_totals\": {\n         \"currency\": \"ARS\",\n         \"amount\": 2\n      },\n      \"channel\": \"Web\",\n      \"customer_in_site\": {\n         \"days_in_site\": 243,\n         \"is_guest\": false,\n         \"password\": \"abracadabra\",\n         \"num_of_transactions\": 1,\n         \"cellphone_number\": \"12121\"\n      },\n      \"device_unique_id\": \"devicefingerprintid\",\n      \"travel_transaction_data\": {\n          \"reservation_code\": \"GJH784\",\n        \"third_party_booking\": false,\n        \"departure_city\": \"EZE\",\n        \"final_destination_city\": \"HND\",\n        \"international_flight\": true,\n        \"frequent_flier_number\": \"00000123\",\n        \"class_of_service\": \"class\" ,\n        \"day_of_week_of_flight\": 2,\n        \"week_of_year_of_flight\": 5,\n        \"airline_code\": \"AA\",\n        \"code_share\": \"SKYTEAM\",\n        \"decision_manager_travel\": {\n            \"complete_route\": \"EZE-LAX:LAX-HND\",\n            \"journey_type\": \"one way\",\n            \"departure_date\": {\n                \"departure_time\": \"2017-05-30T09:00Z\",\n                \"departure_zone\": \"GMT-0300\"\n            }\n        },\n        \"passengers\": [{\n            \"email\": \"juan@mail.com\",\n            \"first_name\": \"Juan\",\n            \"last_name\": \"Perez\",\n            \"passport_id\": \"412314851231\",\n            \"phone\": \"541134356768\",\n            \"passenger_status\": \"gold\",\n            \"passenger_type\": \"ADT\"\n            }\n         ],\n         \"airline_number_of_passengers\": 1\n      }\n   }\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v2/payments",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v2",
								"payments"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "1 - QAPI check DB",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"site\": \"{{site}}\",\n   \"charge_id\": \"{{chargeId}}\"\n}"
						},
						"url": {
							"raw": "{{qapi_url}}/tests/db",
							"host": [
								"{{qapi_url}}"
							],
							"path": [
								"tests",
								"db"
							]
						},
						"description": "POST check if an operation with these values exists in DB"
					},
					"response": []
				},
				{
					"name": "10g - Creacion de token pago",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "96d908a2-858e-4389-8971-d7939be00f58",
								"type": "text/javascript",
								"exec": [
									"if (responseBody) {",
									"    var jsonData = JSON.parse(responseBody);",
									"} else {",
									"    console.log('No se recibi√≥ respuesta con el formato esperado'); ",
									"}",
									"",
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"if (!tests[\"Status code is 201\"]) {",
									"    console.log('Alguna de las comprobaciones no dio resultados satisfactorios.');",
									"    if (jsonData) {",
									"        console.log('Se adjunta la respuesta recibida:');",
									"        console.log(jsonData);    ",
									"    } else {",
									"       console.log('Error al intentar parsear la respuesta obtenida. Se adjunta el cuerpo de la respuesta como fue recibido:');",
									"       console.log(responseBody);   ",
									"    }",
									"",
									"} else {",
									"",
									"    if (jsonData.id) {",
									"        console.log('Se cre√≥ el token con id ' + jsonData.id);",
									"        postman.setEnvironmentVariable(\"token\", jsonData.id);",
									"    } else {",
									"        console.log('No se encontr√≥ un id de token en la respuesta');",
									"    }",
									"    ",
									"    if (jsonData.bin) {",
									"        postman.setEnvironmentVariable(\"bin\", jsonData.bin);",
									"    }",
									"    ",
									"    if (pm.environment.get(\"token\")) {",
									"        console.log('Se configur√≥ la variable de entorno token con el valor ' + pm.environment.get(\"token\")); ",
									"    } else {",
									"        console.log('No se pudo configurar correctamente la variable de entorno token');    ",
									"    }",
									"    ",
									"    if (pm.environment.get(\"bin\")) {",
									"        console.log('Se configur√≥ la variable de entorno bin con el valor ' + pm.environment.get(\"bin\")); ",
									"    } else {",
									"        console.log('No se pudo configurar correctamente la variable de entorno bin');    ",
									"    }",
									"",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "apikey",
								"value": "{{keypublic}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"card_number\" : \"4509790112684851\",\n    \"card_expiration_month\" : \"07\",\n    \"card_expiration_year\" : \"19\", \n    \"security_code\" : \"234\",\n    \"card_holder_name\" : \"Valentin Santiago Gomez\",\n    \"card_holder_identification\" : {\n       \"type\" : \"dni\",\n       \"number\" : \"23968498\"\n    },\n    \"fraud_detection\" : {\n        \"device_unique_identifier\": \"12345\"\n    }\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v2/tokens",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v2",
								"tokens"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "10h - Payments CS Travel distribuida AMARILLO OK",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7d13e2a4-df99-4dc1-8f10-e423b4e53665",
								"type": "text/javascript",
								"exec": [
									"if (responseBody) {",
									"    var jsonData = JSON.parse(responseBody);",
									"    ",
									"    if (jsonData) {",
									"        ",
									"        tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"        if (tests[\"Status code is 201\"]) {",
									"            ",
									"            tests[\"CS response\"] = jsonData.fraud_detection.status !== null;",
									"            ",
									"            if (tests[\"CS response\"]) {",
									"        ",
									"                tests[\"CS decision status is yellow\"] = jsonData.fraud_detection.status.decision === 'yellow';",
									"                ",
									"                tests[\"has subpayments\"] = jsonData.sub_payments !== null;",
									"                ",
									"                if (tests[\"has subpayments\"]) {",
									"                ",
									"                    tests[\"Status child 1 is approved\"] = jsonData.sub_payments[0].status === 'approved';",
									"                    tests[\"Status child 2 is approved\"] = jsonData.sub_payments[1].status === 'approved';",
									"                ",
									"                } else {",
									"               ",
									"                    console.log('No se encontraron subpagos realizados.');",
									"                }",
									"                ",
									"            } else {",
									"               ",
									"               console.log('No se recibi√≥ respuesta de CyberSource. Puede no estar configurado correctamente.');",
									"            }",
									"            ",
									"            if (!tests[\"CS decision status is yellow\"] || !tests[\"has subpayments\"] || !tests[\"Status child 1 is approved\"] || !tests[\"Status child 2 is approved\"]) {",
									"                ",
									"                console.log('Alguna de las comprobaciones no dio resultados satisfactorios. Se adjunta la respuesta recibida:');",
									"                ",
									"                console.log(jsonData);",
									"            ",
									"            } else {",
									"                ",
									"                if (jsonData.id) {",
									"                    console.log('Se cre√≥ el pago con id ' + jsonData.id);",
									"                    postman.setEnvironmentVariable(\"chargeId\", jsonData.id);",
									"                ",
									"                    ",
									"                } else {",
									"                ",
									"                console.log('No se encontr√≥ un id de transacci√≥n en la respuesta');",
									"                }",
									"            ",
									"                if (pm.environment.get(\"chargeId\")) {",
									"                    ",
									"                    console.log('Se configur√≥ la variable de entorno chargeId con el valor ' + pm.environment.get(\"chargeId\")); ",
									"    ",
									"                } else {",
									"                    console.log('No se pudo configurar correctamente la variable de entorno chargeId');    ",
									"                }",
									"                ",
									"            }",
									"        ",
									"        } else {",
									"           ",
									"           console.log('No se recibio el status esperado. Se adjunta el cuerpo de la respuesta:');",
									"",
									"           console.log(jsonData);  ",
									"           ",
									"        }",
									"            ",
									"    } else {",
									"           ",
									"           console.log('Error al intentar parsear la respuesta obtenida. Se adjunta el cuerpo de la respuesta como fue recibido:');",
									"",
									"           console.log(responseBody);  ",
									"           ",
									"    }",
									"    ",
									"} else {",
									"    ",
									"    console.log('No se recibi√≥ respuesta con el formato esperado');",
									"    ",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "apikey",
								"value": "{{keyprivate}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"site_transaction_id\": \"auto regrvisacs {{$timestamp}}\",\n   \"token\": \"{{token}}\",\n   \"user_id\": \"morton\",\n   \"payment_method_id\": 1,\n   \"bin\": \"{{bin}}\",\n   \"amount\": 20000,\n   \"currency\": \"ARS\",\n   \"installments\": 1,\n   \"description\": \"8\",\n   \"payment_type\": \"distributed\",\n  \"sub_payments\": [\n      {\n         \"site_id\": \"{{subsite_1}}\",\n         \"installments\": 5,\n         \"amount\": 11000\n      },\n      {\n         \"site_id\": \"{{subsite_2}}\",\n         \"installments\": 6,\n         \"amount\": 9000\n        \n      }\n   ], \n   \"fraud_detection\": {\n        \"send_to_cs\": true,\n      \"bill_to\": {\n         \"city\": \"Buenos Aires\",\n         \"country\": \"AR\",\n         \"customer_id\": \"martinid\",\n         \"email\": \"review@decidir.com.ar\",\n         \"first_name\": \"martin\",\n         \"last_name\": \"paoletta\",\n         \"phone_number\": \"1547766329\",\n         \"postal_code\": \"1427\",\n         \"state\": \"BA\",\n         \"street1\": \"GARCIA DEL RIO 4041\",\n         \"ip_address\": \"190.210.214.252\"\n      },\n      \"purchase_totals\": {\n         \"currency\": \"ARS\",\n         \"amount\": 2\n      },\n      \"channel\": \"Web\",\n      \"customer_in_site\": {\n         \"days_in_site\": 243,\n         \"is_guest\": false,\n         \"password\": \"abracadabra\",\n         \"num_of_transactions\": 1,\n         \"cellphone_number\": \"12121\"\n      },\n      \"device_unique_id\": \"devicefingerprintid\",\n      \"travel_transaction_data\": {\n          \"reservation_code\": \"GJH784\",\n        \"third_party_booking\": false,\n        \"departure_city\": \"EZE\",\n        \"final_destination_city\": \"HND\",\n        \"international_flight\": true,\n        \"frequent_flier_number\": \"00000123\",\n        \"class_of_service\": \"class\" ,\n        \"day_of_week_of_flight\": 2,\n        \"week_of_year_of_flight\": 5,\n        \"airline_code\": \"AA\",\n        \"code_share\": \"SKYTEAM\",\n        \"decision_manager_travel\": {\n            \"complete_route\": \"EZE-LAX:LAX-HND\",\n            \"journey_type\": \"one way\",\n            \"departure_date\": {\n                \"departure_time\": \"2017-05-30T09:00Z\",\n                \"departure_zone\": \"GMT-0300\"\n            }\n        },\n        \"passengers\": [{\n            \"email\": \"juan@mail.com\",\n            \"first_name\": \"Juan\",\n            \"last_name\": \"Perez\",\n            \"passport_id\": \"412314851231\",\n            \"phone\": \"541134356768\",\n            \"passenger_status\": \"gold\",\n            \"passenger_type\": \"ADT\"\n            }\n         ],\n         \"airline_number_of_passengers\": 1\n      }\n   }\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v2/payments",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v2",
								"payments"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "1 - QAPI check DB",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"site\": \"{{site}}\",\n   \"charge_id\": \"{{chargeId}}\"\n}"
						},
						"url": {
							"raw": "{{qapi_url}}/tests/db",
							"host": [
								"{{qapi_url}}"
							],
							"path": [
								"tests",
								"db"
							]
						},
						"description": "POST check if an operation with these values exists in DB"
					},
					"response": []
				},
				{
					"name": "10i - QAPI unset CS",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fe55cb8e-ea14-4e56-bbe8-0d41feb5cb75",
								"type": "text/javascript",
								"exec": [
									"if (responseBody) {",
									"        ",
									"    tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"     if (!tests[\"Status code is 200\"]) {",
									"           ",
									"        console.log('No se recibio el status esperado. Se adjunta el cuerpo de la respuesta:');",
									"",
									"        console.log(responseBody);  ",
									"           ",
									"    }",
									"            ",
									"} else {",
									"           ",
									"    console.log('Error al no recibir respuesta.');",
									"           ",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"site\": \"{{site}}\"\n}"
						},
						"url": {
							"raw": "{{qapi_url}}/sites/cs",
							"host": [
								"{{qapi_url}}"
							],
							"path": [
								"sites",
								"cs"
							]
						},
						"description": "POST call to set CS in a certain site"
					},
					"response": []
				},
				{
					"name": "10j - Replicate site",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3defdd3b-a432-4d7d-8a2a-93681fe3fd2d",
								"type": "text/javascript",
								"exec": [
									"if (responseBody) {",
									"        ",
									"    tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"     if (!tests[\"Status code is 200\"]) {",
									"           ",
									"        console.log('No se recibio el status esperado. Se adjunta el cuerpo de la respuesta:');",
									"",
									"        console.log(responseBody);  ",
									"           ",
									"    }",
									"            ",
									"} else {",
									"           ",
									"    console.log('Error al no recibir respuesta.');",
									"           ",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"disabled": true
							},
							{
								"key": "apikey",
								"value": "{{keypublic}}",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"card_number\" : \"4507990000004905\",\n    \"card_expiration_month\" : \"07\",\n    \"card_expiration_year\" : \"17\", \n    \"security_code\" : \"234\",\n    \"card_holder_name\" : \"Valentin Santiago Gomez\",\n    \"card_holder_identification\" : {\n       \"type\" : \"dni\",\n       \"number\" : \"23968498\"\n    },\n    \"fraud_detection\" : {\n        \"device_unique_identifier\": \"12345\"\n    }\n}"
						},
						"url": {
							"raw": "{{coretx_url}}/replication/site/{{site}}",
							"host": [
								"{{coretx_url}}"
							],
							"path": [
								"replication",
								"site",
								"{{site}}"
							]
						},
						"description": null
					},
					"response": []
				}
			]
		},
		{
			"name": "Reestablecimiento de la configuraci√≥n - final",
			"description": "",
			"item": [
				{
					"name": "final - QAPI delete subsites",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a2506f15-e0bb-409c-8524-2ecdc38dbf4d",
								"type": "text/javascript",
								"exec": [
									"if (responseBody) {",
									"        ",
									"    tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"     if (!tests[\"Status code is 200\"]) {",
									"           ",
									"        console.log('No se recibio el status esperado. Se adjunta el cuerpo de la respuesta:');",
									"",
									"        console.log(responseBody);  ",
									"           ",
									"    }",
									"            ",
									"} else {",
									"           ",
									"    console.log('Error al no recibir respuesta.');",
									"           ",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"site\": \"{{site}}\"\n}"
						},
						"url": {
							"raw": "{{qapi_url}}/sites/subsites",
							"host": [
								"{{qapi_url}}"
							],
							"path": [
								"sites",
								"subsites"
							]
						},
						"description": "POST call to create subsites in a certain site"
					},
					"response": []
				},
				{
					"name": "final - Replicate site",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bb519c67-92f8-4c6c-94d8-5208ca669d28",
								"type": "text/javascript",
								"exec": [
									"if (responseBody) {",
									"        ",
									"    tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"     if (!tests[\"Status code is 200\"]) {",
									"           ",
									"        console.log('No se recibio el status esperado. Se adjunta el cuerpo de la respuesta:');",
									"",
									"        console.log(responseBody);  ",
									"           ",
									"    }",
									"            ",
									"} else {",
									"           ",
									"    console.log('Error al no recibir respuesta.');",
									"           ",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"disabled": true
							},
							{
								"key": "apikey",
								"value": "{{keypublic}}",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"card_number\" : \"4507990000004905\",\n    \"card_expiration_month\" : \"07\",\n    \"card_expiration_year\" : \"17\", \n    \"security_code\" : \"234\",\n    \"card_holder_name\" : \"Valentin Santiago Gomez\",\n    \"card_holder_identification\" : {\n       \"type\" : \"dni\",\n       \"number\" : \"23968498\"\n    },\n    \"fraud_detection\" : {\n        \"device_unique_identifier\": \"12345\"\n    }\n}"
						},
						"url": {
							"raw": "{{coretx_url}}/replication/site/{{site}}",
							"host": [
								"{{coretx_url}}"
							],
							"path": [
								"replication",
								"site",
								"{{site}}"
							]
						},
						"description": null
					},
					"response": []
				}
			]
		}
	]
}